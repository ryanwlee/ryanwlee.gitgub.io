{"version":3,"sources":["component/Login.js","component/MenuItems.js","component/recoilHelper.js","component/Base.js","helper/db.js","helper/constant.js","component/SaveModal.js","component/Adding/AddStudent.js","component/tableHelper.js","component/DeleteModal.js","component/ActiveStudents.js","helper/util.js","component/DetailStudent.js","component/Adding/CopyStudent.js","component/Adding/EditStudent.js","component/ErrorPage.js","print/ComponentToPrint.js","print/IdCard.js","component/Attendance.js","component/AttendanceKeypad.js","component/AttendanceTable.js","component/InactiveStudents.js","component/Absent.js","component/Home.js","component/TakePicture.js","component/Settings.js","component/BeltUpdate.js","component/ActiveStudentsByBelt.js","print/PadFormToPrint.js","print/PadForm.js","print/InvoiceToPrint.js","print/Invoice.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Alert","props","elevation","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","useState","userName","setUserName","password","setPassword","server","setServer","React","open","setOpen","errorUserName","setErrorUserName","errorPassword","setErrorPassword","errorServer","setErrorServer","useCookies","setCookie","history","useHistory","handleSubmit","e","preventDefault","length","axios","post","JSON","stringify","headers","mode","response","status","data","path","maxAge","localStorage","setItem","push","handleClose","event","reason","Container","component","maxWidth","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","onBlur","includes","error","helperText","type","Button","onClick","Box","mt","MenuItems","iconColor","List","to","style","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","replace","Collapse","in","timeout","unmountOnExit","IdState","atom","key","default","CurStudentState","selector","get","isDone","GetCurStudentState","SnackBarState","openSuccess","openError","openError2","openErrorField","appBarBackgroundColor","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","fixedHeight","Base","cookies","removeCookie","auth","pathname","useRecoilState","snackBarState","setSnackBarState","handleCloseError","handleCloseError2","handleCloseErrorField","AppBar","clsx","Toolbar","IconButton","edge","Menu","noWrap","Drawer","ChevronLeft","container","Grid","item","xs","children","pt","host","parse","getItem","addNewStudent","student","getAllStudents","getAllStudentsByBelt","belt","getStudent","activeStudent","active","deleteStudent","deleteStudents","selectedIds","editStudent","attendStudents","students","date","nowDate","moment","format","code","getStudentAttendance","studentid","getOnlyStudentsName","getAllAttendance","deleteAttendance","deleteAttendances","getAllInactiveStudents","getNumBelts","getNumStudents","savePicture","picture","getPicture","getConfigInfo","setConfigInfo","beltSetting","academyName","address","phone","city","postalcode","province","email","businessnumber","updateBelt","lastbelttest","getStudentLastAttendance","getAdmin","setAdmin","username","passwordinfo","getItems","addItem","logging","message","time","initState","firstname","lastname","sex","dateofbirth","age","phonecell","phonehome","lessonclass","studentyear","studentaddress","howdidyouhear","school","medicalhistory","parent1firstname","parent1lastname","parent1occupation","parent1email","parent1phonecell","parent2firstname","parent2lastname","parent2occupation","parent2email","parent2phonecell","beltsize","startdate","enddate","tuition","carestudent","preauth","etran","creditcard","note","beltOptions","Select","labelId","MenuItem","beltsA","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","beltsB","b44","b45","b46","beltsClassA","class1","class2","class3","class4","class5","beltsClassB","beltsClassMapperA","beltsClassMapperB","beltMapper","beltColorMapperA","numValue","parseInt","fontColor","beltColorMapperB","beltUpdate","num","SaveModal","saveHandler","handleModalClose","handleSave","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","line","field","formControl","minWidth","formControlHalf","formControlLong","formControlLabel","buttonContainer","AddStudent","setOpenError","setOpenErrorField","saveConfirmOpen","setSaveConfirmOpen","setBeltSetting","useEffect","setConfig","result","beltsetting","setStudent","setError","validate","tempError","trim","isError","Object","values","validateEach","handleChange","FormControl","InputLabel","FormHelperText","InputLabelProps","shrink","defaultCountry","disableAreaCodes","countryCodeEditable","disableDropdown","Divider","marginBottom","gutterBottom","InputProps","startAdornment","InputAdornment","FormControlLabel","control","Checkbox","checked","multiline","createData","payment","createDataAttendance","lastdate","action","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","headCellsAttendance","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","direction","property","visuallyHidden","EnhancedAttendanceTableHead","useToolbarStyles","paddingLeft","highlight","lighten","light","text","dark","flex","EnhancedTableToolbar","selected","refetch","setSelected","handleDeleteAll","join","Tooltip","EnhancedTableToolbarAttendance","dobYearRemover","dob","dobParts","split","DeleteModal","deleteHandler","handleDelete","maxHeight","table","border","clip","top","ActiveStudents","rows","setRows","setId","setOrder","setOrderBy","modalOpen","setModalOpen","undefined","modalDeleteId","handleNavigate","paymentHelper","row","resultBelt","orderByActive","orderBy_","orderType_","orderType","tableData","setAllStudents","handleRequestSort","isAsc","Paper","tempSelected","selectedId","TableContainer","Table","size","newSelecteds","n","TableBody","isItemSelected","indexOf","isSelected","hover","role","tabIndex","selectedIndex","newSelected","concat","slice","handleClick","scope","calculateAge","birthday","diff","absentTypeCalculator","days","textField","page","section","firstSection","firstSectionLeft","firstSectionRight","firstSectionField","secondSection","borderBottom","paddingBottom","secondSectionField","thirdSection","thirdBox","emptyLeft","thirdSectionField","thirdRow","flexColumn","fourthSection","fourthRow","fourthSectionField","subHeader","noteSection","overflowY","rowChip","textAlign","chip","underline","capturedImage","captureButton","DetailStudent","setLoading","attendance","setAttendance","setPicture","setCurStudent","deleteConfirmOpen","setDeleteConfirmOpen","useParams","handleActive","setStudentCall","resultAttendance","resultPicture","src","Chip","wordBreak","obj","displayAttendance","CopyStudent","loading","curStudent","useRecoilValue","EditStudent","ErrorPage","Style","renderPage","fontSize","renderCard","renderText","fontWeight","beltRow","sectionContainer","gap","checkbox","wrap","flexWrap","ComponentToPrint","this","beltsClass","FormGroup","color1","color2","color3","background","Component","divButton","IdCard","componentRef","useRef","handlePrint","useReactToPrint","current","pageStyle","resultConfig","ref","camera","footer","manualInput","manualInputTextField","manualInputButton","methods","scannerInputTextField","dateText","Attendance","qrResult","setQrResult","inputMethod","setInputMethod","setStudents","setDisplay","manualStudent","setManualStudent","scannerStudent","setScannerStudent","inputElement","scannerTimeout","setScannerTimeout","setDate","tempStudents","focus","handleScannerScan","strip","isExist","isScanned","temp","handleDate","delay","onError","err","console","onScan","onDelete","FormLabel","RadioGroup","Radio","clearTimeout","timeoutId","setTimeout","handleScannerChange","autoFocus","handleManualScan","minHeight","buttonRow","keypadButton","borderRadius","AttendanceKeypad","AttendanceTable","rowsAttendance","setRowsAttendance","orderAttendance","setOrderAttendance","orderByAttendance","setOrderByAttendance","selectedAttendance","setSelectedAttendance","pageAttendance","setPageAttendance","rowsPerPageAttendance","setRowsPerPageAttendance","setModalDeleteId","handleDeleteModal","setAllData","resultStudentsNames","tempStudentsNames","tempAttendances","emptyRows","Math","min","floor","random","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","InactiveStudents","handleEdit","orderByInactive","stack","Home","week1","week2","week3","more","stats","setStats","getAllAbsents","tempResult","none","Stack","belts","totalNum","getAllStats","beltClass","total1","total2","total3","total4","total5","numBeltsResult","numBelts","m","beltCount","hasOwnProperty","numStudents","log","rows1","entries","rows2","rows3","rows4","rows5","videoConstraints","facingMode","webcamContainer","imageContainer","TakePicture","webcamRef","capture","useCallback","imageSrc","getScreenshot","audio","screenshotFormat","saveButton","Settings","setAcademyname","setAddress","setPhone","setUsername","setBusinessnumber","setCity","setProvince","setEmail","setPostalcode","academyname","resultAdmin","result2","BeltUpdate","qr","updatedBelt","ActiveStudentsByBelt","orderByBelt","header","section2","sectionHeader","sectionRow","sectionRowDense","sectionRowNoMargin","underlineNoMin","underlineMid","underlineMidHigh","underlineLong","divider","sectionBox","input","PadFormToPrint","config","readOnly","borderBottomWidth","pageBreakBefore","PadForm","section1","subsection","section2header","section2row","dividerSemi","section3","totalPrice","section4","InvoiceToPrint","formatter","Intl","NumberFormat","currency","items","invoiceDate","dueDate","price","reduce","prev","parseFloat","newItem","addButton","list","eachItemAttribute","deleteButton","selectField","Invoice","itemName","setItemName","setPrice","setDueDate","newAddItem","setNewAddItem","listItems","setListItems","itemname","handleAdd","eachItem","splice","App","basePath","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2273a136.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    Link,\n    Box,\n    Typography,\n    Snackbar,\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://ryanwlee.github.io/\">\n                Academy Helper\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const [userName, setUserName] = useState('');\n    const [password, setPassword] = useState('');\n    const [server, setServer] = useState('');\n    const [open, setOpen] = React.useState(false);\n    const [errorUserName, setErrorUserName] = useState('');\n    const [errorPassword, setErrorPassword] = useState('');\n    const [errorServer, setErrorServer] = useState('');\n    const [cookies, setCookie] = useCookies(['auth']);\n    let history = useHistory();\n\n    const handleUserName = (e) => {\n        setUserName(e.target.value);\n    };\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    };\n    const handleServer = (e) => {\n        setServer(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (\n            errorUserName.length > 0 ||\n            errorPassword.length > 0 ||\n            errorServer.length > 0\n        ) {\n            setOpen(true);\n        }\n\n        try {\n            const response = await axios.post(\n                `${server}/signin`,\n                JSON.stringify({\n                    userName,\n                    password,\n                }),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    mode: 'no-cors',\n                }\n            );\n\n            if (\n                response &&\n                response.status === 200 &&\n                response.data === 'success'\n            ) {\n                setCookie('auth', true, { path: '/', maxAge: 1200 });\n                localStorage.setItem(\n                    'serverUrl',\n                    JSON.stringify({\n                        server,\n                    })\n                );\n                history.push('/home');\n            } else {\n                setOpen(true);\n            }\n        } catch (err) {\n            setOpen(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const handleVerifyUserName = () => {\n        if (userName.includes(' ')) {\n            setErrorUserName(\n                'Username contains space. Please put valid username.'\n            );\n        } else if (userName.length === 0) {\n            setErrorUserName('Username is required.');\n        } else {\n            setErrorUserName('');\n        }\n        return;\n    };\n\n    const handleVerifyPassword = () => {\n        if (password.includes(' ')) {\n            setErrorPassword(\n                'Password contains space. Please put valid password.'\n            );\n        } else if (password.length === 0) {\n            setErrorPassword('Password is required.');\n        } else {\n            setErrorPassword('');\n        }\n        return;\n    };\n\n    const handleVerifyServer = () => {\n        if (server.includes(' ')) {\n            setErrorServer(\n                'Server address contains space. Please put valid server address.'\n            );\n        } else if (server.length === 0) {\n            setErrorServer('Server address is required.');\n        } else {\n            setErrorServer('');\n        }\n        return;\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Snackbar\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"error\">\n                    Username, password, or server address is wrong. Please try\n                    again!\n                </Alert>\n            </Snackbar>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        onChange={handleUserName}\n                        onBlur={handleVerifyUserName}\n                        error={errorUserName.length !== 0}\n                        helperText={errorUserName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handlePassword}\n                        onBlur={handleVerifyPassword}\n                        error={errorPassword.length !== 0}\n                        helperText={errorPassword}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"server\"\n                        label=\"Server\"\n                        name=\"server\"\n                        autoComplete=\"server\"\n                        onChange={handleServer}\n                        onBlur={handleVerifyServer}\n                        error={errorServer.length !== 0}\n                        helperText={errorServer}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n","import React from 'react';\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Collapse,\n} from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { Link } from 'react-router-dom';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\n\nexport default function MenuItems() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    const iconColor = 'white';\n\n    return (\n        <List>\n            <Link\n                to=\"/home\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <DashboardIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Dashboard\" />\n                </ListItem>\n            </Link>\n            <Link\n                to=\"/addstudent\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <PersonAddIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Add student\" />\n                </ListItem>\n            </Link>\n            <Link\n                to=\"/activestudents\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n                replace\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <PeopleIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Active students\" />\n                </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                    <AssignmentIcon style={{ color: iconColor }} />\n                </ListItemIcon>\n                <ListItemText primary=\"Attendance\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <Link\n                    to=\"/attendance\"\n                    style={{ color: 'inherit', textDecoration: 'none' }}\n                >\n                    <ListItem button>\n                        <ListItemText primary=\"Attendance Check\" />\n                    </ListItem>\n                </Link>\n                <Link\n                    to=\"/attendancekeypad\"\n                    style={{ color: 'inherit', textDecoration: 'none' }}\n                >\n                    <ListItem button>\n                        <ListItemText primary=\"Attendance Keypad\" />\n                    </ListItem>\n                </Link>\n                <Link\n                    to=\"/attendancetable\"\n                    style={{ color: 'inherit', textDecoration: 'none' }}\n                >\n                    <ListItem button>\n                        <ListItemText primary=\"Attendance Table\" />\n                    </ListItem>\n                </Link>\n                <Link\n                    to=\"/absent\"\n                    style={{ color: 'inherit', textDecoration: 'none' }}\n                >\n                    <ListItem button>\n                        <ListItemText primary=\"Absent Students\" />\n                    </ListItem>\n                </Link>\n            </Collapse>\n            <Link\n                to=\"/inactivestudents\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <RemoveCircleIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Inactive students\" />\n                </ListItem>\n            </Link>\n            <Link\n                to=\"/beltupdate\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <EmojiEventsIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Belt Update\" />\n                </ListItem>\n            </Link>\n            <Link\n                to=\"/settings\"\n                style={{ color: 'inherit', textDecoration: 'none' }}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <SettingsIcon style={{ color: iconColor }} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n            </Link>\n        </List>\n    );\n}\n","import { atom, selector } from 'recoil';\n\n// get / set for id\nexport const IdState = atom({\n    key: 'id',\n    default: 0,\n});\n\nexport const GetIdState = selector({\n    key: 'getIdState',\n    get: ({ get }) => {\n        const id = get(IdState);\n        return id;\n    },\n});\n\n// get / set for edit - student information\nexport const CurStudentState = atom({\n    key: 'curStudent',\n    default: { isDone: false },\n});\n\nexport const GetCurStudentState = selector({\n    key: 'getCurStudentState',\n    get: ({ get }) => {\n        const curStudent = get(CurStudentState);\n        return curStudent;\n    },\n});\n\n// snack bar\nexport const SnackBarState = atom({\n    key: 'snackBarState',\n    default: {\n        openSuccess: false,\n        openError: false,\n        openError2: false,\n        openErrorField: false,\n    },\n});\n\nexport const GetSnackBarState = selector({\n    key: 'getSnackBarState',\n    get: ({ get }) => {\n        const snackBarState = get(SnackBarState);\n        return snackBarState;\n    },\n});\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    CssBaseline,\n    Drawer,\n    Box,\n    AppBar,\n    Toolbar,\n    Typography,\n    IconButton,\n    Container,\n    Grid,\n    Link,\n    Snackbar,\n    Button,\n} from '@material-ui/core';\nimport {\n    Menu as MenuIcon,\n    ChevronLeft as ChevronLeftIcon,\n} from '@material-ui/icons';\nimport MenuItems from './MenuItems';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport { useCookies } from 'react-cookie';\nimport { useHistory } from 'react-router-dom';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://ryanwlee.github.io/\">\n                Academy Helper\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst drawerWidth = 240;\n\nconst appBarBackgroundColor = '#0077b6';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        backgroundColor: appBarBackgroundColor,\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        backgroundColor: appBarBackgroundColor,\n        color: 'white',\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n        paddingTop: '20px',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Base(props) {\n    // cookie\n    const history = useHistory();\n    const [cookies, setCookie, removeCookie] = useCookies(['auth']);\n    if (!cookies.auth) {\n        history.push({ pathname: `/academyhelper/signin` });\n    } else {\n        setCookie('auth', true, { path: '/academyhelper', maxAge: 1200 });\n    }\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // Snackbars\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openError: false });\n    };\n\n    const handleCloseError2 = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openError2: false });\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openSuccess: false });\n    };\n\n    const handleCloseErrorField = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openErrorField: false });\n    };\n\n    const handleLogout = () => {\n        removeCookie('auth');\n        history.push({ pathname: `/academyhelper/signin` });\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n\n            <Snackbar\n                open={snackBarState.openSuccess}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Successful!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={snackBarState.openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={snackBarState.openError2}\n                autoHideDuration={6000}\n                onClose={handleCloseError2}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError2} severity=\"error\">\n                    Already attended!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={snackBarState.openErrorField}\n                autoHideDuration={6000}\n                onClose={handleCloseErrorField}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseErrorField} severity=\"error\">\n                    Some required fields are not valid\n                </Alert>\n            </Snackbar>\n\n            <AppBar\n                position=\"absolute\"\n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(\n                            classes.menuButton,\n                            open && classes.menuButtonHidden\n                        )}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        noWrap\n                        className={classes.title}\n                    >\n                        {props.title}\n                    </Typography>\n                    <Button color=\"inherit\" onClick={() => handleLogout()}>\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                classes={{\n                    paper: clsx(\n                        classes.drawerPaper,\n                        !open && classes.drawerPaperClose\n                    ),\n                }}\n                open={open}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon style={{ color: 'white' }} />\n                    </IconButton>\n                </div>\n                <MenuItems />\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            {props.children}\n                        </Grid>\n                    </Grid>\n                    <Box pt={4}>\n                        <Copyright />\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n","import axios from 'axios';\nimport moment from 'moment';\n\nconst host = JSON.parse(localStorage.getItem('serverUrl'));\n\nexport const addNewStudent = async (student) => {\n    const response = await axios.post(\n        `${host}/addnewstudent`,\n        JSON.stringify(student),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getAllStudents = async () => {\n    const response = await axios.get(`${host}/getallstudents`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getAllStudentsByBelt = async (belt) => {\n    const response = await axios.get(\n        `${host}/getallstudentsbybelt?belt=${belt}`\n    );\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getStudent = async (id) => {\n    const response = await axios.get(`${host}/getstudent?id=${id}`);\n    if (response && response.status === 200) {\n        return response.data[0];\n    } else {\n        return false;\n    }\n};\n\nexport const activeStudent = async (id, active) => {\n    const response = await axios.get(\n        `${host}/activestudent?id=${id}&active=${active}`\n    );\n    if (response && response.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const deleteStudent = async (id) => {\n    const response = await axios.get(`${host}/deletestudent?id=${id}`);\n    if (response && response.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const deleteStudents = async (selectedIds) => {\n    const response = await axios.get(\n        `${host}/deletestudents?id=${selectedIds}`\n    );\n    if (response && response.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const editStudent = async (student) => {\n    const response = await axios.post(\n        `${host}/editstudent`,\n        JSON.stringify(student),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const attendStudents = async (students, date) => {\n    const nowDate = moment(date).format('YYYYMMDD');\n    try {\n        const response = await axios.post(\n            `${host}/attendStudents`,\n            JSON.stringify({ students, nowDate }),\n            {\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'no-cors',\n            }\n        );\n        if (\n            response &&\n            response.status === 200 &&\n            response.data === 'success'\n        ) {\n            return 'success';\n        } else {\n            return 'fail';\n        }\n    } catch (e) {\n        if (e.response.data.code === '23505') {\n            return 'fail2';\n        }\n        return 'fail';\n    }\n};\n\nexport const getStudentAttendance = async (studentid) => {\n    const response = await axios.get(\n        `${host}/getStudentAttendance?studentid=${studentid}`\n    );\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const getOnlyStudentsName = async () => {\n    const response = await axios.get(`${host}/getonlystudentsname`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getAllAttendance = async () => {\n    const response = await axios.get(`${host}/getallattendance`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const deleteAttendance = async (id) => {\n    const response = await axios.get(`${host}/deleteattendance?id=${id}`);\n    if (response && response.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const deleteAttendances = async (selectedIds) => {\n    const response = await axios.get(\n        `${host}/deleteattendances?id=${selectedIds}`\n    );\n    if (response && response.status === 200) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const getAllInactiveStudents = async () => {\n    const response = await axios.get(`${host}/getallinactivestudents`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getNumBelt = async (color) => {\n    const response = await axios.get(`${host}/getnumbelt?color=${color}`);\n    if (response && response.status === 200) {\n        return response.data[0];\n    } else {\n        return false;\n    }\n};\n\nexport const getNumBelts = async () => {\n    const response = await axios.get(`${host}/getnumbelts`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const getNumStudents = async (color) => {\n    const response = await axios.get(`${host}/getnumstudents`);\n    if (response && response.status === 200) {\n        return response.data[0];\n    } else {\n        return false;\n    }\n};\n\nexport const savePicture = async (picture) => {\n    const response = await axios.post(\n        `${host}/savepicture`,\n        JSON.stringify(picture),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getPicture = async (studentid) => {\n    const response = await axios.get(\n        `${host}/getstudentpicture?studentid=${studentid}`\n    );\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const getConfigInfo = async () => {\n    const response = await axios.get(`${host}/getconfiginfo`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const setConfigInfo = async (\n    beltSetting,\n    academyName,\n    address,\n    phone,\n    city,\n    postalcode,\n    province,\n    email,\n    businessnumber\n) => {\n    const response = await axios.post(\n        `${host}/setconfiginfo`,\n        JSON.stringify({\n            beltSetting,\n            academyName,\n            address,\n            phone,\n            city,\n            postalcode,\n            province,\n            email,\n            businessnumber,\n        }),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const updateBelt = async (id, belt, date) => {\n    const response = await axios.post(\n        `${host}/updateBelt`,\n        JSON.stringify({ id, belt, lastbelttest: date }),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getLastBeltTest = async (studentid) => {\n    const response = await axios.get(\n        `${host}/getlastbelttest?studentid=${studentid}`\n    );\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const getStudentLastAttendance = async () => {\n    const response = await axios.get(`${host}/getstudentlastattendance`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return false;\n    }\n};\n\nexport const getAdmin = async () => {\n    const response = await axios.get(`${host}/getadmin`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const setAdmin = async (username, passwordinfo) => {\n    const response = await axios.post(\n        `${host}/setadmin`,\n        JSON.stringify({ username, passwordinfo }),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const getItems = async () => {\n    const response = await axios.get(`${host}/getitems`);\n    if (response && response.status === 200) {\n        return response.data;\n    } else {\n        return 'fail';\n    }\n};\n\nexport const addItem = async (item) => {\n    const response = await axios.post(`${host}/additem`, JSON.stringify(item), {\n        headers: { 'Content-Type': 'application/json' },\n        mode: 'no-cors',\n    });\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n\nexport const logging = async (message) => {\n    const response = await axios.post(\n        `${host}/logging`,\n        JSON.stringify({\n            message,\n            time: `[${moment().format('MM/DD/YYYY, h:mm:ss a')}]`,\n        }),\n        {\n            headers: { 'Content-Type': 'application/json' },\n            mode: 'no-cors',\n        }\n    );\n    if (response && response.status === 200 && response.data === 'success') {\n        return 'success';\n    } else {\n        return 'fail';\n    }\n};\n","import { Select, MenuItem } from '@material-ui/core';\nimport moment from 'moment';\n\nexport const initState = {\n    firstname: '',\n    lastname: '',\n    sex: '',\n    dateofbirth: '',\n    age: '',\n    email: '',\n    phonecell: '',\n    phonehome: '',\n    lessonclass: '',\n    belt: '',\n    studentyear: '',\n    studentaddress: '',\n    city: '',\n    province: '',\n    postalcode: '',\n    howdidyouhear: '',\n    school: '',\n    medicalhistory: '',\n    parent1firstname: '',\n    parent1lastname: '',\n    parent1occupation: '',\n    parent1email: '',\n    parent1phonecell: '',\n    parent2firstname: '',\n    parent2lastname: '',\n    parent2occupation: '',\n    parent2email: '',\n    parent2phonecell: '',\n    beltsize: '',\n    lastbelttest: moment().format('YYYY-MM-DD'),\n    startdate: '',\n    enddate: '',\n    tuition: '',\n    carestudent: false,\n    preauth: false,\n    etran: false,\n    creditcard: false,\n    note: '',\n};\n\nexport const beltOptions = (onChange, onBlur, value, type = 'a') => {\n    if (type === 'a') {\n        return (\n            <Select\n                labelId=\"beltSelect\"\n                id=\"beltSelect\"\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n            >\n                <MenuItem value={'b01'}>1 LT White Belt</MenuItem>\n                <MenuItem value={'b02'}>2 LT Yellow Belt</MenuItem>\n                <MenuItem value={'b03'}>3 LT Green Belt</MenuItem>\n                <MenuItem value={'b04'}>4 LT Blue Belt</MenuItem>\n                <MenuItem value={'b05'}>5 LT Red Belt</MenuItem>\n                <MenuItem value={'b06'}>6 LT Black Belt</MenuItem>\n                <MenuItem value={'b07'}>7 White Belt</MenuItem>\n                <MenuItem value={'b08'}>8 Yellow Belt</MenuItem>\n                <MenuItem value={'b09'}>9 Orang Belt</MenuItem>\n                <MenuItem value={'b10'}>10 Green Belt</MenuItem>\n                <MenuItem value={'b11'}>11 Blue Belt</MenuItem>\n                <MenuItem value={'b12'}>12 Purple Belt</MenuItem>\n                <MenuItem value={'b13'}>13 Brown Belt</MenuItem>\n                <MenuItem value={'b14'}>14 Red Belt</MenuItem>\n                <MenuItem value={'b15'}>15 H.Red Belt</MenuItem>\n                <MenuItem value={'b16'}>16 Poom Belt</MenuItem>\n                <MenuItem value={'b17'}>17 Black Belt 1-6</MenuItem>\n                <MenuItem value={'b18'}>18 Black Belt 1-5</MenuItem>\n                <MenuItem value={'b19'}>19 Black Belt 1-4</MenuItem>\n                <MenuItem value={'b20'}>20 Black Belt 1-3</MenuItem>\n                <MenuItem value={'b21'}>21 Black Belt 1-2 </MenuItem>\n                <MenuItem value={'b22'}>22 Black Belt 1-1</MenuItem>\n                <MenuItem value={'b23'}>23 Black Belt 2-9</MenuItem>\n                <MenuItem value={'b24'}>24 Black Belt 2-8</MenuItem>\n                <MenuItem value={'b25'}>25 Black Belt 2-7</MenuItem>\n                <MenuItem value={'b26'}>26 Black Belt 2-6</MenuItem>\n                <MenuItem value={'b27'}>27 Black Belt 2-5</MenuItem>\n                <MenuItem value={'b28'}>28 Black Belt 2-4</MenuItem>\n                <MenuItem value={'b29'}>29 Black Belt 2-3</MenuItem>\n                <MenuItem value={'b30'}>30 Black Belt 2-2</MenuItem>\n                <MenuItem value={'b31'}>31 Black Belt 2-1</MenuItem>\n                <MenuItem value={'b32'}>32 Black Belt 3-12</MenuItem>\n                <MenuItem value={'b33'}>33 Black Belt 3-11</MenuItem>\n                <MenuItem value={'b34'}>34 Black Belt 3-10</MenuItem>\n                <MenuItem value={'b35'}>35 Black Belt 3-9</MenuItem>\n                <MenuItem value={'b36'}>36 Black Belt 3-8</MenuItem>\n                <MenuItem value={'b37'}>37 Black Belt 3-7</MenuItem>\n                <MenuItem value={'b38'}>38 Black Belt 3-6</MenuItem>\n                <MenuItem value={'b39'}>39 Black Belt 3-5</MenuItem>\n                <MenuItem value={'b40'}>40 Black Belt 3-4</MenuItem>\n                <MenuItem value={'b41'}>41 Black Belt 3-3</MenuItem>\n                <MenuItem value={'b42'}>42 Black Belt 3-2</MenuItem>\n                <MenuItem value={'b43'}>43 Black Belt 3-1</MenuItem>\n            </Select>\n        );\n    } else {\n        return (\n            <Select\n                labelId=\"beltSelect\"\n                id=\"beltSelect\"\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n            >\n                <MenuItem value={'b01'}>1 LT White Belt</MenuItem>\n                <MenuItem value={'b02'}>2 LT Yellow Belt</MenuItem>\n                <MenuItem value={'b03'}>3 LT Green Belt</MenuItem>\n                <MenuItem value={'b04'}>4 LT Blue Belt</MenuItem>\n                <MenuItem value={'b05'}>5 LT Red Belt</MenuItem>\n                <MenuItem value={'b06'}>6 LT Black Belt</MenuItem>\n                <MenuItem value={'b07'}>7 White Belt</MenuItem>\n                <MenuItem value={'b08'}>8 Yellow Belt</MenuItem>\n                <MenuItem value={'b09'}>9 Orange Belt</MenuItem>\n                <MenuItem value={'b10'}>10 Green Tip</MenuItem>\n                <MenuItem value={'b11'}>11 Green Belt</MenuItem>\n                <MenuItem value={'b12'}>12 Blue Tip</MenuItem>\n                <MenuItem value={'b13'}>13 Blue Belt</MenuItem>\n                <MenuItem value={'b14'}>14 Red Tip</MenuItem>\n                <MenuItem value={'b15'}>15 Red Belt</MenuItem>\n                <MenuItem value={'b16'}>16 Black Tip</MenuItem>\n                <MenuItem value={'b17'}>17 Poom 1</MenuItem>\n                <MenuItem value={'b18'}>18 Poom 2</MenuItem>\n                <MenuItem value={'b19'}>19 Poom 3</MenuItem>\n                <MenuItem value={'b20'}>20 Black Belt 1-6</MenuItem>\n                <MenuItem value={'b21'}>21 Black Belt 1-5</MenuItem>\n                <MenuItem value={'b22'}>22 Black Belt 1-4</MenuItem>\n                <MenuItem value={'b23'}>23 Black Belt 1-3</MenuItem>\n                <MenuItem value={'b24'}>24 Black Belt 1-2 </MenuItem>\n                <MenuItem value={'b25'}>25 Black Belt 1-1</MenuItem>\n                <MenuItem value={'b26'}>26 Black Belt 2-9</MenuItem>\n                <MenuItem value={'b27'}>27 Black Belt 2-8</MenuItem>\n                <MenuItem value={'b28'}>28 Black Belt 2-7</MenuItem>\n                <MenuItem value={'b29'}>29 Black Belt 2-6</MenuItem>\n                <MenuItem value={'b30'}>30 Black Belt 2-5</MenuItem>\n                <MenuItem value={'b31'}>31 Black Belt 2-4</MenuItem>\n                <MenuItem value={'b32'}>32 Black Belt 2-3</MenuItem>\n                <MenuItem value={'b33'}>33 Black Belt 2-2</MenuItem>\n                <MenuItem value={'b34'}>34 Black Belt 2-1</MenuItem>\n                <MenuItem value={'b35'}>35 Black Belt 3-12</MenuItem>\n                <MenuItem value={'b36'}>36 Black Belt 3-11</MenuItem>\n                <MenuItem value={'b37'}>37 Black Belt 3-10</MenuItem>\n                <MenuItem value={'b38'}>38 Black Belt 3-9</MenuItem>\n                <MenuItem value={'b39'}>39 Black Belt 3-8</MenuItem>\n                <MenuItem value={'b40'}>40 Black Belt 3-7</MenuItem>\n                <MenuItem value={'b41'}>41 Black Belt 3-6</MenuItem>\n                <MenuItem value={'b42'}>42 Black Belt 3-5</MenuItem>\n                <MenuItem value={'b43'}>43 Black Belt 3-4</MenuItem>\n                <MenuItem value={'b44'}>44 Black Belt 3-3</MenuItem>\n                <MenuItem value={'b45'}>45 Black Belt 3-2</MenuItem>\n                <MenuItem value={'b46'}>46 Black Belt 3-1</MenuItem>\n            </Select>\n        );\n    }\n};\n\nexport const beltsA = {\n    b01: 'LT White Belt',\n    b02: 'LT Yellow Belt',\n    b03: 'LT Green Belt',\n    b04: 'LT Blue Belt',\n    b05: 'LT Red Belt',\n    b06: 'LT Black Belt',\n    b07: 'White Belt',\n    b08: 'Yellow Belt',\n    b09: 'Orange Belt',\n    b10: 'Green Belt',\n    b11: 'Blue Belt',\n    b12: 'Purple Belt',\n    b13: 'Brown Belt',\n    b14: 'Red Belt',\n    b15: 'High Red Belt',\n    b16: 'Poom Belt',\n    b17: 'Black 1-6',\n    b18: 'Black 1-5',\n    b19: 'Black 1-4',\n    b20: 'Black 1-3',\n    b21: 'Black 1-2',\n    b22: 'Black 1-1',\n    b23: 'Black 2-9',\n    b24: 'Black 2-8',\n    b25: 'Black 2-7',\n    b26: 'Black 2-6',\n    b27: 'Black 2-5',\n    b28: 'Black 2-4',\n    b29: 'Black 2-3',\n    b30: 'Black 2-2',\n    b31: 'Black 2-1',\n    b32: 'Black 3-12',\n    b33: 'Black 3-11',\n    b34: 'Black 3-10',\n    b35: 'Black 3-9',\n    b36: 'Black 3-8',\n    b37: 'Black 3-7',\n    b38: 'Black 3-6',\n    b39: 'Black 3-5',\n    b40: 'Black 3-4',\n    b41: 'Black 3-3',\n    b42: 'Black 3-2',\n    b43: 'Black 3-1',\n};\n\nexport const beltsB = {\n    b01: 'LT White Belt',\n    b02: 'LT Yellow Belt',\n    b03: 'LT Green Belt',\n    b04: 'LT Blue Belt',\n    b05: 'LT Red Belt',\n    b06: 'LT Black Belt',\n    b07: 'White Belt',\n    b08: 'Yellow Belt',\n    b09: 'Orange Belt',\n    b10: 'Green Tip',\n    b11: 'Green Belt',\n    b12: 'Blue Tip',\n    b13: 'Blue Belt',\n    b14: 'Red Tip',\n    b15: 'Red Belt',\n    b16: 'Black Tip',\n    b17: 'Poom 1',\n    b18: 'Poom 2',\n    b19: 'Poom 3',\n    b20: 'Black 1-6',\n    b21: 'Black 1-5',\n    b22: 'Black 1-4',\n    b23: 'Black 1-3',\n    b24: 'Black 1-2',\n    b25: 'Black 1-1',\n    b26: 'Black 2-9',\n    b27: 'Black 2-8',\n    b28: 'Black 2-7',\n    b29: 'Black 2-6',\n    b30: 'Black 2-5',\n    b31: 'Black 2-4',\n    b32: 'Black 2-3',\n    b33: 'Black 2-2',\n    b34: 'Black 2-1',\n    b35: 'Black 3-12',\n    b36: 'Black 3-11',\n    b37: 'Black 3-10',\n    b38: 'Black 3-9',\n    b39: 'Black 3-8',\n    b40: 'Black 3-7',\n    b41: 'Black 3-6',\n    b42: 'Black 3-5',\n    b43: 'Black 3-4',\n    b44: 'Black 3-3',\n    b45: 'Black 3-2',\n    b46: 'Black 3-1',\n};\n\nexport const beltsClassA = {\n    class1: ['b01', 'b02', 'b03', 'b04', 'b05', 'b06'],\n    class2: [\n        'b07',\n        'b08',\n        'b09',\n        'b10',\n        'b11',\n        'b12',\n        'b13',\n        'b14',\n        'b15',\n        'b16',\n    ],\n    class3: ['b17', 'b18', 'b19', 'b20', 'b21', 'b22'],\n    class4: ['b23', 'b24', 'b25', 'b26', 'b27', 'b28', 'b29', 'b30', 'b31'],\n    class5: [\n        'b32',\n        'b33',\n        'b34',\n        'b35',\n        'b36',\n        'b37',\n        'b38',\n        'b39',\n        'b40',\n        'b41',\n        'b42',\n        'b43',\n    ],\n};\n\nexport const beltsClassB = {\n    class1: ['b01', 'b02', 'b03', 'b04', 'b05', 'b06'],\n    class2: [\n        'b07',\n        'b08',\n        'b09',\n        'b10',\n        'b11',\n        'b12',\n        'b13',\n        'b14',\n        'b15',\n        'b16',\n        'b17',\n        'b18',\n        'b19',\n    ],\n    class3: ['b20', 'b21', 'b22', 'b23', 'b24', 'b25'],\n    class4: [\n        'b26',\n        'b27',\n        'b28',\n        'b29',\n        'b30',\n        'b31',\n        'b29',\n        'b32',\n        'b33',\n        'b34',\n    ],\n    class5: [\n        'b35',\n        'b36',\n        'b37',\n        'b38',\n        'b39',\n        'b40',\n        'b41',\n        'b42',\n        'b43',\n        'b44',\n        'b45',\n        'b46',\n    ],\n};\n\nexport const beltsClassMapperA = (belt) => {\n    const class1 = ['b01', 'b02', 'b03', 'b04', 'b05', 'b06'];\n    const class2 = [\n        'b07',\n        'b08',\n        'b09',\n        'b10',\n        'b11',\n        'b12',\n        'b13',\n        'b14',\n        'b15',\n        'b16',\n    ];\n    const class3 = ['b17', 'b18', 'b19', 'b20', 'b21', 'b22'];\n    const class4 = [\n        'b23',\n        'b24',\n        'b25',\n        'b26',\n        'b27',\n        'b28',\n        'b29',\n        'b30',\n        'b31',\n    ];\n    const class5 = [\n        'b32',\n        'b33',\n        'b34',\n        'b35',\n        'b36',\n        'b37',\n        'b38',\n        'b39',\n        'b40',\n        'b41',\n        'b42',\n        'b43',\n    ];\n    if (class1.includes(belt)) {\n        return class1;\n    } else if (class2.includes(belt)) {\n        return class2;\n    } else if (class3.includes(belt)) {\n        return class3;\n    } else if (class4.includes(belt)) {\n        return class4;\n    } else {\n        return class5;\n    }\n};\n\nexport const beltsClassMapperB = (belt) => {\n    const class1 = ['b01', 'b02', 'b03', 'b04', 'b05', 'b06'];\n    const class2 = [\n        'b07',\n        'b08',\n        'b09',\n        'b10',\n        'b11',\n        'b12',\n        'b13',\n        'b14',\n        'b15',\n        'b16',\n        'b17',\n        'b18',\n        'b19',\n    ];\n    const class3 = ['b20', 'b21', 'b22', 'b23', 'b24', 'b25'];\n    const class4 = [\n        'b26',\n        'b27',\n        'b28',\n        'b29',\n        'b30',\n        'b31',\n        'b29',\n        'b32',\n        'b33',\n        'b34',\n    ];\n    const class5 = [\n        'b35',\n        'b36',\n        'b37',\n        'b38',\n        'b39',\n        'b40',\n        'b41',\n        'b42',\n        'b43',\n        'b44',\n        'b45',\n        'b46',\n    ];\n    if (class1.includes(belt)) {\n        return class1;\n    } else if (class2.includes(belt)) {\n        return class2;\n    } else if (class3.includes(belt)) {\n        return class3;\n    } else if (class4.includes(belt)) {\n        return class4;\n    } else {\n        return class5;\n    }\n};\n\nexport const beltMapper = (value, type) => {\n    if (type === 'a') {\n        return beltsA[value];\n    } else {\n        return beltsB[value];\n    }\n};\n\nexport const beltColorMapper = (value, type) => {\n    if (type === 'a') {\n        return beltColorMapperA(value);\n    } else {\n        return beltColorMapperB(value);\n    }\n};\n\nexport const beltColorMapperA = (value) => {\n    const numValue = parseInt(value.replace('b', ''), 10);\n    if (numValue >= 17) {\n        return { color: ['black', 'black', 'black'], fontColor: 'white' };\n    } else if (numValue === 1) {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    } else if (numValue === 2) {\n        return { color: ['white', 'yellow', 'white'], fontColor: 'black' };\n    } else if (numValue === 3) {\n        return { color: ['white', 'green', 'white'], fontColor: 'black' };\n    } else if (numValue === 4) {\n        return { color: ['white', 'blue', 'white'], fontColor: 'black' };\n    } else if (numValue === 5) {\n        return { color: ['white', 'red', 'white'], fontColor: 'black' };\n    } else if (numValue === 6) {\n        return { color: ['white', 'black', 'white'], fontColor: 'white' };\n    } else if (numValue === 7) {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    } else if (numValue === 8) {\n        return { color: ['yellow', 'yellow', 'yellow'], fontColor: 'black' };\n    } else if (numValue === 9) {\n        return { color: ['orange', 'orange', 'orange'], fontColor: 'black' };\n    } else if (numValue === 10) {\n        return { color: ['green', 'green', 'green'], fontColor: 'black' };\n    } else if (numValue === 11) {\n        return { color: ['blue', 'blue', 'blue'], fontColor: 'white' };\n    } else if (numValue === 12) {\n        return { color: ['purple', 'purple', 'purple'], fontColor: 'white' };\n    } else if (numValue === 13) {\n        return { color: ['brown', 'brown', 'brown'], fontColor: 'white' };\n    } else if (numValue === 14) {\n        return { color: ['red', 'red', 'red'], fontColor: 'white' };\n    } else if (numValue === 15) {\n        return { color: ['red', 'black', 'red'], fontColor: 'white' };\n    } else if (numValue === 16) {\n        return { color: ['black', 'red', null], fontColor: 'white' };\n    } else {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    }\n};\n\nexport const beltColorMapperB = (value) => {\n    const numValue = parseInt(value.replace('b', ''), 10);\n    if (numValue >= 20) {\n        return { color: ['black', 'black', 'black'], fontColor: 'white' };\n    } else if (numValue === 1) {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    } else if (numValue === 2) {\n        return { color: ['white', 'yellow', 'white'], fontColor: 'black' };\n    } else if (numValue === 3) {\n        return { color: ['white', 'green', 'white'], fontColor: 'black' };\n    } else if (numValue === 4) {\n        return { color: ['white', 'blue', 'white'], fontColor: 'black' };\n    } else if (numValue === 5) {\n        return { color: ['white', 'red', 'white'], fontColor: 'black' };\n    } else if (numValue === 6) {\n        return { color: ['white', 'black', 'white'], fontColor: 'white' };\n    } else if (numValue === 7) {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    } else if (numValue === 8) {\n        return { color: ['yellow', 'yellow', 'yellow'], fontColor: 'black' };\n    } else if (numValue === 9) {\n        return { color: ['orange', 'orange', 'orange'], fontColor: 'black' };\n    } else if (numValue === 10) {\n        return { color: ['orange', 'green', 'orange'], fontColor: 'black' };\n    } else if (numValue === 11) {\n        return { color: ['green', 'green', 'green'], fontColor: 'white' };\n    } else if (numValue === 12) {\n        return { color: ['green', 'blue', 'green'], fontColor: 'white' };\n    } else if (numValue === 13) {\n        return { color: ['blue', 'blue', 'blue'], fontColor: 'white' };\n    } else if (numValue === 14) {\n        return { color: ['blue', 'red', 'blue'], fontColor: 'white' };\n    } else if (numValue === 15) {\n        return { color: ['red', 'red', 'red'], fontColor: 'white' };\n    } else if (numValue === 16) {\n        return { color: ['red', 'black', 'red'], fontColor: 'white' };\n    } else if (numValue === 17 || numValue === 18 || numValue === 19) {\n        return { color: ['black', 'red', 'black'], fontColor: 'white' };\n    } else {\n        return { color: ['white', 'white', 'white'], fontColor: 'black' };\n    }\n};\n\nexport const beltUpdate = (belt) => {\n    let num = parseInt(belt.replace('b', ''));\n    num += 1;\n\n    if (num < 10) {\n        num = 'b0' + num;\n    } else {\n        num = 'b' + num;\n    }\n    return num;\n};\n","import React from 'react';\nimport {\n    Button,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Dialog,\n} from '@material-ui/core';\n\nexport default function SaveModal({\n    saveHandler,\n    handleModalClose,\n    open,\n    onClose,\n}) {\n    const handleSave = async () => {\n        await saveHandler();\n        onClose();\n    };\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle id=\"alert-dialog-title\">{'Are you sure?'}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    It will save the student information\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSave}\n                >\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Divider,\n    Button,\n    Snackbar,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { addNewStudent, getConfigInfo } from '../../helper/db';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { initState, beltOptions } from '../../helper/constant';\nimport SaveModal from '../SaveModal';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport { SnackBarState } from '../recoilHelper';\nimport { useRecoilState } from 'recoil';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    line: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    field: {\n        marginRight: '2em',\n    },\n    formControl: {\n        margin: theme.spacing(2),\n        minWidth: 240,\n        maxWidth: 240,\n        flexGrow: 1,\n    },\n    formControlHalf: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 120,\n        flexGrow: 1,\n    },\n    formControlLong: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 700,\n        flexGrow: 1,\n    },\n    formControlLabel: {\n        margin: theme.spacing(2),\n    },\n    buttonContainer: { display: 'flex', marginTop: theme.spacing(4) },\n    button: {\n        marginRight: theme.spacing(2),\n        width: '200px',\n    },\n}));\n\nexport default function AddStudent() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [openError, setOpenError] = React.useState(false);\n    const [openErrorField, setOpenErrorField] = React.useState(false);\n    const [saveConfirmOpen, setSaveConfirmOpen] = React.useState(false);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    useEffect(() => {\n        const setConfig = async () => {\n            const result = await getConfigInfo();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(result[0].beltsetting);\n        };\n        setConfig();\n    }, []);\n\n    const handleSaveConfirmOpen = () => {\n        setSaveConfirmOpen(true);\n    };\n\n    const handleSaveConfirmClose = () => {\n        setSaveConfirmOpen(false);\n    };\n\n    // student states\n    const [student, setStudent] = React.useState({\n        ...initState,\n    });\n\n    const [error, setError] = React.useState({\n        firstname: false,\n        lastname: false,\n        sex: false,\n        dateofbirth: false,\n        age: false,\n        lessonclass: false,\n        belt: false,\n        studentyear: false,\n    });\n\n    const history = useHistory();\n\n    const validate = () => {\n        const tempError = { ...error };\n        tempError.firstname = student.firstname.trim() === '' ? true : false;\n        tempError.lastname = student.lastname.trim() === '' ? true : false;\n        tempError.sex = student.sex === '' ? true : false;\n        tempError.dateofbirth = student.dateofbirth === '' ? true : false;\n        tempError.lessonclass = student.lessonclass === '' ? true : false;\n        tempError.belt = student.belt === '' ? true : false;\n        tempError.studentyear = student.studentyear === '' ? true : false;\n\n        const isError = Object.values(tempError).includes(true);\n        if (isError) {\n            setOpenErrorField(true);\n        }\n        setError(tempError);\n        return isError;\n    };\n\n    const validateEach = (field, value) => {\n        const tempError = { ...error };\n        tempError[field] = value.trim() === '' ? true : false;\n\n        setError(tempError);\n    };\n\n    const initialize = () => {\n        setStudent({ ...initState });\n    };\n\n    const addNewStudentHandler = () => async () => {\n        const validationResult = validate();\n        if (validationResult) {\n            return;\n        }\n\n        const response = await addNewStudent({\n            ...student,\n            active: true,\n        });\n        if (response === 'success') {\n            initialize();\n            setOpen(true);\n        } else {\n            setOpenError(true);\n        }\n    };\n\n    const handleCloseErrorField = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenErrorField(false);\n    };\n\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenError(false);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const handleChange = (field, value) => {\n        setStudent({ ...student, [field]: value });\n    };\n\n    // TODO: Max number of characters of each fields?\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Successfully saved!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openErrorField}\n                autoHideDuration={6000}\n                onClose={handleCloseErrorField}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseErrorField} severity=\"error\">\n                    Some required fields are not valid\n                </Alert>\n            </Snackbar>\n\n            <SaveModal\n                open={saveConfirmOpen}\n                onClose={handleSaveConfirmClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                saveHandler={addNewStudentHandler()}\n            />\n\n            <form className={classes.form}>\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"firstname\"\n                            label=\"First Name\"\n                            value={student.firstname}\n                            onChange={(e) =>\n                                handleChange('firstname', e.target.value)\n                            }\n                            onBlur={() =>\n                                validateEach('firstname', student.firstname)\n                            }\n                            error={error.firstname}\n                            helperText={\n                                error.firstname\n                                    ? 'Please put valid first name'\n                                    : ''\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"lastname\"\n                            label=\"Last Name\"\n                            value={student.lastname}\n                            onChange={(e) =>\n                                handleChange('lastname', e.target.value)\n                            }\n                            onBlur={() =>\n                                validateEach('lastname', student.lastname)\n                            }\n                            error={error.lastname}\n                            helperText={\n                                error.lastname\n                                    ? 'Please put valid last name'\n                                    : ''\n                            }\n                        />\n                    </FormControl>\n                    <FormControl\n                        className={classes.formControlHalf}\n                        error={error.sex}\n                    >\n                        <InputLabel id=\"sexLabel\">Sex</InputLabel>\n                        <Select\n                            labelId=\"sexSelect\"\n                            id=\"sexSelect\"\n                            value={student.sex}\n                            onChange={(e) =>\n                                handleChange('sex', e.target.value)\n                            }\n                            onBlur={() => validateEach('sex', student.sex)}\n                        >\n                            <MenuItem value={'male'}>Male</MenuItem>\n                            <MenuItem value={'female'}>Female</MenuItem>\n                        </Select>\n                        <FormHelperText>\n                            {error.sex ? 'Please select sex' : ''}\n                        </FormHelperText>\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"dob\"\n                            label=\"Date of Birth\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) =>\n                                handleChange('dateofbirth', e.target.value)\n                            }\n                            value={student.dateofbirth}\n                            error={error.dateofbirth}\n                            helperText={\n                                error.dateofbirth\n                                    ? 'Please put date of birth'\n                                    : ''\n                            }\n                            onBlur={() =>\n                                validateEach('dateofbirth', student.dateofbirth)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"email\"\n                            label=\"Email\"\n                            value={student.email}\n                            onChange={(e) =>\n                                handleChange('email', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <MuiPhoneNumber\n                            id=\"phonecell\"\n                            label=\"Phone(Cell)\"\n                            value={student.phonecell}\n                            onChange={(value) =>\n                                handleChange('phonecell', value)\n                            }\n                            defaultCountry=\"ca\"\n                            disableAreaCodes={true}\n                            countryCodeEditable={true}\n                            disableDropdown={true}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <MuiPhoneNumber\n                            id=\"phonehome\"\n                            label=\"Phone(Home)\"\n                            value={student.phonehome}\n                            onChange={(value) =>\n                                handleChange('phonehome', value)\n                            }\n                            defaultCountry=\"ca\"\n                            disableAreaCodes={true}\n                            countryCodeEditable={true}\n                            disableDropdown={true}\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl\n                        className={classes.formControlHalf}\n                        error={error.lessonclass}\n                    >\n                        <InputLabel id=\"classLabel\">Class</InputLabel>\n                        <Select\n                            labelId=\"classSelect\"\n                            id=\"classSelect\"\n                            value={student.lessonclass}\n                            onChange={(e) =>\n                                handleChange('lessonclass', e.target.value)\n                            }\n                            onBlur={() =>\n                                validateEach('lessonclass', student.lessonclass)\n                            }\n                        >\n                            <MenuItem value={'little'}>Little</MenuItem>\n                            <MenuItem value={'kid'}>Kid</MenuItem>\n                            <MenuItem value={'adult'}>Adult</MenuItem>\n                        </Select>\n                        <FormHelperText>\n                            {error.lessonclass ? 'Please select class' : ''}\n                        </FormHelperText>\n                    </FormControl>\n                    <FormControl\n                        className={classes.formControlHalf}\n                        error={error.studentyear}\n                    >\n                        <InputLabel id=\"yearLabel\">Year</InputLabel>\n                        <Select\n                            labelId=\"yearSelect\"\n                            id=\"yearSelect\"\n                            value={student.studentyear}\n                            onChange={(e) =>\n                                handleChange('studentyear', e.target.value)\n                            }\n                            onBlur={() =>\n                                validateEach('studentyear', student.studentyear)\n                            }\n                        >\n                            <MenuItem value={'osc'}>O.S.C</MenuItem>\n                            <MenuItem value={'m2m'}>M2M</MenuItem>\n                            <MenuItem value={'1yr'}>1YR</MenuItem>\n                            <MenuItem value={'2yr'}>2YR</MenuItem>\n                            <MenuItem value={'3yr'}>3YR</MenuItem>\n                        </Select>\n                        <FormHelperText>\n                            {error.studentyear ? 'Please select year' : ''}\n                        </FormHelperText>\n                    </FormControl>\n                </div>\n                <div className={classes.line}>\n                    <FormControl\n                        className={classes.formControl}\n                        error={error.belt}\n                    >\n                        <InputLabel id=\"beltLabel\">Belt</InputLabel>\n                        {beltOptions(\n                            (e) => handleChange('belt', e.target.value),\n                            () => validateEach('belt', student.belt),\n                            student.belt,\n                            beltSetting\n                        )}\n                        <FormHelperText>\n                            {error.belt ? 'Please select belt' : ''}\n                        </FormHelperText>\n                    </FormControl>\n                    <FormControl className={classes.formControlHalf}>\n                        <InputLabel id=\"beltsize\">Belt Size</InputLabel>\n                        <Select\n                            labelId=\"yearSelect\"\n                            id=\"yearSelect\"\n                            value={student.beltsize}\n                            onChange={(e) =>\n                                handleChange('beltsize', e.target.value)\n                            }\n                        >\n                            <MenuItem value={'0(200)'}>0(200)</MenuItem>\n                            <MenuItem value={'1(220)'}>1(220)</MenuItem>\n                            <MenuItem value={'2(240)'}>2(240)</MenuItem>\n                            <MenuItem value={'3(260)'}>3(260)</MenuItem>\n                            <MenuItem value={'4(280)'}>4(280)</MenuItem>\n                            <MenuItem value={'5(300)'}>5(300)</MenuItem>\n                            <MenuItem value={'6(320)'}>6(320)</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"lastbelttest\"\n                            label=\"Last Belt Test\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) =>\n                                handleChange('lastbelttest', e.target.value)\n                            }\n                            value={student.lastbelttest}\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"address\"\n                            label=\"Address\"\n                            value={student.studentaddress}\n                            onChange={(e) =>\n                                handleChange('studentaddress', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"city\"\n                            label=\"City\"\n                            value={student.city}\n                            onChange={(e) =>\n                                handleChange('city', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"province\"\n                            label=\"Province\"\n                            value={student.province}\n                            onChange={(e) =>\n                                handleChange('province', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"postalcode\"\n                            label=\"Postal Code\"\n                            value={student.postalcode}\n                            onChange={(e) =>\n                                handleChange('postalcode', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"howdidyouhear\"\n                            label=\"How did you hear about us\"\n                            value={student.howdidyouhear}\n                            onChange={(e) =>\n                                handleChange('howdidyouhear', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"school\"\n                            label=\"School Attending\"\n                            value={student.school}\n                            onChange={(e) =>\n                                handleChange('school', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"medicalhistory\"\n                            label=\"Medical History/Concerns\"\n                            value={student.medicalhistory}\n                            onChange={(e) =>\n                                handleChange('medicalhistory', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <Divider\n                    variant=\"middle\"\n                    style={{ marginTop: '2em', marginBottom: '2em' }}\n                />\n\n                <Typography variant=\"h6\" gutterBottom>\n                    Office Use Only\n                </Typography>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"startdate\"\n                            label=\"Start Date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) =>\n                                handleChange('startdate', e.target.value)\n                            }\n                            value={student.startdate}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <TextField\n                            id=\"enddate\"\n                            label=\"End Date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={(e) =>\n                                handleChange('enddate', e.target.value)\n                            }\n                            value={student.enddate}\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"tuition\"\n                            label=\"Tuition\"\n                            value={student.tuition}\n                            onChange={(e) =>\n                                handleChange('tuition', e.target.value)\n                            }\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        $\n                                    </InputAdornment>\n                                ),\n                            }}\n                            style={{ width: '150px' }}\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={student?.carestudent}\n                                onChange={(e) =>\n                                    handleChange(\n                                        'carestudent',\n                                        e.target.checked\n                                    )\n                                }\n                                name=\"carestudent\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Care Student\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={student?.preauth}\n                                onChange={(e) =>\n                                    handleChange('preauth', e.target.checked)\n                                }\n                                name=\"preauth\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Pre-Authorized Debit\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={student?.etran}\n                                onChange={(e) =>\n                                    handleChange('etran', e.target.checked)\n                                }\n                                name=\"etran\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"E-Transfer\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={student?.creditcard}\n                                onChange={(e) =>\n                                    handleChange('creditcard', e.target.checked)\n                                }\n                                name=\"creditcard\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Credit Card\"\n                    />\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"note\"\n                            label=\"Note\"\n                            value={student.note}\n                            onChange={(e) =>\n                                handleChange('note', e.target.value)\n                            }\n                            multiline\n                        />\n                    </FormControl>\n                </div>\n\n                <Divider\n                    variant=\"middle\"\n                    style={{ marginTop: '2em', marginBottom: '2em' }}\n                />\n\n                <Typography variant=\"h6\" gutterBottom>\n                    Parent/Guardian Information\n                </Typography>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLabel}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            1.\n                        </Typography>\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent1firstname\"\n                            label=\"First Name\"\n                            value={student.parent1firstname}\n                            onChange={(e) =>\n                                handleChange('parent1firstname', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent1lastname\"\n                            label=\"Last Name\"\n                            value={student.parent1lastname}\n                            onChange={(e) =>\n                                handleChange('parent1lastname', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent1occupation\"\n                            label=\"Occupation\"\n                            value={student.parent1occupation}\n                            onChange={(e) =>\n                                handleChange(\n                                    'parent1occupation',\n                                    e.target.value\n                                )\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent1email\"\n                            label=\"Email\"\n                            value={student.parent1email}\n                            onChange={(e) =>\n                                handleChange('parent1email', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <MuiPhoneNumber\n                            id=\"parent1phonecell\"\n                            label=\"Phone(Cell)\"\n                            value={student.parent1phonecell}\n                            onChange={(value) =>\n                                handleChange('parent1phonecell', value)\n                            }\n                            defaultCountry=\"ca\"\n                            disableAreaCodes={true}\n                            countryCodeEditable={true}\n                            disableDropdown={true}\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLabel}>\n                        <Typography variant=\"body1\" gutterBottom>\n                            2.\n                        </Typography>\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent2firstname\"\n                            label=\"First Name\"\n                            value={student.parent2firstname}\n                            onChange={(e) =>\n                                handleChange('parent2firstname', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent2lastname\"\n                            label=\"Last Name\"\n                            value={student.parent2lastname}\n                            onChange={(e) =>\n                                handleChange('parent2lastname', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent2occupation\"\n                            label=\"Occupation\"\n                            value={student.parent2occupation}\n                            onChange={(e) =>\n                                handleChange(\n                                    'parent2occupation',\n                                    e.target.value\n                                )\n                            }\n                        />\n                    </FormControl>\n                </div>\n\n                <div className={classes.line}>\n                    <FormControl className={classes.formControlLong}>\n                        <TextField\n                            id=\"parent2email\"\n                            label=\"Email\"\n                            value={student.parent2email}\n                            onChange={(e) =>\n                                handleChange('parent2email', e.target.value)\n                            }\n                        />\n                    </FormControl>\n                    <FormControl className={classes.formControlLong}>\n                        <MuiPhoneNumber\n                            id=\"parent2phonecell\"\n                            label=\"Phone(Cell)\"\n                            value={student.parent2phonecell}\n                            onChange={(value) =>\n                                handleChange('parent2phonecell', value)\n                            }\n                            defaultCountry=\"ca\"\n                            disableAreaCodes={true}\n                            countryCodeEditable={true}\n                            disableDropdown={true}\n                        />\n                    </FormControl>\n                </div>\n            </form>\n            <div className={classes.buttonContainer}>\n                <Button\n                    variant=\"contained\"\n                    className={classes.button}\n                    onClick={() => history.push('/home')}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={() => handleSaveConfirmOpen()}\n                >\n                    Add\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import {\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Toolbar,\n    Typography,\n    Checkbox,\n} from '@material-ui/core';\nimport React from 'react';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { deleteStudents, deleteAttendances } from '../helper/db';\nimport moment from 'moment';\n\nexport function createData(\n    id,\n    firstname,\n    lastname,\n    belt,\n    beltsize,\n    lastbelttest,\n    phonecell,\n    startdate,\n    enddate,\n    dateofbirth,\n    carestudent,\n    email,\n    payment\n) {\n    return {\n        id,\n        firstname,\n        lastname,\n        belt,\n        beltsize,\n        lastbelttest,\n        phonecell,\n        startdate,\n        enddate,\n        dateofbirth,\n        carestudent,\n        email,\n        payment,\n    };\n}\n\nexport function createDataAttendance(\n    id,\n    studentid,\n    firstname,\n    lastname,\n    lastdate,\n    action\n) {\n    return {\n        id,\n        studentid,\n        firstname,\n        lastname,\n        lastdate,\n        action,\n    };\n}\n\nexport const fakedataAttendance = [\n    createData('1', '1', 'fn1', 'ln1', '19890101', <></>),\n    createData('2', '2', 'fn1', 'ln1', '19890101', <></>),\n    createData('3', '3', 'fn1', 'ln1', '19890101', <></>),\n];\n\nexport function descendingComparator(a, b, orderBy) {\n    if (orderBy === 'lastdate') {\n        if (\n            moment(b[orderBy], 'MM/DD/YYYY') < moment(a[orderBy], 'MM/DD/YYYY')\n        ) {\n            return -1;\n        }\n        if (\n            moment(b[orderBy], 'MM/DD/YYYY') > moment(a[orderBy], 'MM/DD/YYYY')\n        ) {\n            return 1;\n        }\n    }\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nexport function getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nexport const headCells = [\n    { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\n    {\n        id: 'firstname',\n        numeric: false,\n        disablePadding: false,\n        label: 'First Name',\n    },\n    {\n        id: 'lastname',\n        numeric: false,\n        disablePadding: false,\n        label: 'Last Name',\n    },\n    {\n        id: 'belt',\n        numeric: false,\n        disablePadding: false,\n        label: 'Belt',\n    },\n    {\n        id: 'beltsize',\n        numeric: false,\n        disablePadding: false,\n        label: 'Belt Size',\n    },\n    {\n        id: 'lastbelttest',\n        numeric: false,\n        disablePadding: false,\n        label: 'Last Belt Test',\n    },\n    {\n        id: 'phonecell',\n        numeric: false,\n        disablePadding: false,\n        label: 'Phone (Cell)',\n    },\n    {\n        id: 'startdate',\n        numeric: false,\n        disablePadding: false,\n        label: 'Start Date',\n    },\n    { id: 'enddate', numeric: false, disablePadding: false, label: 'End Date' },\n    {\n        id: 'dateofbirth',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date of Birth',\n    },\n    {\n        id: 'email',\n        numeric: false,\n        disablePadding: false,\n        label: 'Email',\n    },\n    {\n        id: 'payment',\n        numeric: false,\n        disablePadding: false,\n        label: 'Payment',\n    },\n];\n\nexport const headCellsAttendance = [\n    { id: 'id', numeric: false, disablePadding: true, label: 'ID' },\n    {\n        id: 'studentid',\n        numeric: false,\n        disablePadding: false,\n        label: 'Student ID',\n    },\n    {\n        id: 'firstname',\n        numeric: false,\n        disablePadding: false,\n        label: 'First Name',\n    },\n    {\n        id: 'lastname',\n        numeric: false,\n        disablePadding: false,\n        label: 'Last Name',\n    },\n    {\n        id: 'lastdate',\n        numeric: false,\n        disablePadding: false,\n        label: 'Date',\n    },\n    {\n        id: 'action',\n        numeric: false,\n        disablePadding: false,\n        label: 'Action',\n    },\n];\n\nexport function EnhancedTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nexport function EnhancedAttendanceTableHead(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCellsAttendance.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc'\n                                        ? 'sorted descending'\n                                        : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nexport const EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const {\n        numSelected,\n        selected,\n        setSnackBarState,\n        refetch,\n        snackBarState,\n        setSelected,\n    } = props;\n\n    const handleDeleteAll = async () => {\n        const selectedIds = selected.join(',');\n        const result = await deleteStudents(selectedIds);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            setSelected([]);\n            refetch();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n            refetch();\n        }\n    };\n\n    return (\n        numSelected > 0 && (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 && (\n                    <Typography\n                        className={classes.title}\n                        color=\"inherit\"\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {numSelected} selected\n                    </Typography>\n                )}\n\n                {numSelected > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\">\n                            <DeleteIcon onClick={() => handleDeleteAll()} />\n                        </IconButton>\n                    </Tooltip>\n                ) : (\n                    <></>\n                )}\n            </Toolbar>\n        )\n    );\n};\n\nexport const EnhancedTableToolbarAttendance = (props) => {\n    const classes = useToolbarStyles();\n    const {\n        numSelected,\n        selected,\n        setSnackBarState,\n        refetch,\n        snackBarState,\n        setSelected,\n    } = props;\n\n    const handleDeleteAll = async () => {\n        const selectedIds = selected.join(',');\n        const result = await deleteAttendances(selectedIds);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            setSelected([]);\n            refetch();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n            refetch();\n        }\n    };\n\n    return (\n        numSelected > 0 && (\n            <Toolbar\n                className={clsx(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                {numSelected > 0 && (\n                    <Typography\n                        className={classes.title}\n                        color=\"inherit\"\n                        variant=\"subtitle1\"\n                        component=\"div\"\n                    >\n                        {numSelected} selected\n                    </Typography>\n                )}\n\n                {numSelected > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\">\n                            <DeleteIcon onClick={() => handleDeleteAll()} />\n                        </IconButton>\n                    </Tooltip>\n                ) : (\n                    <></>\n                )}\n            </Toolbar>\n        )\n    );\n};\n\nexport const dobYearRemover = (dob) => {\n    const dobParts = dob.split('-');\n    return `${dobParts[1]}-${dobParts[2]}`;\n};\n","import React from 'react';\nimport {\n    Button,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Dialog,\n} from '@material-ui/core';\n\nexport default function DeleteModal({\n    deleteHandler,\n    handleModalClose,\n    open,\n    onClose,\n}) {\n    const handleDelete = async () => {\n        await deleteHandler();\n    };\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle id=\"alert-dialog-title\">{'Are you sure?'}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    It will delete the student and you can't restore.\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleDelete}\n                >\n                    DELETE\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Paper,\n    Checkbox,\n} from '@material-ui/core';\nimport {\n    createData,\n    getComparator,\n    stableSort,\n    EnhancedTableToolbar,\n    EnhancedTableHead,\n    dobYearRemover,\n} from './tableHelper';\nimport { getAllStudents, deleteStudent, getConfigInfo } from '../helper/db';\nimport { useHistory } from 'react-router-dom';\nimport { IdState, SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport DeleteModal from './DeleteModal';\nimport { beltMapper } from '../helper/constant';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxHeight: 'calc(100vh - 150px)',\n        overflowX: 'scroll',\n    },\n    paper: {\n        width: 'max-content',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function ActiveStudents() {\n    const classes = useStyles();\n    const [rows, setRows] = useState([]);\n    const [id, setId] = useRecoilState(IdState);\n    const history = useHistory();\n\n    // table\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('id');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    // const [rowsPerPage, setRowsPerPage] = React.useState(15);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // modal\n    const [modalOpen, setModalOpen] = React.useState(false);\n    const [modalDeleteId, setModalDeleteId] = React.useState(undefined);\n\n    // belt\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleNavigate = (id) => {\n        setId(id);\n        history.push({ pathname: `/detailstudent/${id}` });\n    };\n\n    const handleEdit = (id) => {\n        setId(id);\n        history.push(`/editstudent/${id}`);\n    };\n\n    const handleDeleteModal = (id) => {\n        setModalDeleteId(id);\n        handleModalOpen();\n    };\n\n    const handleDelete = (id) => async () => {\n        const result = await deleteStudent(id);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            const tempSelected = [];\n            selected.map((selectedId) => {\n                if (selectedId !== id) {\n                    tempSelected.push(selectedId);\n                }\n            });\n            setSelected([...tempSelected]);\n            refetch();\n            handleModalClose();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const paymentHelper = (row) => {\n        const payment = [];\n        if (row.preauth) {\n            payment.push('Pre-Auth');\n        }\n        if (row.etran) {\n            payment.push('E-Transfer');\n        }\n        if (row.creditcard) {\n            payment.push('Credit Card');\n        }\n        return payment.join(' / ');\n    };\n\n    const refetch = async () => {\n        const resultBelt = await getConfigInfo();\n        if (resultBelt === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        setBeltSetting(resultBelt[0].beltsetting);\n        const orderByActive = localStorage.getItem('orderByActive');\n        const orderBy_ = orderByActive\n            ? JSON.parse(orderByActive).orderBy\n            : 'id';\n        const orderType_ = orderByActive\n            ? JSON.parse(orderByActive).orderType\n            : 'asc';\n        setOrderBy(orderBy_);\n        setOrder(orderType_);\n\n        const result = await getAllStudents();\n        if (result === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        // find id and add action buttons\n        const tableData = [];\n        result.map((row) => {\n            tableData.push(\n                createData(\n                    row.id,\n                    row.firstname,\n                    row.lastname,\n                    row.belt,\n                    row.beltsize,\n                    row.lastbelttest,\n                    row.phonecell,\n                    row.startdate,\n                    row.enddate,\n                    dobYearRemover(row.dateofbirth),\n                    // <>\n                    //     <Button onClick={() => handleNavigate(row.id)}>\n                    //         View\n                    //     </Button>\n                    //     <Button onClick={() => handleEdit(row.id)}>Edit</Button>\n                    //     <Button\n                    //         onClick={() => handleDeleteModal(row.id)}\n                    //         color=\"secondary\"\n                    //     >\n                    //         Delete\n                    //     </Button>\n                    // </>,\n                    row.carestudent,\n                    row.email,\n                    paymentHelper(row)\n                )\n            );\n        });\n        setRows(tableData);\n    };\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const resultBelt = await getConfigInfo();\n            if (resultBelt === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(resultBelt[0].beltsetting);\n            const orderByActive = localStorage.getItem('orderByActive');\n            const orderBy_ = orderByActive\n                ? JSON.parse(orderByActive).orderBy\n                : 'id';\n            const orderType_ = orderByActive\n                ? JSON.parse(orderByActive).orderType\n                : 'asc';\n            setOrderBy(orderBy_);\n            setOrder(orderType_);\n\n            const result = await getAllStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            // find id and add action buttons\n            const tableData = [];\n            result.map((row) => {\n                tableData.push(\n                    createData(\n                        row.id,\n                        row.firstname,\n                        row.lastname,\n                        row.belt,\n                        row.beltsize,\n                        row.lastbelttest,\n                        row.phonecell,\n                        row.startdate,\n                        row.enddate,\n                        dobYearRemover(row.dateofbirth),\n                        // <>\n                        //     <Button onClick={() => handleNavigate(row.id)}>\n                        //         View\n                        //     </Button>\n                        //     <Button onClick={() => handleEdit(row.id)}>\n                        //         Edit\n                        //     </Button>\n                        //     <Button\n                        //         onClick={() => handleDeleteModal(row.id)}\n                        //         color=\"secondary\"\n                        //     >\n                        //         Delete\n                        //     </Button>\n                        // </>,\n                        row.carestudent,\n                        row.email,\n                        paymentHelper(row)\n                    )\n                );\n            });\n            setRows(tableData);\n        };\n        setAllStudents();\n    }, []);\n\n    const handleRequestSort = async (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        localStorage.setItem(\n            'orderByActive',\n            JSON.stringify({\n                orderBy: property,\n                orderType: isAsc ? 'desc' : 'asc',\n            })\n        );\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    // const handleChangeRowsPerPage = (event) => {\n    //     setRowsPerPage(parseInt(event.target.value, 10));\n    //     setPage(0);\n    // };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    // const emptyRows =\n    //     rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    selected={selected}\n                    setSnackBarState={setSnackBarState}\n                    snackBarState={snackBarState}\n                    refetch={refetch}\n                    setSelected={setSelected}\n                />\n                <DeleteModal\n                    open={modalOpen}\n                    onClose={handleModalClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    deleteHandler={handleDelete(modalDeleteId)}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rows,\n                                getComparator(order, orderBy)\n                            ).map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId,\n                                                }}\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            padding=\"none\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            <span\n                                                style={\n                                                    row.carestudent\n                                                        ? {\n                                                              backgroundColor:\n                                                                  'yellow',\n                                                          }\n                                                        : {}\n                                                }\n                                            >\n                                                {row.firstname}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            <span\n                                                style={\n                                                    row.carestudent\n                                                        ? {\n                                                              backgroundColor:\n                                                                  'yellow',\n                                                          }\n                                                        : {}\n                                                }\n                                            >\n                                                {row.lastname}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.belt === 'undefined'\n                                                ? ''\n                                                : beltMapper(\n                                                      row.belt,\n                                                      beltSetting\n                                                  )}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.beltsize === 'undefined'\n                                                ? ''\n                                                : row.beltsize}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.lastbelttest === 'undefined'\n                                                ? ''\n                                                : row.lastbelttest}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.phonecell === 'undefined'\n                                                ? ''\n                                                : row.phonecell}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.startdate === 'undefined'\n                                                ? ''\n                                                : row.startdate}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.enddate === 'undefined'\n                                                ? ''\n                                                : row.enddate}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.dateofbirth === 'undefined'\n                                                ? ''\n                                                : row.dateofbirth}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.email)\n                                            }\n                                        >\n                                            {row.email === 'undefined'\n                                                ? ''\n                                                : row.email}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.payment)\n                                            }\n                                        >\n                                            {row.payment === 'undefined'\n                                                ? ''\n                                                : row.payment}\n                                        </TableCell>\n                                        {/* <TableCell align=\"left\">\n                                            {row.action}\n                                        </TableCell> */}\n                                    </TableRow>\n                                );\n                            })}\n                            {/* {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )} */}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <TablePagination\n                    rowsPerPageOptions={[15, 30, 50]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                /> */}\n            </Paper>\n        </div>\n    );\n}\n","import moment from 'moment';\n\nexport function calculateAge(birthday) {\n    const age = moment().diff(birthday, 'years');\n    return age;\n}\n\nexport function absentTypeCalculator(date) {\n    if (date === '') {\n        return 'none';\n    }\n    const days = moment().diff(date, 'days');\n    if (days > 28) {\n        return 'more';\n    } else if (days > 21) {\n        return '3';\n    } else if (days > 14) {\n        return '2';\n    } else if (days > 7) {\n        return '1';\n    } else {\n        return '0';\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Chip, Snackbar } from '@material-ui/core';\nimport {\n    getStudent,\n    activeStudent,\n    deleteStudent,\n    getStudentAttendance,\n    getPicture,\n    getConfigInfo,\n} from '../helper/db';\nimport { useHistory, useParams } from 'react-router-dom';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useRecoilState } from 'recoil';\nimport { CurStudentState, IdState, SnackBarState } from './recoilHelper';\nimport moment from 'moment';\nimport DeleteModal from './DeleteModal';\nimport { beltMapper } from '../helper/constant';\nimport { calculateAge } from '../helper/util';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '30px auto',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '25ch',\n    },\n    page: {\n        flexDirection: 'row',\n        backgroundColor: '#E4E4E4',\n    },\n    section: {\n        margin: 10,\n        padding: 10,\n        flexGrow: 1,\n    },\n    // Rendering detail student\n    firstSection: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    firstSectionLeft: {\n        border: '1px solid #9e9e9e',\n        width: '200px',\n        height: '300px',\n        marginRight: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n    },\n    firstSectionRight: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    row: {\n        display: 'flex',\n        flexDirection: 'row',\n        margin: '10px 10px',\n    },\n    firstSectionField: {\n        marginRight: '20px',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    secondSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderBottom: '1px solid #9e9e9e',\n        paddingBottom: '20px',\n    },\n    secondSectionField: {\n        marginTop: '20px',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    thirdSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '20px',\n        paddingBottom: '20px',\n        borderBottom: '1px solid #9e9e9e',\n    },\n    thirdBox: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    emptyLeft: {\n        width: '30px',\n    },\n    thirdSectionField: {\n        marginRight: '20px',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    thirdRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: '20px',\n    },\n    flexColumn: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    fourthSection: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '20px',\n        borderBottom: '1px solid #9e9e9e',\n    },\n    fourthRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: '20px',\n    },\n    fourthSectionField: {\n        marginRight: '20px',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subHeader: {\n        marginBottom: '20px',\n    },\n    noteSection: {\n        paddingTop: '20px',\n        paddingBottom: '30px',\n        borderBottom: '1px solid #9e9e9e',\n    },\n    note: {\n        height: '300px',\n        overflowY: 'scroll',\n    },\n    button: {\n        marginTop: '30px',\n        marginRight: '20px',\n    },\n    rowChip: {\n        textAlign: 'center',\n        marginTop: '5px',\n        marginBottom: '5px',\n    },\n    chip: {\n        width: '100px',\n    },\n    underline: {\n        textDecoration: 'underline',\n        marginLeft: '5px',\n        minWidth: '50px',\n    },\n    capturedImage: {\n        width: '180px',\n        height: '220px',\n        margin: 'auto',\n    },\n    captureButton: {\n        marginTop: '5px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        width: '100px',\n    },\n}));\n\nexport default function DetailStudent() {\n    const classes = useStyles();\n    const [student, setStudent] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [open, setOpen] = React.useState(false);\n    const [openError, setOpenError] = React.useState(false);\n    const [attendance, setAttendance] = useState([]);\n    const [picture, setPicture] = useState('');\n\n    const [curStudent, setCurStudent] = useRecoilState(CurStudentState);\n    const [deleteConfirmOpen, setDeleteConfirmOpen] = React.useState(false);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // belt\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    const history = useHistory();\n    const { id } = useParams();\n\n    const handleDeleteConfirmOpen = () => {\n        setDeleteConfirmOpen(true);\n    };\n\n    const handleDeleteConfirmClose = () => {\n        setDeleteConfirmOpen(false);\n    };\n\n    const handleActive = async (id, active) => {\n        const result = await activeStudent(id, !active);\n        if (result) {\n            const result = await getStudent(id);\n            setStudent(result);\n            setOpen(true);\n        } else {\n            setOpenError(true);\n        }\n    };\n\n    const handleDelete = () => async () => {\n        const result = await deleteStudent(id);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            history.push('/activestudents');\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const handleCopy = () => {\n        setCurStudent({\n            ...student,\n            firstname: '',\n            lastname: '',\n            sex: '',\n            dateofbirth: '',\n            age: '',\n            medicalhistory: '',\n            isDone: true,\n        });\n        history.push('/copystudent');\n    };\n\n    const handleEdit = () => {\n        history.push(`/editstudent/${id}`);\n    };\n\n    const handlePrintIdCard = () => {\n        setCurStudent({ ...student, isDone: true });\n        history.push(`/printidcard/${id}`);\n    };\n\n    const handlePrintPADForm = () => {\n        setCurStudent({ ...student, isDone: true });\n        history.push(`/printpadform/${id}`);\n    };\n\n    const handlePrintInvoice = () => {\n        setCurStudent({ ...student, isDone: true });\n        history.push(`/printinvoice/${id}`);\n    };\n\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenError(false);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const handleCapture = () => {\n        history.push(`/takepicture/${id}`);\n    };\n\n    useEffect(() => {\n        const setStudentCall = async () => {\n            const resultBelt = await getConfigInfo();\n            if (resultBelt === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(resultBelt[0].beltsetting);\n\n            const result = await getStudent(id);\n            if (!result) {\n                history.push('/error');\n                return;\n            }\n            setStudent(result);\n            const resultAttendance = await getStudentAttendance(id);\n            if (!resultAttendance) {\n                history.push('/error');\n                return;\n            }\n            setAttendance(resultAttendance);\n            const resultPicture = await getPicture(id);\n            if (!resultPicture) {\n                history.push('/error');\n                return;\n            }\n            if (resultPicture?.length > 0) {\n                setPicture(resultPicture[0].picture);\n            }\n            setLoading(false);\n        };\n        setStudentCall();\n    }, []);\n\n    const displayAttendance = () => {\n        const sortedAttendance = attendance.sort(function (a, b) {\n            return b.lastdate - a.lastdate;\n        });\n        const result = sortedAttendance.map((obj) => {\n            return (\n                <li>{moment(obj.lastdate, 'YYYYMMDD').format('YYYY-MM-DD')}</li>\n            );\n        });\n        return <ul>{result}</ul>;\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Successfully saved!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n\n            <DeleteModal\n                open={deleteConfirmOpen}\n                onClose={handleDeleteConfirmClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                deleteHandler={handleDelete()}\n            />\n\n            <>\n                <div className={classes.firstSection}>\n                    <div className={classes.firstSectionLeft}>\n                        {picture !== '' && (\n                            <img\n                                src={picture}\n                                className={classes.capturedImage}\n                            />\n                        )}\n                        <Button\n                            onClick={handleCapture}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.captureButton}\n                        >\n                            Capture\n                        </Button>\n                        <div className={classes.rowChip}>\n                            <Chip\n                                label={student.active ? 'Active' : 'Inactive'}\n                                color={student.active ? 'primary' : 'secondary'}\n                                className={classes.chip}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.firstSectionRight}>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                First name:\n                                <div className={classes.underline}>\n                                    {student.firstname}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Last name:\n                                <div className={classes.underline}>\n                                    {student.lastname}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Sex:\n                                <div className={classes.underline}>\n                                    {student.sex}\n                                </div>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                D.O.B:\n                                <div className={classes.underline}>\n                                    {student.dateofbirth === 'undefined'\n                                        ? ''\n                                        : student.dateofbirth}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Age:\n                                <div className={classes.underline}>\n                                    {calculateAge(student.dateofbirth)}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Email:\n                                <div className={classes.underline}>\n                                    {student.email}\n                                </div>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Phone(cell):\n                                <div className={classes.underline}>\n                                    {student.phonecell}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Phone(home):\n                                <div className={classes.underline}>\n                                    {student.phonehome}\n                                </div>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Class:\n                                <div className={classes.underline}>\n                                    {student.lessonclass === 'undefined'\n                                        ? ''\n                                        : student.lessonclass}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Belt:\n                                <div className={classes.underline}>\n                                    {student.belt === 'undefined'\n                                        ? ''\n                                        : beltMapper(student.belt, beltSetting)}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Year:\n                                <div className={classes.underline}>\n                                    {student.studentyear === 'undefined'\n                                        ? ''\n                                        : student.studentyear}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Last Belt Test:\n                                <div className={classes.underline}>\n                                    {student.lastbelttest === 'undefined'\n                                        ? ''\n                                        : student.lastbelttest}\n                                </div>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Address:\n                                <div className={classes.underline}>\n                                    {student.studentaddress === 'undefined'\n                                        ? ''\n                                        : student.studentaddress}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                City:\n                                <div className={classes.underline}>\n                                    {student.city}\n                                </div>\n                            </Typography>\n                        </div>\n                        <div className={classes.row}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Province:\n                                <div className={classes.underline}>\n                                    {student.province}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Postal code:\n                                <div className={classes.underline}>\n                                    {student.postalcode}\n                                </div>\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                className={classes.firstSectionField}\n                            >\n                                Student id:\n                                <div className={classes.underline}>\n                                    {student.id}\n                                </div>\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.secondSection}>\n                    <Typography\n                        variant=\"body1\"\n                        gutterBottom\n                        className={classes.secondSectionField}\n                    >\n                        How did you hear about us:\n                        <div className={classes.underline}>\n                            {student.howdidyouhear}\n                        </div>\n                    </Typography>\n                    <Typography\n                        variant=\"body1\"\n                        gutterBottom\n                        className={classes.secondSectionField}\n                    >\n                        School attending:\n                        <div className={classes.underline}>\n                            {student.school}\n                        </div>\n                    </Typography>\n                    <Typography\n                        variant=\"body1\"\n                        gutterBottom\n                        className={classes.secondSectionField}\n                    >\n                        Medical history / concerns:\n                        <div className={classes.underline}>\n                            {student.medicalhistory}\n                        </div>\n                    </Typography>\n                </div>\n                <div className={classes.thirdSection}>\n                    <Typography\n                        variant=\"h6\"\n                        gutterBottom\n                        className={classes.subHeader}\n                    >\n                        Parent / Guardian Information\n                    </Typography>\n                    <div className={classes.thirdBox}>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.emptyLeft}\n                        >\n                            1)\n                        </Typography>\n                        <div className={classes.flexColumn}>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    First name:\n                                    <div className={classes.underline}>\n                                        {student.parent1firstname}\n                                    </div>\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Last name:\n                                    <div className={classes.underline}>\n                                        {student.parent1lastname}\n                                    </div>\n                                </Typography>\n                            </div>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Occupation:\n                                    <div className={classes.underline}>\n                                        {student.parent1occupation}\n                                    </div>\n                                </Typography>\n                            </div>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Email:\n                                    <div className={classes.underline}>\n                                        {student.parent1email}\n                                    </div>\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.thirdBox}>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.emptyLeft}\n                        >\n                            2)\n                        </Typography>\n                        <div className={classes.flexColumn}>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    First name:\n                                    <div className={classes.underline}>\n                                        {student.parent2firstname}\n                                    </div>\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Last name:\n                                    <div className={classes.underline}>\n                                        {student.parent2lastname}\n                                    </div>\n                                </Typography>\n                            </div>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Occupation:\n                                    <div className={classes.underline}>\n                                        {student.parent2occupation}\n                                    </div>\n                                </Typography>\n                            </div>\n                            <div className={classes.thirdRow}>\n                                <Typography\n                                    variant=\"body1\"\n                                    gutterBottom\n                                    className={classes.thirdSectionField}\n                                >\n                                    Email:\n                                    <div className={classes.underline}>\n                                        {student.parent2email}\n                                    </div>\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.fourthSection}>\n                    <Typography\n                        variant=\"h6\"\n                        gutterBottom\n                        className={classes.subHeader}\n                    >\n                        Office use only\n                    </Typography>\n                    <div className={classes.fourthRow}>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Start Date:\n                            <div className={classes.underline}>\n                                {student.startdate}\n                            </div>\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            End Date:\n                            <div className={classes.underline}>\n                                {student.enddate}\n                            </div>\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Tuition:\n                            <div className={classes.underline}>\n                                {student.tuition ? `$ ${student.tuition}` : ''}\n                            </div>\n                        </Typography>\n                    </div>\n                    <div className={classes.fourthRow}>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Pre-Authorized-Debit:\n                            <div className={classes.underline}>\n                                {student.preauth ? 'Yes' : 'No'}\n                            </div>\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            E-Transfer:\n                            <div className={classes.underline}>\n                                {student.etran ? 'Yes' : 'No'}\n                            </div>\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Credit Card:\n                            <div className={classes.underline}>\n                                {student.creditcard ? 'Yes' : 'No'}\n                            </div>\n                        </Typography>\n                    </div>\n                    <div className={classes.fourthRow}>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Care Student:\n                            <div className={classes.underline}>\n                                {student.carestudent ? 'Yes' : 'No'}\n                            </div>\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            gutterBottom\n                            className={classes.fourthSectionField}\n                        >\n                            Belt Size:\n                            <div className={classes.underline}>\n                                {student.beltsize}\n                            </div>\n                        </Typography>\n                    </div>\n                </div>\n                <div className={classes.noteSection}>\n                    <div className={classes.note}>\n                        <Typography\n                            variant=\"h6\"\n                            gutterBottom\n                            className={classes.subHeader}\n                        >\n                            Note\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            display=\"inline\"\n                            style={{\n                                whiteSpace: 'pre-line',\n                                width: '200px',\n                                wordBreak: 'break-word',\n                            }}\n                            noWrap\n                            gutterBottom\n                        >\n                            {student.note}\n                        </Typography>\n                    </div>\n                </div>\n                <div className={classes.noteSection}>\n                    <div className={classes.note}>\n                        <Typography\n                            variant=\"h6\"\n                            gutterBottom\n                            className={classes.subHeader}\n                        >\n                            Attendance Date\n                        </Typography>\n                        <Typography variant=\"body1\" gutterBottom>\n                            {displayAttendance()}\n                        </Typography>\n                    </div>\n                </div>\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        onClick={() => handlePrintIdCard()}\n                    >\n                        ID Card\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        onClick={() => handlePrintPADForm()}\n                    >\n                        P.A.D Form\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        onClick={() => handlePrintInvoice()}\n                    >\n                        Invoice\n                    </Button>\n                </div>\n                <div>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        onClick={() => history.push('/activestudents')}\n                    >\n                        BACK\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color={student.active ? 'secondary' : 'primary'}\n                        className={classes.button}\n                        onClick={() => handleActive(student.id, student.active)}\n                    >\n                        {student.active ? 'Inactive' : 'Active'}\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color={'secondary'}\n                        className={classes.button}\n                        onClick={() => handleDeleteConfirmOpen()}\n                    >\n                        Delete\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={() => handleCopy()}\n                    >\n                        Copy\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={() => handleEdit()}\n                    >\n                        Edit\n                    </Button>\n                </div>\n            </>\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Divider,\n    Button,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n    Snackbar,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { addNewStudent, getConfigInfo } from '../../helper/db';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {\n    GetCurStudentState,\n    CurStudentState,\n    SnackBarState,\n} from '../recoilHelper';\nimport { useRecoilValue, useRecoilState } from 'recoil';\nimport { initState, beltOptions } from '../../helper/constant';\nimport SaveModal from '../SaveModal';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    line: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    field: {\n        marginRight: '2em',\n    },\n    formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 240,\n        flexGrow: 1,\n    },\n    formControlHalf: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 120,\n        flexGrow: 1,\n    },\n    formControlLong: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 700,\n        flexGrow: 1,\n    },\n    formControlLabel: {\n        margin: theme.spacing(2),\n    },\n    buttonContainer: { display: 'flex', marginTop: theme.spacing(4) },\n    button: {\n        marginRight: theme.spacing(2),\n        width: '200px',\n    },\n}));\n\nexport default function CopyStudent() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [openError, setOpenError] = React.useState(false);\n    const [openErrorField, setOpenErrorField] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [recoilStudent, setCurStudent] = useRecoilState(CurStudentState);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [saveConfirmOpen, setSaveConfirmOpen] = React.useState(false);\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    useEffect(() => {\n        const setConfig = async () => {\n            const result = await getConfigInfo();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(result[0].beltsetting);\n        };\n        setConfig();\n    }, []);\n\n    const handleSaveConfirmOpen = () => {\n        setSaveConfirmOpen(true);\n    };\n\n    const handleSaveConfirmClose = () => {\n        setSaveConfirmOpen(false);\n    };\n\n    // student states\n    const [student, setStudent] = React.useState({\n        ...initState,\n    });\n    const [error, setError] = React.useState({\n        firstname: false,\n        lastname: false,\n        sex: false,\n        dateofbirth: false,\n        age: false,\n        lessonclass: false,\n        belt: false,\n        studentyear: false,\n    });\n\n    const history = useHistory();\n\n    const validate = () => {\n        const tempError = { ...error };\n        tempError.firstname = student.firstname.trim() === '' ? true : false;\n        tempError.lastname = student.lastname.trim() === '' ? true : false;\n        tempError.sex = student.sex === '' ? true : false;\n        tempError.dateofbirth = student.dateofbirth === '' ? true : false;\n        tempError.lessonclass = student.lessonclass === '' ? true : false;\n        tempError.belt = student.belt === '' ? true : false;\n        tempError.studentyear = student.studentyear === '' ? true : false;\n\n        const isError = Object.values(tempError).includes(true);\n        if (isError) {\n            setSnackBarState({ ...snackBarState, openErrorField: true });\n        }\n        setError(tempError);\n        return isError;\n    };\n\n    const validateEach = (field, value) => {\n        const tempError = { ...error };\n        tempError[field] = value.trim() === '' ? true : false;\n\n        setError(tempError);\n    };\n\n    const initialize = () => {\n        setStudent({ ...initState });\n    };\n\n    const addNewStudentHandler = () => async () => {\n        const validationResult = validate();\n        if (validationResult) {\n            return;\n        }\n\n        const response = await addNewStudent({\n            ...student,\n            active: true,\n        });\n        if (response === 'success') {\n            initialize();\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            history.push(`/detailstudent/${student.id}`);\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const handleChange = (field, value) => {\n        setStudent({ ...student, [field]: value });\n    };\n\n    const curStudent = useRecoilValue(GetCurStudentState);\n    if (curStudent.isDone && loading) {\n        setStudent(curStudent);\n        setLoading(false);\n        setCurStudent({ ...curStudent, isDone: false });\n    }\n\n    const handleCloseErrorField = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenErrorField(false);\n    };\n\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenError(false);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    // TODO: Max number of characters of each fields?\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Successfully saved!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openErrorField}\n                autoHideDuration={6000}\n                onClose={handleCloseErrorField}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseErrorField} severity=\"error\">\n                    Some required fields are not valid\n                </Alert>\n            </Snackbar>\n\n            <SaveModal\n                open={saveConfirmOpen}\n                onClose={handleSaveConfirmClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                saveHandler={addNewStudentHandler()}\n            />\n            {!loading && (\n                <>\n                    <form className={classes.form}>\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"firstname\"\n                                    label=\"First Name\"\n                                    value={student.firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'firstname',\n                                            student.firstname\n                                        )\n                                    }\n                                    error={error.firstname}\n                                    helperText={\n                                        error.firstname\n                                            ? 'Please put valid first name'\n                                            : ''\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"lastname\"\n                                    label=\"Last Name\"\n                                    value={student.lastname}\n                                    onChange={(e) =>\n                                        handleChange('lastname', e.target.value)\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'lastname',\n                                            student.lastname\n                                        )\n                                    }\n                                    error={error.lastname}\n                                    helperText={\n                                        error.lastname\n                                            ? 'Please put valid last name'\n                                            : ''\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.sex}\n                            >\n                                <InputLabel id=\"sexLabel\">Sex</InputLabel>\n                                <Select\n                                    labelId=\"sexSelect\"\n                                    id=\"sexSelect\"\n                                    value={student.sex}\n                                    onChange={(e) =>\n                                        handleChange('sex', e.target.value)\n                                    }\n                                    onBlur={() =>\n                                        validateEach('sex', student.sex)\n                                    }\n                                >\n                                    <MenuItem value={'male'}>Male</MenuItem>\n                                    <MenuItem value={'female'}>Female</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.sex ? 'Please select sex' : ''}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"dob\"\n                                    label=\"Date of Birth\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'dateofbirth',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.dateofbirth}\n                                    error={error.dateofbirth}\n                                    helperText={\n                                        error.dateofbirth\n                                            ? 'Please put date of birth'\n                                            : ''\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'dateofbirth',\n                                            student.dateofbirth\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    value={student.email}\n                                    onChange={(e) =>\n                                        handleChange('email', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <MuiPhoneNumber\n                                    id=\"phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.phonecell}\n                                    onChange={(value) =>\n                                        handleChange('phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <MuiPhoneNumber\n                                    id=\"phonehome\"\n                                    label=\"Phone(Home)\"\n                                    value={student.phonehome}\n                                    onChange={(value) =>\n                                        handleChange('phonehome', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.lessonclass}\n                            >\n                                <InputLabel id=\"classLabel\">Class</InputLabel>\n                                <Select\n                                    labelId=\"classSelect\"\n                                    id=\"classSelect\"\n                                    value={student.lessonclass}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'lessonclass',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'lessonclass',\n                                            student.lessonclass\n                                        )\n                                    }\n                                >\n                                    <MenuItem value={'little'}>Little</MenuItem>\n                                    <MenuItem value={'kid'}>Kid</MenuItem>\n                                    <MenuItem value={'adult'}>Adult</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.lessonclass\n                                        ? 'Please select class'\n                                        : ''}\n                                </FormHelperText>\n                            </FormControl>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.studentyear}\n                            >\n                                <InputLabel id=\"yearLabel\">Year</InputLabel>\n                                <Select\n                                    labelId=\"yearSelect\"\n                                    id=\"yearSelect\"\n                                    value={student.studentyear}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'studentyear',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'studentyear',\n                                            student.studentyear\n                                        )\n                                    }\n                                >\n                                    <MenuItem value={'osc'}>O.S.C</MenuItem>\n                                    <MenuItem value={'m2m'}>M2M</MenuItem>\n                                    <MenuItem value={'1yr'}>1YR</MenuItem>\n                                    <MenuItem value={'2yr'}>2YR</MenuItem>\n                                    <MenuItem value={'3yr'}>3YR</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.studentyear\n                                        ? 'Please select year'\n                                        : ''}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl\n                                className={classes.formControl}\n                                error={error.belt}\n                            >\n                                <InputLabel id=\"beltLabel\">Belt</InputLabel>\n                                {beltOptions(\n                                    (e) => handleChange('belt', e.target.value),\n                                    () => validateEach('belt', student.belt),\n                                    student.belt,\n                                    beltSetting\n                                )}\n                                <FormHelperText>\n                                    {error.belt ? 'Please select belt' : ''}\n                                </FormHelperText>\n                            </FormControl>\n                            <FormControl className={classes.formControlHalf}>\n                                <InputLabel id=\"beltsize\">Belt Size</InputLabel>\n                                <Select\n                                    labelId=\"yearSelect\"\n                                    id=\"yearSelect\"\n                                    value={student.beltsize}\n                                    onChange={(e) =>\n                                        handleChange('beltsize', e.target.value)\n                                    }\n                                >\n                                    <MenuItem value={'0(200)'}>0(200)</MenuItem>\n                                    <MenuItem value={'1(220)'}>1(220)</MenuItem>\n                                    <MenuItem value={'2(240)'}>2(240)</MenuItem>\n                                    <MenuItem value={'3(260)'}>3(260)</MenuItem>\n                                    <MenuItem value={'4(280)'}>4(280)</MenuItem>\n                                    <MenuItem value={'5(300)'}>5(300)</MenuItem>\n                                    <MenuItem value={'6(320)'}>6(320)</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"lastbelttest\"\n                                    label=\"Last Belt Test\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'lastbelttest',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.lastbelttest}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"address\"\n                                    label=\"Address\"\n                                    value={student.studentaddress}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'studentaddress',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"city\"\n                                    label=\"City\"\n                                    value={student.city}\n                                    onChange={(e) =>\n                                        handleChange('city', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"province\"\n                                    label=\"Province\"\n                                    value={student.province}\n                                    onChange={(e) =>\n                                        handleChange('province', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"postalcode\"\n                                    label=\"Postal Code\"\n                                    value={student.postalcode}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'postalcode',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"howdidyouhear\"\n                                    label=\"How did you hear about us\"\n                                    value={student.howdidyouhear}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'howdidyouhear',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"school\"\n                                    label=\"School Attending\"\n                                    value={student.school}\n                                    onChange={(e) =>\n                                        handleChange('school', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"medicalhistory\"\n                                    label=\"Medical History/Concerns\"\n                                    value={student.medicalhistory}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'medicalhistory',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <Divider\n                            variant=\"middle\"\n                            style={{ marginTop: '2em', marginBottom: '2em' }}\n                        />\n\n                        <Typography variant=\"h6\" gutterBottom>\n                            Office Use Only\n                        </Typography>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"startdate\"\n                                    label=\"Start Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'startdate',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.startdate}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"enddate\"\n                                    label=\"End Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange('enddate', e.target.value)\n                                    }\n                                    value={student.enddate}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"tuition\"\n                                    label=\"Tuition\"\n                                    value={student.tuition}\n                                    onChange={(e) =>\n                                        handleChange('tuition', e.target.value)\n                                    }\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                $\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    style={{ width: '150px' }}\n                                />\n                            </FormControl>\n                        </div>\n                        <div className={classes.line}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.carestudent}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'carestudent',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"carestudent\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Care Student\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.preauth}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'preauth',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"preauth\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Pre-Authorized Debit\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.etran}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'etran',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"etran\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"E-Transfer\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.creditcard}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'creditcard',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"creditcard\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Credit Card\"\n                            />\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"note\"\n                                    label=\"Note\"\n                                    value={student.note}\n                                    onChange={(e) =>\n                                        handleChange('note', e.target.value)\n                                    }\n                                    multiline\n                                />\n                            </FormControl>\n                        </div>\n\n                        <Divider\n                            variant=\"middle\"\n                            style={{ marginTop: '2em', marginBottom: '2em' }}\n                        />\n\n                        <Typography variant=\"h6\" gutterBottom>\n                            Parent/Guardian Information\n                        </Typography>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLabel}>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    1.\n                                </Typography>\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1firstname\"\n                                    label=\"First Name\"\n                                    value={student.parent1firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1lastname\"\n                                    label=\"Last Name\"\n                                    value={student.parent1lastname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1lastname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1occupation\"\n                                    label=\"Occupation\"\n                                    value={student.parent1occupation}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1occupation',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1email\"\n                                    label=\"Email\"\n                                    value={student.parent1email}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1email',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <MuiPhoneNumber\n                                    id=\"parent1phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.parent1phonecell}\n                                    onChange={(value) =>\n                                        handleChange('parent1phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLabel}>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    2.\n                                </Typography>\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2firstname\"\n                                    label=\"First Name\"\n                                    value={student.parent2firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2lastname\"\n                                    label=\"Last Name\"\n                                    value={student.parent2lastname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2lastname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2occupation\"\n                                    label=\"Occupation\"\n                                    value={student.parent2occupation}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2occupation',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2email\"\n                                    label=\"Email\"\n                                    value={student.parent2email}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2email',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <MuiPhoneNumber\n                                    id=\"parent2phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.parent2phonecell}\n                                    onChange={(value) =>\n                                        handleChange('parent2phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n                    </form>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={() =>\n                                history.push(`/detailstudent/${curStudent.id}`)\n                            }\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => handleSaveConfirmOpen()}\n                        >\n                            Add\n                        </Button>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Divider,\n    Button,\n    InputAdornment,\n    FormControlLabel,\n    Checkbox,\n} from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getStudent, editStudent, getConfigInfo } from '../../helper/db';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { GetIdState, SnackBarState } from '../recoilHelper';\nimport { useRecoilValue, useRecoilState } from 'recoil';\nimport { initState, beltOptions } from '../../helper/constant';\nimport SaveModal from '../SaveModal';\nimport MuiPhoneNumber from 'material-ui-phone-number';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    line: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    field: {\n        marginRight: '2em',\n    },\n    formControl: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 240,\n        flexGrow: 1,\n    },\n    formControlHalf: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 120,\n        flexGrow: 1,\n    },\n    formControlLong: {\n        margin: theme.spacing(2),\n        minWidth: 120,\n        maxWidth: 700,\n        flexGrow: 1,\n    },\n    formControlLabel: {\n        margin: theme.spacing(2),\n    },\n    buttonContainer: { display: 'flex', marginTop: theme.spacing(4) },\n    button: {\n        marginRight: theme.spacing(2),\n        width: '200px',\n    },\n}));\n\nexport default function EditStudent() {\n    const classes = useStyles();\n    const [loading, setLoading] = React.useState(true);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [saveConfirmOpen, setSaveConfirmOpen] = React.useState(false);\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    useEffect(() => {\n        const setConfig = async () => {\n            const result = await getConfigInfo();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(result[0].beltsetting);\n        };\n        setConfig();\n    }, []);\n\n    const handleSaveConfirmOpen = () => {\n        setSaveConfirmOpen(true);\n    };\n\n    const handleSaveConfirmClose = () => {\n        setSaveConfirmOpen(false);\n    };\n\n    // student states\n    const [student, setStudent] = React.useState({\n        ...initState,\n    });\n    const [error, setError] = React.useState({\n        firstname: false,\n        lastname: false,\n        sex: false,\n        dateofbirth: false,\n        age: false,\n        lessonclass: false,\n        belt: false,\n        studentyear: false,\n    });\n\n    const history = useHistory();\n\n    const validate = () => {\n        const tempError = { ...error };\n        tempError.firstname = student.firstname.trim() === '' ? true : false;\n        tempError.lastname = student.lastname.trim() === '' ? true : false;\n        tempError.sex = student.sex === '' ? true : false;\n        tempError.dateofbirth = student.dateofbirth === '' ? true : false;\n        tempError.lessonclass = student.lessonclass === '' ? true : false;\n        tempError.belt = student.belt === '' ? true : false;\n        tempError.studentyear = student.studentyear === '' ? true : false;\n\n        const isError = Object.values(tempError).includes(true);\n        if (isError) {\n            setSnackBarState({ ...snackBarState, openErrorField: true });\n        }\n        setError(tempError);\n        return isError;\n    };\n\n    const validateEach = (field, value) => {\n        const tempError = { ...error };\n        tempError[field] = value.trim() === '' ? true : false;\n\n        setError(tempError);\n    };\n\n    const initialize = () => {\n        setStudent({ ...initState });\n    };\n\n    const editStudentHandler = () => async () => {\n        const validationResult = validate();\n        if (validationResult) {\n            return;\n        }\n\n        const response = await editStudent({\n            ...student,\n        });\n        if (response === 'success') {\n            initialize();\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            history.push(`/detailstudent/${student.id}`);\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const handleChange = (field, value) => {\n        setStudent({ ...student, [field]: value });\n    };\n\n    const { id } = useParams();\n    useEffect(() => {\n        const setStudentCall = async () => {\n            if (!id || id === 0) {\n                return;\n            }\n            const result = await getStudent(id);\n            if (!result) {\n                history.push('/error');\n                return;\n            }\n            setStudent({ ...initState, ...result });\n            setLoading(false);\n        };\n        setStudentCall();\n    }, [id]);\n\n    // TODO: Max number of characters of each fields?\n    return (\n        <div className={classes.root}>\n            <SaveModal\n                open={saveConfirmOpen}\n                onClose={handleSaveConfirmClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                saveHandler={editStudentHandler()}\n            />\n            {!loading && (\n                <>\n                    <form className={classes.form}>\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"firstname\"\n                                    label=\"First Name\"\n                                    value={student.firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'firstname',\n                                            student.firstname\n                                        )\n                                    }\n                                    error={error.firstname}\n                                    helperText={\n                                        error.firstname\n                                            ? 'Please put valid first name'\n                                            : ''\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"lastname\"\n                                    label=\"Last Name\"\n                                    value={student.lastname}\n                                    onChange={(e) =>\n                                        handleChange('lastname', e.target.value)\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'lastname',\n                                            student.lastname\n                                        )\n                                    }\n                                    error={error.lastname}\n                                    helperText={\n                                        error.lastname\n                                            ? 'Please put valid last name'\n                                            : ''\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.sex}\n                            >\n                                <InputLabel id=\"sexLabel\">Sex</InputLabel>\n                                <Select\n                                    labelId=\"sexSelect\"\n                                    id=\"sexSelect\"\n                                    value={student.sex}\n                                    onChange={(e) =>\n                                        handleChange('sex', e.target.value)\n                                    }\n                                    onBlur={() =>\n                                        validateEach('sex', student.sex)\n                                    }\n                                >\n                                    <MenuItem value={'male'}>Male</MenuItem>\n                                    <MenuItem value={'female'}>Female</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.sex ? 'Please select sex' : ''}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"dob\"\n                                    label=\"Date of Birth\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'dateofbirth',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.dateofbirth}\n                                    error={error.dateofbirth}\n                                    helperText={\n                                        error.dateofbirth\n                                            ? 'Please put date of birth'\n                                            : ''\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'dateofbirth',\n                                            student.dateofbirth\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"email\"\n                                    label=\"Email\"\n                                    value={student.email}\n                                    onChange={(e) =>\n                                        handleChange('email', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <MuiPhoneNumber\n                                    id=\"phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.phonecell}\n                                    onChange={(value) =>\n                                        handleChange('phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <MuiPhoneNumber\n                                    id=\"phonehome\"\n                                    label=\"Phone(Home)\"\n                                    value={student.phonehome}\n                                    onChange={(value) =>\n                                        handleChange('phonehome', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.lessonclass}\n                            >\n                                <InputLabel id=\"classLabel\">Class</InputLabel>\n                                <Select\n                                    labelId=\"classSelect\"\n                                    id=\"classSelect\"\n                                    value={student.lessonclass}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'lessonclass',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'lessonclass',\n                                            student.lessonclass\n                                        )\n                                    }\n                                >\n                                    <MenuItem value={'little'}>Little</MenuItem>\n                                    <MenuItem value={'kid'}>Kid</MenuItem>\n                                    <MenuItem value={'adult'}>Adult</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.lessonclass\n                                        ? 'Please select class'\n                                        : ''}\n                                </FormHelperText>\n                            </FormControl>\n                            <FormControl\n                                className={classes.formControlHalf}\n                                error={error.studentyear}\n                            >\n                                <InputLabel id=\"yearLabel\">Year</InputLabel>\n                                <Select\n                                    labelId=\"yearSelect\"\n                                    id=\"yearSelect\"\n                                    value={student.studentyear}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'studentyear',\n                                            e.target.value\n                                        )\n                                    }\n                                    onBlur={() =>\n                                        validateEach(\n                                            'studentyear',\n                                            student.studentyear\n                                        )\n                                    }\n                                >\n                                    <MenuItem value={'osc'}>O.S.C</MenuItem>\n                                    <MenuItem value={'m2m'}>M2M</MenuItem>\n                                    <MenuItem value={'1yr'}>1YR</MenuItem>\n                                    <MenuItem value={'2yr'}>2YR</MenuItem>\n                                    <MenuItem value={'3yr'}>3YR</MenuItem>\n                                </Select>\n                                <FormHelperText>\n                                    {error.studentyear\n                                        ? 'Please select year'\n                                        : ''}\n                                </FormHelperText>\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl\n                                className={classes.formControl}\n                                error={error.belt}\n                            >\n                                <InputLabel id=\"beltLabel\">Belt</InputLabel>\n                                {beltOptions(\n                                    (e) => handleChange('belt', e.target.value),\n                                    () => validateEach('belt', student.belt),\n                                    student.belt,\n                                    beltSetting\n                                )}\n                                <FormHelperText>\n                                    {error.belt ? 'Please select belt' : ''}\n                                </FormHelperText>\n                            </FormControl>\n                            <FormControl className={classes.formControlHalf}>\n                                <InputLabel id=\"beltsize\">Belt Size</InputLabel>\n                                <Select\n                                    labelId=\"yearSelect\"\n                                    id=\"yearSelect\"\n                                    value={student.beltsize}\n                                    onChange={(e) =>\n                                        handleChange('beltsize', e.target.value)\n                                    }\n                                >\n                                    <MenuItem value={'0(200)'}>0(200)</MenuItem>\n                                    <MenuItem value={'1(220)'}>1(220)</MenuItem>\n                                    <MenuItem value={'2(240)'}>2(240)</MenuItem>\n                                    <MenuItem value={'3(260)'}>3(260)</MenuItem>\n                                    <MenuItem value={'4(280)'}>4(280)</MenuItem>\n                                    <MenuItem value={'5(300)'}>5(300)</MenuItem>\n                                    <MenuItem value={'6(320)'}>6(320)</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"lastbelttest\"\n                                    label=\"Last Belt Test\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'lastbelttest',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.lastbelttest}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"address\"\n                                    label=\"Address\"\n                                    value={student.studentaddress}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'studentaddress',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"city\"\n                                    label=\"City\"\n                                    value={student.city}\n                                    onChange={(e) =>\n                                        handleChange('city', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"province\"\n                                    label=\"Province\"\n                                    value={student.province}\n                                    onChange={(e) =>\n                                        handleChange('province', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"postalcode\"\n                                    label=\"Postal Code\"\n                                    value={student.postalcode}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'postalcode',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"howdidyouhear\"\n                                    label=\"How did you hear about us\"\n                                    value={student.howdidyouhear}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'howdidyouhear',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"school\"\n                                    label=\"School Attending\"\n                                    value={student.school}\n                                    onChange={(e) =>\n                                        handleChange('school', e.target.value)\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"medicalhistory\"\n                                    label=\"Medical History/Concerns\"\n                                    value={student.medicalhistory}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'medicalhistory',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <Divider\n                            variant=\"middle\"\n                            style={{ marginTop: '2em', marginBottom: '2em' }}\n                        />\n\n                        <Typography variant=\"h6\" gutterBottom>\n                            Office Use Only\n                        </Typography>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"startdate\"\n                                    label=\"Start Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'startdate',\n                                            e.target.value\n                                        )\n                                    }\n                                    value={student.startdate}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"enddate\"\n                                    label=\"End Date\"\n                                    type=\"date\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    onChange={(e) =>\n                                        handleChange('enddate', e.target.value)\n                                    }\n                                    value={student.enddate}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <TextField\n                                    id=\"tuition\"\n                                    label=\"Tuition\"\n                                    value={student.tuition}\n                                    onChange={(e) =>\n                                        handleChange('tuition', e.target.value)\n                                    }\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                $\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    style={{ width: '150px' }}\n                                />\n                            </FormControl>\n                        </div>\n                        <div className={classes.line}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.carestudent}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'carestudent',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"carestudent\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Care Student\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.preauth}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'preauth',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"preauth\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Pre-Authorized Debit\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.etran}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'etran',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"etran\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"E-Transfer\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={student?.creditcard}\n                                        onChange={(e) =>\n                                            handleChange(\n                                                'creditcard',\n                                                e.target.checked\n                                            )\n                                        }\n                                        name=\"creditcard\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Credit Card\"\n                            />\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"note\"\n                                    label=\"Note\"\n                                    value={student.note}\n                                    onChange={(e) =>\n                                        handleChange('note', e.target.value)\n                                    }\n                                    multiline\n                                />\n                            </FormControl>\n                        </div>\n\n                        <Divider\n                            variant=\"middle\"\n                            style={{ marginTop: '2em', marginBottom: '2em' }}\n                        />\n\n                        <Typography variant=\"h6\" gutterBottom>\n                            Parent/Guardian Information\n                        </Typography>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLabel}>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    1.\n                                </Typography>\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1firstname\"\n                                    label=\"First Name\"\n                                    value={student.parent1firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1lastname\"\n                                    label=\"Last Name\"\n                                    value={student.parent1lastname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1lastname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1occupation\"\n                                    label=\"Occupation\"\n                                    value={student.parent1occupation}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1occupation',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent1email\"\n                                    label=\"Email\"\n                                    value={student.parent1email}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent1email',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <MuiPhoneNumber\n                                    id=\"parent1phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.parent1phonecell}\n                                    onChange={(value) =>\n                                        handleChange('parent1phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLabel}>\n                                <Typography variant=\"body1\" gutterBottom>\n                                    2.\n                                </Typography>\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2firstname\"\n                                    label=\"First Name\"\n                                    value={student.parent2firstname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2firstname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2lastname\"\n                                    label=\"Last Name\"\n                                    value={student.parent2lastname}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2lastname',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2occupation\"\n                                    label=\"Occupation\"\n                                    value={student.parent2occupation}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2occupation',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                        </div>\n\n                        <div className={classes.line}>\n                            <FormControl className={classes.formControlLong}>\n                                <TextField\n                                    id=\"parent2email\"\n                                    label=\"Email\"\n                                    value={student.parent2email}\n                                    onChange={(e) =>\n                                        handleChange(\n                                            'parent2email',\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </FormControl>\n                            <FormControl className={classes.formControlLong}>\n                                <MuiPhoneNumber\n                                    id=\"parent2phonecell\"\n                                    label=\"Phone(Cell)\"\n                                    value={student.parent2phonecell}\n                                    onChange={(value) =>\n                                        handleChange('parent2phonecell', value)\n                                    }\n                                    defaultCountry=\"ca\"\n                                    disableAreaCodes={true}\n                                    countryCodeEditable={true}\n                                    disableDropdown={true}\n                                />\n                            </FormControl>\n                        </div>\n                    </form>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            variant=\"contained\"\n                            className={classes.button}\n                            onClick={() =>\n                                history.push(`/detailstudent/${student.id}`)\n                            }\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={() => handleSaveConfirmOpen()}\n                        >\n                            Edit\n                        </Button>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '30px auto',\n    },\n}));\n\nexport default function ErrorPage() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h5\" gutterBottom>\n                Something went wrong. Please go back and try again.\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport QRCode from 'react-qr-code';\nimport {\n    beltsClassMapperA,\n    beltsClassMapperB,\n    beltMapper,\n    beltColorMapper,\n} from '../helper/constant';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst Style = {\n    renderPage: {\n        width: '100%',\n        height: '100%',\n        fontSize: '16px',\n    },\n    renderCard: {\n        width: '600px',\n        height: '100%',\n        textAlign: 'center',\n        margin: '0 auto 0 auto',\n        display: 'flow-root',\n        padding: '50px',\n    },\n    renderText: {\n        fontSize: '25px',\n        fontWeight: '500',\n        marginBottom: '5px',\n    },\n    formControl: {\n        margin: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    beltRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginBottom: '10px',\n    },\n    capturedImage: {\n        width: '216px',\n        height: '264px',\n        margin: '0 auto 15px auto',\n    },\n    sectionContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '25px',\n        justifyContent: 'center',\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    section: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        maxWidth: '200px',\n    },\n    checkbox: {\n        height: '30px',\n        width: '30px',\n    },\n    wrap: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        height: '520px',\n        marginTop: '80px',\n    },\n};\n\nconst beltBackground = (color1, color2, color3) => {\n    if (color3) {\n        return `linear-gradient(to bottom, ${color1} 0, ${color1} 33%, ${color2} 33%, ${color2} 67%, ${color3} 67%, ${color3} 100%)`;\n    } else {\n        return `linear-gradient(to bottom, ${color1} 0, ${color1} 50%, ${color2} 50%, ${color2} 100%)`;\n    }\n};\n\nexport default class ComponentToPrint extends React.Component {\n    render() {\n        const { curStudent, picture, beltSetting } = this.props;\n        let beltsClass = [];\n        if (beltSetting === 'a') {\n            beltsClass = beltsClassMapperA;\n        } else {\n            beltsClass = beltsClassMapperB;\n        }\n\n        return (\n            <div style={Style.renderPage}>\n                <div style={Style.renderCard}>\n                    <div style={Style.sectionContainer}>\n                        <div style={Style.section}>\n                            <QRCode\n                                value={'academyhelper' + curStudent.id}\n                                size={96}\n                            />\n                        </div>\n                        <div style={Style.section}>\n                            <div\n                                style={Style.renderText}\n                            >{`ID: ${curStudent.id}`}</div>\n                            <div style={Style.renderText}>\n                                {curStudent.firstname}\n                            </div>\n                            <div style={Style.renderText}>\n                                {curStudent.lastname}\n                            </div>\n                        </div>\n                    </div>\n\n                    {picture === '' ? (\n                        <></>\n                    ) : (\n                        <img src={picture} style={Style.capturedImage} />\n                    )}\n\n                    <FormControl component=\"fieldset\" style={Style.formControl}>\n                        <FormGroup style={Style.wrap}>\n                            {beltsClass(curStudent.belt).map((belt) => {\n                                const color = beltColorMapper(\n                                    belt,\n                                    beltSetting\n                                );\n                                return (\n                                    <div style={Style.beltRow}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    checked={false}\n                                                    name={belt}\n                                                    style={Style.checkbox}\n                                                />\n                                            }\n                                        />\n                                        <div\n                                            style={{\n                                                marginTop: '0',\n                                                marginBottom: '0',\n                                                paddingLeft: '20px',\n                                                paddingRight: '20px',\n                                                width: '150px',\n                                                height: '30px',\n                                                background: beltBackground(\n                                                    color.color[0],\n                                                    color.color[1],\n                                                    color.color[2]\n                                                ),\n                                                color: `${color.fontColor}`,\n                                                border: 'solid 1px black',\n                                                display: 'flex',\n                                                flexDirection: 'column',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            {beltMapper(belt, beltSetting)}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </FormGroup>\n                    </FormControl>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useReactToPrint } from 'react-to-print';\nimport ComponentToPrint from './ComponentToPrint';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getStudent, getPicture, getConfigInfo } from '../helper/db';\n\nconst root = {\n    display: 'flex',\n    flexDirection: 'column',\n    '@media print': {\n        display: 'block',\n    },\n};\n\nconst divButton = {\n    marginLeft: '40px',\n    marginRight: 'auto',\n};\n\nconst button = {\n    width: 'fit-content',\n    marginLeft: '5px',\n    marginRight: '5px',\n};\n\nconst IdCard = () => {\n    const componentRef = useRef();\n\n    const pageStyle = `\n        @page {\n            size: 102mm 228mm;\n        }\n  `;\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n        pageStyle: pageStyle,\n    });\n    const [curStudent, setCurStudent] = useState({});\n    const [picture, setPicture] = useState('');\n    const history = useHistory();\n    const { id } = useParams();\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    useEffect(() => {\n        const setStudentCall = async () => {\n            const result = await getStudent(id);\n            if (!result) {\n                history.push('/error');\n                return;\n            }\n            setCurStudent(result);\n            const resultPicture = await getPicture(id);\n            if (!resultPicture) {\n                history.push('/error');\n                return;\n            }\n            if (resultPicture?.length > 0) {\n                setPicture(resultPicture[0].picture);\n            }\n            const resultConfig = await getConfigInfo();\n            setBeltSetting(resultConfig[0].beltsetting);\n        };\n        setStudentCall();\n    }, []);\n\n    return (\n        <div style={root}>\n            <ComponentToPrint\n                ref={componentRef}\n                curStudent={curStudent}\n                picture={picture}\n                beltSetting={beltSetting}\n            />\n            <div style={divButton}>\n                <Button\n                    onClick={() => history.push(`/detailstudent/${id}`)}\n                    variant=\"contained\"\n                    style={button}\n                >\n                    Back\n                </Button>\n                <Button\n                    onClick={handlePrint}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={button}\n                >\n                    PRINT\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default IdCard;\n","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    Chip,\n    Button,\n    TextField,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport QrReader from 'react-qr-scanner';\nimport { getAllStudents, attendStudents, logging } from '../helper/db';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    root: { display: 'flex', flexDirection: 'column', textAlign: 'center' },\n    camera: { marginBottom: '20px' },\n    status: { marginBottom: '20px' },\n    result: { marginBottom: '20px' },\n    footer: { marginTop: '10px' },\n    chip: { margin: '5px' },\n    manualInput: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '50px',\n        textAlign: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginBottom: '20px',\n    },\n    manualInputTextField: { marginRight: '5px', width: '300px' },\n    manualInputButton: {\n        height: '35px',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n    },\n    methods: { marginLeft: 'auto', marginRight: 'auto' },\n    scannerInputTextField: {\n        width: 0,\n    },\n    dateText: {\n        minWidth: '300px',\n        maxWidth: '300px',\n        margin: '0 auto 20px auto',\n    },\n}));\n\nexport default function Attendance() {\n    const classes = useStyles();\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [qrResult, setQrResult] = React.useState([]);\n    const [inputMethod, setInputMethod] = React.useState('scanner');\n    const [students, setStudents] = React.useState({});\n    const [display, setDisplay] = React.useState('Please scan');\n    const [manualStudent, setManualStudent] = React.useState('');\n    const [scannerStudent, setScannerStudent] = React.useState('');\n    const inputElement = useRef(null);\n    const [scannerTimeout, setScannerTimeout] = React.useState('');\n    const [date, setDate] = React.useState(moment().format('YYYY-MM-DD'));\n\n    const previewStyle = {\n        height: '240px',\n        width: '320px',\n    };\n    const qrDelay = 300;\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const result = await getAllStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const tempStudents = {};\n            result.map((student) => {\n                tempStudents[\n                    student.id\n                ] = `${student.firstname} ${student.lastname}`;\n            });\n            setStudents(tempStudents);\n        };\n        setAllStudents();\n\n        if (inputElement.current) {\n            inputElement.current.focus();\n        }\n    }, []);\n\n    const handleScan = (data) => {\n        if (data && data.text) {\n            const strip = data.text.replace('academyhelper', '');\n            let isExist = strip in students;\n            let isScanned = false;\n            qrResult.map((result) => {\n                if (result.id === strip) {\n                    isScanned = true;\n                }\n            });\n\n            if (!isExist) {\n                setDisplay(`Student id ${strip} is unknown. Please check.`);\n            }\n            if (isScanned) {\n                setDisplay('Already scanned');\n            }\n            if (isExist && !isScanned) {\n                const temp = [...qrResult];\n                temp.push({ id: strip, name: students[strip] });\n                setQrResult(temp);\n                setDisplay('Scanned successfully');\n            }\n        }\n    };\n\n    const handleError = (err) => {\n        console.error(err);\n    };\n\n    const handleDelete = (id) => {\n        const temp = [];\n        qrResult.map((result) => {\n            if (result.id !== id) {\n                temp.push(result);\n            }\n        });\n        setQrResult(temp);\n    };\n\n    const handleChange = (value) => {\n        setManualStudent(value);\n    };\n\n    const handleManualScan = () => {\n        let isExist = manualStudent in students;\n        let isScanned = false;\n        qrResult.map((result) => {\n            if (result.id === manualStudent) {\n                isScanned = true;\n            }\n        });\n\n        if (!isExist) {\n            setDisplay(`Student id ${manualStudent} is unknown. Please check.`);\n        }\n        if (isScanned) {\n            setDisplay('Already scanned');\n        }\n        if (isExist && !isScanned) {\n            const temp = [...qrResult];\n            temp.push({ id: manualStudent, name: students[manualStudent] });\n            setQrResult(temp);\n            setDisplay('Scanned successfully');\n        }\n\n        setManualStudent('');\n    };\n\n    const handleSubmit = async () => {\n        const result = await attendStudents(qrResult, date);\n        if (result === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        if (result === 'fail2') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        if (result === 'success') {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            setQrResult([]);\n        }\n    };\n\n    const handleInputMethodChange = (e) => {\n        setInputMethod(e.target.value);\n    };\n\n    const handleScannerChange = (value) => {\n        //setScannerStudent(value);\n        clearTimeout(scannerTimeout);\n        setScannerStudent(value);\n        const timeoutId = setTimeout(() => {\n            handleScannerScan(value);\n        }, 500);\n        setScannerTimeout(timeoutId);\n    };\n\n    const handleScannerScan = async (value) => {\n        await logging(value + ' scanned');\n        const strip = value.replace('academyhelper', '');\n        let isExist = strip in students;\n        let isScanned = false;\n        qrResult.map((result) => {\n            if (result.id === strip) {\n                isScanned = true;\n            }\n        });\n\n        if (!isExist) {\n            setDisplay(`Student id ${strip} is unknown. Please check.`);\n            await logging(`Student id ${strip} is unknown. Please check.`);\n        }\n        if (isScanned) {\n            setDisplay('Already scanned');\n            await logging(`Student id ${strip} is already scanned`);\n        }\n        if (isExist && !isScanned) {\n            const temp = [...qrResult];\n            temp.push({ id: strip, name: students[strip] });\n            setQrResult(temp);\n            setDisplay('Scanned successfully');\n        }\n        setScannerStudent('');\n    };\n\n    const handleDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={(e) => handleDate(e)}\n                value={date}\n                className={classes.dateText}\n            />\n            {inputMethod === 'webcam' && (\n                <div className={classes.camera}>\n                    <QrReader\n                        delay={qrDelay}\n                        style={previewStyle}\n                        onError={handleError}\n                        onScan={handleScan}\n                    />\n                </div>\n            )}\n            <Typography variant=\"h5\" gutterBottom className={classes.status}>\n                {display}\n            </Typography>\n            <div className={classes.result}>\n                {qrResult.map((result) => {\n                    return (\n                        <Chip\n                            key={result.id}\n                            label={result.name}\n                            className={classes.chip}\n                            onDelete={() => handleDelete(result.id)}\n                        />\n                    );\n                })}\n            </div>\n\n            <FormControl component=\"fieldset\" className={classes.methods}>\n                <FormLabel component=\"legend\">\n                    How would you like to scan?\n                </FormLabel>\n                <RadioGroup\n                    aria-label=\"methods\"\n                    name=\"methods\"\n                    value={inputMethod}\n                    onChange={handleInputMethodChange}\n                >\n                    <FormControlLabel\n                        value=\"scanner\"\n                        control={<Radio />}\n                        label=\"QR Code Scanner\"\n                    />\n                    <FormControlLabel\n                        value=\"webcam\"\n                        control={<Radio />}\n                        label=\"Camera\"\n                    />\n                    <FormControlLabel\n                        value=\"manual\"\n                        control={<Radio />}\n                        label=\"Manual\"\n                    />\n                </RadioGroup>\n            </FormControl>\n\n            {inputMethod === 'scanner' && (\n                <TextField\n                    ref={inputElement}\n                    id=\"scannerId\"\n                    value={scannerStudent}\n                    onChange={(e) => handleScannerChange(e.target.value)}\n                    className={classes.scannerInputTextField}\n                    autoFocus={true}\n                    onBlur={({ target }) => target.focus()}\n                    autoComplete=\"none\"\n                />\n            )}\n\n            {inputMethod === 'manual' && (\n                <div className={classes.manualInput}>\n                    <TextField\n                        id=\"id\"\n                        label=\"Student ID\"\n                        value={manualStudent}\n                        onChange={(e) => handleChange(e.target.value)}\n                        className={classes.manualInputTextField}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.manualInputButton}\n                        onClick={() => handleManualScan()}\n                    >\n                        Attend\n                    </Button>\n                </div>\n            )}\n            <div className={classes.footer}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleSubmit()}\n                >\n                    Submit\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, TextField, Snackbar } from '@material-ui/core';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport { getAllStudents, attendStudents, logging } from '../helper/db';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        paddingTop: '30px',\n    },\n    status: { marginBottom: '20px', minHeight: '30px' },\n    result: { marginBottom: '20px' },\n    manualInput: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    dateText: {\n        minWidth: '300px',\n        maxWidth: '300px',\n        margin: '0 auto 20px auto',\n    },\n    footer: {\n        display: 'flex',\n        marginTop: '30px',\n        gap: '40px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    buttonRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '20px',\n        marginBottom: '20px',\n    },\n    keypadButton: {\n        borderRadius: '50%',\n        height: '100px',\n        width: '100px',\n    },\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function AttendanceKeypad() {\n    const classes = useStyles();\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [students, setStudents] = React.useState({});\n    const [display, setDisplay] = React.useState('');\n    const [manualStudent, setManualStudent] = React.useState('');\n    const inputElement = useRef(null);\n    const [date, setDate] = React.useState(moment().format('YYYY-MM-DD'));\n\n    const history = useHistory();\n\n    // Snackbars\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openError: false });\n    };\n\n    const handleCloseError2 = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openError2: false });\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openSuccess: false });\n    };\n\n    const handleCloseErrorField = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackBarState({ ...snackBarState, openErrorField: false });\n    };\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const result = await getAllStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const tempStudents = {};\n            result.map((student) => {\n                tempStudents[\n                    student.id\n                ] = `${student.firstname} ${student.lastname}`;\n            });\n            setStudents(tempStudents);\n        };\n        setAllStudents();\n\n        if (inputElement.current) {\n            inputElement.current.focus();\n        }\n    }, [setSnackBarState, snackBarState]);\n\n    const handleChange = (value) => {\n        setManualStudent(manualStudent + value);\n        setDisplay(manualStudent + value);\n    };\n\n    const handleManualScan = async () => {\n        let isExist = manualStudent in students;\n\n        if (!isExist) {\n            setDisplay(\n                `Can't find the Student id ${manualStudent}. Please try again.`\n            );\n            setManualStudent('');\n            return;\n        }\n        if (isExist) {\n            const result = await attendStudents(\n                [{ id: manualStudent, name: students[manualStudent] }],\n                date\n            );\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            if (result === 'fail2') {\n                setSnackBarState({ ...snackBarState, openError2: true });\n            }\n            if (result === 'success') {\n                setSnackBarState({ ...snackBarState, openSuccess: true });\n            }\n        }\n\n        setManualStudent('');\n        setDisplay('');\n    };\n\n    const handleDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={snackBarState.openSuccess}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Attended!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={snackBarState.openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={snackBarState.openError2}\n                autoHideDuration={6000}\n                onClose={handleCloseError2}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Already attended!\n                </Alert>\n            </Snackbar>\n\n            <TextField\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={(e) => handleDate(e)}\n                value={date}\n                className={classes.dateText}\n            />\n            <Typography variant=\"h5\" gutterBottom className={classes.status}>\n                {display}\n            </Typography>\n\n            <div className={classes.manualInput}>\n                <div className={classes.buttonRow}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('7')}\n                    >\n                        7\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('8')}\n                    >\n                        8\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('9')}\n                    >\n                        9\n                    </Button>\n                </div>\n                <div className={classes.buttonRow}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('4')}\n                    >\n                        4\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('5')}\n                    >\n                        5\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('6')}\n                    >\n                        6\n                    </Button>\n                </div>\n                <div className={classes.buttonRow}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('1')}\n                    >\n                        1\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('2')}\n                    >\n                        2\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.keypadButton}\n                        onClick={(e) => handleChange('3')}\n                    >\n                        3\n                    </Button>\n                </div>\n            </div>\n            <div className={classes.footer}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.keypadButton}\n                    onClick={() => handleManualScan()}\n                >\n                    Enter\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.keypadButton}\n                    onClick={() =>\n                        history.push({\n                            pathname: `/home`,\n                        })\n                    }\n                >\n                    Back\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TablePagination,\n    TableRow,\n    Paper,\n    Checkbox,\n} from '@material-ui/core';\nimport {\n    getComparator,\n    stableSort,\n    EnhancedTableToolbarAttendance,\n    EnhancedAttendanceTableHead,\n    createDataAttendance,\n} from './tableHelper';\nimport {\n    deleteAttendance,\n    getOnlyStudentsName,\n    getAllAttendance,\n} from '../helper/db';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport moment from 'moment';\nimport DeleteModal from './DeleteModal';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: 'max-content',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function AttendanceTable() {\n    const classes = useStyles();\n    const [rowsAttendance, setRowsAttendance] = useState([]);\n\n    // table\n    const [orderAttendance, setOrderAttendance] = React.useState('desc');\n    const [orderByAttendance, setOrderByAttendance] =\n        React.useState('lastdate');\n    const [selectedAttendance, setSelectedAttendance] = React.useState([]);\n    const [pageAttendance, setPageAttendance] = React.useState(0);\n    const [rowsPerPageAttendance, setRowsPerPageAttendance] =\n        React.useState(30);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // modal\n    const [modalOpen, setModalOpen] = React.useState(false);\n    const [modalDeleteId, setModalDeleteId] = React.useState(undefined);\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleDeleteModal = (id) => {\n        setModalDeleteId(id);\n        handleModalOpen();\n    };\n\n    const handleDelete = (id) => async () => {\n        const result = await deleteAttendance(id);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            const tempSelected = [];\n            selectedAttendance.map((selectedId) => {\n                if (selectedId !== id) {\n                    tempSelected.push(selectedId);\n                }\n            });\n            setSelectedAttendance([...tempSelected]);\n            refetch();\n            handleModalClose();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const refetch = async () => {\n        const setAllData = async () => {\n            const resultStudentsNames = await getOnlyStudentsName();\n            const resultAttendance = await getAllAttendance();\n            if (resultStudentsNames === 'fail' || resultAttendance === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n                return;\n            }\n\n            // merge two tables into one\n            const tempStudentsNames = {};\n            resultStudentsNames.map((student) => {\n                tempStudentsNames[student.id] = {\n                    firstname: student.firstname,\n                    lastname: student.lastname,\n                };\n            });\n\n            const tempAttendances = [];\n            resultAttendance.map((attendance) => {\n                tempAttendances.push({\n                    ...attendance,\n                    lastdate: moment(attendance.lastdate, 'YYYYMMDD').format(\n                        'L'\n                    ),\n                    ...tempStudentsNames[attendance.studentid],\n                });\n            });\n\n            // find id and add action buttons\n            const tableData = [];\n            tempAttendances.map((row) => {\n                tableData.push(\n                    createDataAttendance(\n                        row.id,\n                        row.studentid,\n                        row.firstname,\n                        row.lastname,\n                        row.lastdate,\n                        <>\n                            <Button\n                                onClick={() => handleDeleteModal(row.id)}\n                                color=\"secondary\"\n                            >\n                                Delete\n                            </Button>\n                        </>\n                    )\n                );\n            });\n            setRowsAttendance(tableData);\n        };\n        setAllData();\n    };\n\n    useEffect(() => {\n        const setAllData = async () => {\n            const resultStudentsNames = await getOnlyStudentsName();\n            const resultAttendance = await getAllAttendance();\n            if (resultStudentsNames === 'fail' || resultAttendance === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n                return;\n            }\n\n            // merge two tables into one\n            const tempStudentsNames = {};\n            resultStudentsNames.map((student) => {\n                tempStudentsNames[student.id] = {\n                    firstname: student.firstname,\n                    lastname: student.lastname,\n                };\n            });\n\n            const tempAttendances = [];\n            resultAttendance.map((attendance) => {\n                tempAttendances.push({\n                    ...attendance,\n                    lastdate: moment(attendance.lastdate, 'YYYYMMDD').format(\n                        'L'\n                    ),\n                    ...tempStudentsNames[attendance.studentid],\n                });\n            });\n\n            // find id and add action buttons\n            const tableData = [];\n            tempAttendances.map((row) => {\n                tableData.push(\n                    createDataAttendance(\n                        row.id,\n                        row.studentid,\n                        row.firstname,\n                        row.lastname,\n                        row.lastdate,\n                        <>\n                            <Button\n                                onClick={() => handleDeleteModal(row.id)}\n                                color=\"secondary\"\n                            >\n                                Delete\n                            </Button>\n                        </>\n                    )\n                );\n            });\n            setRowsAttendance(tableData);\n        };\n        setAllData();\n    }, []);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc =\n            orderByAttendance === property && orderAttendance === 'asc';\n        setOrderAttendance(isAsc ? 'desc' : 'asc');\n        setOrderByAttendance(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rowsAttendance.map((n) => n.id);\n            setSelectedAttendance(newSelecteds);\n            return;\n        }\n        setSelectedAttendance([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selectedAttendance.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selectedAttendance, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selectedAttendance.slice(1));\n        } else if (selectedIndex === selectedAttendance.length - 1) {\n            newSelected = newSelected.concat(selectedAttendance.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selectedAttendance.slice(0, selectedIndex),\n                selectedAttendance.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelectedAttendance(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPageAttendance(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPageAttendance(parseInt(event.target.value, 10));\n        setPageAttendance(0);\n    };\n\n    const isSelected = (id) => selectedAttendance.indexOf(id) !== -1;\n\n    const emptyRows =\n        rowsPerPageAttendance -\n        Math.min(\n            rowsPerPageAttendance,\n            rowsAttendance.length - pageAttendance * rowsPerPageAttendance\n        );\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbarAttendance\n                    numSelected={selectedAttendance.length}\n                    selected={selectedAttendance}\n                    setSnackBarState={setSnackBarState}\n                    snackBarState={snackBarState}\n                    refetch={refetch}\n                    setSelected={setSelectedAttendance}\n                />\n                <DeleteModal\n                    open={modalOpen}\n                    onClose={handleModalClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    deleteHandler={handleDelete(modalDeleteId)}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedAttendanceTableHead\n                            classes={classes}\n                            numSelected={selectedAttendance.length}\n                            order={orderAttendance}\n                            orderBy={orderByAttendance}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rowsAttendance.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rowsAttendance,\n                                getComparator(\n                                    orderAttendance,\n                                    orderByAttendance\n                                )\n                            )\n                                .slice(\n                                    pageAttendance * rowsPerPageAttendance,\n                                    pageAttendance * rowsPerPageAttendance +\n                                        rowsPerPageAttendance\n                                )\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.id);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={Math.floor(\n                                                Math.random() * 10000000\n                                            )}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{\n                                                        'aria-labelledby':\n                                                            labelId,\n                                                    }}\n                                                    onClick={(event) =>\n                                                        handleClick(\n                                                            event,\n                                                            row.id\n                                                        )\n                                                    }\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                component=\"th\"\n                                                id={labelId}\n                                                scope=\"row\"\n                                                padding=\"none\"\n                                            >\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.studentid}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.firstname}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.lastname}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.lastdate}\n                                            </TableCell>\n                                            <TableCell align=\"left\">\n                                                {row.action}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[15, 30, 50]}\n                    component=\"div\"\n                    count={rowsAttendance.length}\n                    rowsPerPage={rowsPerPageAttendance}\n                    page={pageAttendance}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Paper,\n    Checkbox,\n} from '@material-ui/core';\nimport {\n    createData,\n    getComparator,\n    stableSort,\n    EnhancedTableToolbar,\n    EnhancedTableHead,\n    dobYearRemover,\n} from './tableHelper';\nimport {\n    getAllInactiveStudents,\n    deleteStudent,\n    getConfigInfo,\n} from '../helper/db';\nimport { useHistory } from 'react-router-dom';\nimport { IdState, SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport DeleteModal from './DeleteModal';\nimport { beltMapper } from '../helper/constant';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxHeight: 'calc(100vh - 150px)',\n        overflowX: 'scroll',\n    },\n    paper: {\n        width: 'max-content',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function InactiveStudents() {\n    const classes = useStyles();\n    const [rows, setRows] = useState([]);\n    const [id, setId] = useRecoilState(IdState);\n    const history = useHistory();\n\n    // table\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('id');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    // const [rowsPerPage, setRowsPerPage] = React.useState(15);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // modal\n    const [modalOpen, setModalOpen] = React.useState(false);\n    const [modalDeleteId, setModalDeleteId] = React.useState(undefined);\n\n    // belt\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleNavigate = (id) => {\n        setId(id);\n        history.push({ pathname: `/detailstudent/${id}` });\n    };\n\n    const handleEdit = (id) => {\n        setId(id);\n        history.push('/editstudent');\n    };\n\n    const handleDeleteModal = (id) => {\n        setModalDeleteId(id);\n        handleModalOpen();\n    };\n\n    const handleDelete = (id) => async () => {\n        const result = await deleteStudent(id);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            const tempSelected = [];\n            selected.map((selectedId) => {\n                if (selectedId !== id) {\n                    tempSelected.push(selectedId);\n                }\n            });\n            setSelected([...tempSelected]);\n            refetch();\n            handleModalClose();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const refetch = async () => {\n        const resultBelt = await getConfigInfo();\n        if (resultBelt === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        setBeltSetting(resultBelt[0].beltsetting);\n        const orderByInactive = localStorage.getItem('orderByInactive');\n        const orderBy_ = orderByInactive\n            ? JSON.parse(orderByInactive).orderBy\n            : 'id';\n        const orderType_ = orderByInactive\n            ? JSON.parse(orderByInactive).orderType\n            : 'asc';\n        setOrderBy(orderBy_);\n        setOrder(orderType_);\n\n        const result = await getAllInactiveStudents();\n        if (result === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        // find id and add action buttons\n        const tableData = [];\n        result.map((row) => {\n            tableData.push(\n                createData(\n                    row.id,\n                    row.firstname,\n                    row.lastname,\n                    row.belt,\n                    row.beltsize,\n                    row.lastbelttest,\n                    row.phonecell,\n                    dobYearRemover(row.dateofbirth),\n                    <>\n                        <Button onClick={() => handleNavigate(row.id)}>\n                            View\n                        </Button>\n                        <Button onClick={() => handleNavigate(row.id)}>\n                            Edit\n                        </Button>\n                        <Button\n                            onClick={() => handleDeleteModal(row.id)}\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n                    </>\n                )\n            );\n        });\n        setRows(tableData);\n    };\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const resultBelt = await getConfigInfo();\n            if (resultBelt === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(resultBelt[0].beltsetting);\n            const orderByInactive = localStorage.getItem('orderByInactive');\n            const orderBy_ = orderByInactive\n                ? JSON.parse(orderByInactive).orderBy\n                : 'id';\n            const orderType_ = orderByInactive\n                ? JSON.parse(orderByInactive).orderType\n                : 'asc';\n            setOrderBy(orderBy_);\n            setOrder(orderType_);\n\n            const result = await getAllInactiveStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            // find id and add action buttons\n            const tableData = [];\n            result.map((row) => {\n                tableData.push(\n                    createData(\n                        row.id,\n                        row.firstname,\n                        row.lastname,\n                        row.belt,\n                        row.beltsize,\n                        row.lastbelttest,\n                        row.phonecell,\n                        dobYearRemover(row.dateofbirth),\n                        <>\n                            <Button onClick={() => handleNavigate(row.id)}>\n                                View\n                            </Button>\n                            <Button onClick={() => handleEdit(row.id)}>\n                                Edit\n                            </Button>\n                            <Button\n                                onClick={() => handleDeleteModal(row.id)}\n                                color=\"secondary\"\n                            >\n                                Delete\n                            </Button>\n                        </>\n                    )\n                );\n            });\n            setRows(tableData);\n        };\n        setAllStudents();\n    }, []);\n\n    const handleRequestSort = async (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        localStorage.setItem(\n            'orderByInactive',\n            JSON.stringify({\n                orderBy: property,\n                orderType: isAsc ? 'desc' : 'asc',\n            })\n        );\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    // const handleChangeRowsPerPage = (event) => {\n    //     setRowsPerPage(parseInt(event.target.value, 10));\n    //     setPage(0);\n    // };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    // const emptyRows =\n    //     rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    selected={selected}\n                    setSnackBarState={setSnackBarState}\n                    snackBarState={snackBarState}\n                    refetch={refetch}\n                    setSelected={setSelected}\n                />\n                <DeleteModal\n                    open={modalOpen}\n                    onClose={handleModalClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    deleteHandler={handleDelete(modalDeleteId)}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rows,\n                                getComparator(order, orderBy)\n                            ).map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId,\n                                                }}\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            padding=\"none\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.firstname}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.lastname}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.belt === 'undefined'\n                                                ? ''\n                                                : beltMapper(\n                                                      row.belt,\n                                                      beltSetting\n                                                  )}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.beltsize === 'undefined'\n                                                ? ''\n                                                : row.beltsize}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.lastbelttest === 'undefined'\n                                                ? ''\n                                                : row.lastbelttest}\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            {row.phonecell === 'undefined'\n                                                ? ''\n                                                : row.phonecell}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.dateofbirth === 'undefined'\n                                                ? ''\n                                                : row.dateofbirth}\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            {row.action}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                            {/* {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )} */}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <TablePagination\n                    rowsPerPageOptions={[15, 30, 50]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                /> */}\n            </Paper>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getAllStudents, getStudentLastAttendance } from '../helper/db';\nimport { Typography, Chip } from '@material-ui/core';\nimport Stack from '@mui/material/Stack';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport { absentTypeCalculator } from '../helper/util';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        padding: '40px',\n        flexDirection: 'column',\n    },\n    subHeader: {\n        marginBottom: '10px',\n    },\n    stack: {\n        marginBottom: '40px',\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [stats, setStats] = useState({\n        week1: [],\n        week2: [],\n        week3: [],\n        more: [],\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        const getAllAbsents = async () => {\n            const tempResult = await getAllStudents();\n            if (tempResult === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const tempStudents = {};\n            tempResult.map((student) => {\n                tempStudents[student.id] = {\n                    name: `${student.firstname} ${student.lastname}`,\n                };\n            });\n\n            const result = await getStudentLastAttendance();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const week1 = [];\n            const week2 = [];\n            const week3 = [];\n            const none = [];\n            const more = [];\n            await result.map((student) => {\n                const days = absentTypeCalculator(student.lastdate);\n                if (days === '1') {\n                    week1.push({\n                        ...student,\n                        name: tempStudents[student.studentid]?.name,\n                    });\n                } else if (days === '2') {\n                    week2.push({\n                        ...student,\n                        name: tempStudents[student.studentid]?.name,\n                    });\n                } else if (days === '3') {\n                    week3.push({\n                        ...student,\n                        name: tempStudents[student.studentid]?.name,\n                    });\n                } else if (days === 'more') {\n                    more.push({\n                        ...student,\n                        name: tempStudents[student.studentid]?.name,\n                    });\n                } else if (days === 'none') {\n                    none.push({\n                        ...student,\n                        name: tempStudents[student.studentid]?.name,\n                    });\n                }\n            });\n            setStats({ week1, week2, week3, more });\n        };\n        getAllAbsents();\n    }, []);\n\n    const handleNavigate = (studentid) => {\n        history.push({ pathname: `/detailstudent/${studentid}` });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" gutterBottom className={classes.subHeader}>\n                More than 1 week\n            </Typography>\n            <Stack direction=\"row\" spacing={1} className={classes.stack}>\n                {stats.week1.map((student) => {\n                    if (student.name) {\n                        return (\n                            <Chip\n                                label={student.name}\n                                variant=\"outlined\"\n                                onClick={() =>\n                                    handleNavigate(student.studentid)\n                                }\n                            />\n                        );\n                    }\n                })}\n            </Stack>\n            <Typography variant=\"h6\" gutterBottom className={classes.subHeader}>\n                More than 2 weeks\n            </Typography>\n            <Stack direction=\"row\" spacing={1} className={classes.stack}>\n                {stats.week2.map((student) => {\n                    if (student.name) {\n                        return (\n                            <Chip\n                                label={student.name}\n                                variant=\"outlined\"\n                                onClick={() =>\n                                    handleNavigate(student.studentid)\n                                }\n                            />\n                        );\n                    }\n                })}\n            </Stack>\n            <Typography variant=\"h6\" gutterBottom className={classes.subHeader}>\n                More than 3 weeks\n            </Typography>\n            <Stack direction=\"row\" spacing={1} className={classes.stack}>\n                {stats.week3.map((student) => {\n                    if (student.name) {\n                        return (\n                            <Chip\n                                label={student.name}\n                                variant=\"outlined\"\n                                onClick={() =>\n                                    handleNavigate(student.studentid)\n                                }\n                            />\n                        );\n                    }\n                })}\n            </Stack>\n            <Typography variant=\"h6\" gutterBottom className={classes.subHeader}>\n                More\n            </Typography>\n            <Stack direction=\"row\" spacing={1} className={classes.stack}>\n                {stats.more.map((student) => {\n                    if (student.name) {\n                        return (\n                            <Chip\n                                label={student.name}\n                                variant=\"outlined\"\n                                onClick={() =>\n                                    handleNavigate(student.studentid)\n                                }\n                            />\n                        );\n                    }\n                })}\n            </Stack>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getNumStudents, getConfigInfo, getNumBelts } from '../helper/db';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { beltsA, beltsB, beltsClassA, beltsClassB } from '../helper/constant';\nimport { Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        padding: '40px',\n        flexDirection: 'column',\n    },\n    table: { width: '400px', marginBottom: '60px' },\n}));\n\nconst createData = (name, num, code) => {\n    return {\n        name,\n        num,\n        code,\n    };\n};\n\nexport default function Home() {\n    const classes = useStyles();\n    const [stats, setStats] = useState({\n        totalNum: 0,\n        belt: {\n            class1: { b01: 0, b02: 0, b03: 0, b04: 0, b05: 0, b06: 0 },\n            class2: {\n                b07: 0,\n                b08: 0,\n                b09: 0,\n                b10: 0,\n                b11: 0,\n                b12: 0,\n                b13: 0,\n                b14: 0,\n                b15: 0,\n                b16: 0,\n            },\n            class3: {\n                b17: 0,\n                b18: 0,\n                b19: 0,\n                b20: 0,\n                b21: 0,\n                b22: 0,\n            },\n            class4: {\n                b23: 0,\n                b24: 0,\n                b25: 0,\n                b26: 0,\n                b27: 0,\n                b28: 0,\n                b29: 0,\n                b30: 0,\n                b31: 0,\n            },\n            class5: {\n                b32: 0,\n                b33: 0,\n                b34: 0,\n                b35: 0,\n                b36: 0,\n                b37: 0,\n                b38: 0,\n                b39: 0,\n                b40: 0,\n                b41: 0,\n                b42: 0,\n                b43: 0,\n            },\n        },\n    });\n    const [beltSetting, setBeltSetting] = React.useState('a');\n    const history = useHistory();\n\n    useEffect(() => {\n        const getAllStats = async () => {\n            const result = await getConfigInfo();\n            setBeltSetting(result[0].beltsetting);\n\n            const beltSetting = result[0]?.beltsetting;\n            let beltClass;\n            if (beltSetting === 'a') {\n                beltClass = beltsClassA;\n            } else {\n                beltClass = beltsClassB;\n            }\n\n            const temp = {\n                class1: {},\n                class2: {},\n                class3: {},\n                class4: {},\n                class5: {},\n                total1: 0,\n                total2: 0,\n                total3: 0,\n                total4: 0,\n                total5: 0,\n            };\n\n            const numBeltsResult = await getNumBelts();\n            const numBelts = {};\n            numBeltsResult.map((m) => (numBelts[m.belt] = m.count));\n\n            beltClass.class1.map((belt) => {\n                const beltCount = numBelts.hasOwnProperty(belt)\n                    ? numBelts[belt]\n                    : '0';\n                temp.class1[belt] = {\n                    count: beltCount,\n                    code: belt,\n                };\n                temp.total1 += parseInt(beltCount);\n            });\n            beltClass.class2.map(async (belt) => {\n                const beltCount = numBelts.hasOwnProperty(belt)\n                    ? numBelts[belt]\n                    : '0';\n                temp.class2[belt] = {\n                    count: beltCount,\n                    code: belt,\n                };\n                temp.total2 += parseInt(beltCount);\n            });\n            beltClass.class3.map(async (belt) => {\n                const beltCount = numBelts.hasOwnProperty(belt)\n                    ? numBelts[belt]\n                    : '0';\n                temp.class3[belt] = {\n                    count: beltCount,\n                    code: belt,\n                };\n                temp.total3 += parseInt(beltCount);\n            });\n            beltClass.class4.map(async (belt) => {\n                const beltCount = numBelts.hasOwnProperty(belt)\n                    ? numBelts[belt]\n                    : '0';\n                temp.class4[belt] = {\n                    count: beltCount,\n                    code: belt,\n                };\n                temp.total4 += parseInt(beltCount);\n            });\n            beltClass.class5.map(async (belt) => {\n                const beltCount = numBelts.hasOwnProperty(belt)\n                    ? numBelts[belt]\n                    : '0';\n                temp.class5[belt] = {\n                    count: beltCount,\n                    code: belt,\n                };\n                temp.total5 += parseInt(beltCount);\n            });\n            const numStudents = await getNumStudents();\n            setStats({\n                totalNum: numStudents,\n                belt: {\n                    ...temp,\n                },\n            });\n        };\n        getAllStats();\n    }, []);\n\n    let belts;\n    if (beltSetting === 'a') {\n        belts = beltsA;\n    } else {\n        belts = beltsB;\n    }\n\n    console.log('***', stats);\n    const rows1 = Object.entries(stats.belt.class1)\n        .sort((a, b) => (a[1].code > b[1].code ? 1 : -1))\n        .map((belt) => createData(belts[belt[0]], belt[1].count, belt[1].code));\n    const rows2 = Object.entries(stats.belt.class2)\n        .sort((a, b) => (a[1].code > b[1].code ? 1 : -1))\n        .map((belt) => createData(belts[belt[0]], belt[1].count, belt[1].code));\n    const rows3 = Object.entries(stats.belt.class3)\n        .sort((a, b) => (a[1].code > b[1].code ? 1 : -1))\n        .map((belt) => createData(belts[belt[0]], belt[1].count, belt[1].code));\n    const rows4 = Object.entries(stats.belt.class4)\n        .sort((a, b) => (a[1].code > b[1].code ? 1 : -1))\n        .map((belt) => createData(belts[belt[0]], belt[1].count, belt[1].code));\n    const rows5 = Object.entries(stats.belt.class5)\n        .sort((a, b) => (a[1].code > b[1].code ? 1 : -1))\n        .map((belt) => createData(belts[belt[0]], belt[1].count, belt[1].code));\n\n    const handleNavigate = (belt) => {\n        history.push({ pathname: `/activestudentsbybelt/${belt}` });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\" gutterBottom className={classes.subHeader}>\n                {`Total Number of Students: ${stats.totalNum.count}`}\n            </Typography>\n            <TableContainer>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Belt Color</TableCell>\n                            <TableCell align=\"right\">\n                                Number of Students\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows1.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                onClick={() => handleNavigate(row.code)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.num}</TableCell>\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <b>Total Students</b>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <b>{stats?.belt?.total1}</b>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Belt Color</TableCell>\n                            <TableCell align=\"right\">\n                                Number of Students\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows2.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                onClick={() => handleNavigate(row.code)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.num}</TableCell>\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <b>Total Students</b>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <b>{stats?.belt?.total2}</b>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Belt Color</TableCell>\n                            <TableCell align=\"right\">\n                                Number of Students\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows3.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                onClick={() => handleNavigate(row.code)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.num}</TableCell>\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <b>Total Students</b>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <b>{stats?.belt?.total3}</b>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Belt Color</TableCell>\n                            <TableCell align=\"right\">\n                                Number of Students\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows4.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                onClick={() => handleNavigate(row.code)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.num}</TableCell>\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <b>Total Students</b>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <b>{stats?.belt?.total4}</b>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Belt Color</TableCell>\n                            <TableCell align=\"right\">\n                                Number of Students\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows5.map((row) => (\n                            <TableRow\n                                key={row.name}\n                                onClick={() => handleNavigate(row.code)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.num}</TableCell>\n                            </TableRow>\n                        ))}\n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                <b>Total Students</b>\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <b>{stats?.belt?.total5}</b>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Webcam from 'react-webcam';\nimport { useRecoilState } from 'recoil';\nimport SaveModal from './SaveModal';\nimport { SnackBarState } from './recoilHelper';\nimport { savePicture } from '../helper/db';\n\nconst root = {\n    display: 'flex',\n    flexDirection: 'column',\n};\n\nconst button = {\n    width: 'fit-content',\n    margin: '0 auto 30px auto',\n};\n\nconst videoConstraints = {\n    width: 180,\n    height: 220,\n    facingMode: 'user',\n};\n\nconst webcamContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '0 auto 30px auto',\n    gap: '20px',\n};\n\nconst imageContainer = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px',\n};\n\nconst buttonContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '0 auto 30px auto',\n    gap: '20px',\n};\n\nconst capturedImage = {\n    width: videoConstraints.width,\n    height: videoConstraints.height,\n};\n\nconst TakePicture = () => {\n    const webcamRef = React.useRef(null);\n    const [picture, setPicture] = React.useState('');\n    const [saveConfirmOpen, setSaveConfirmOpen] = React.useState(false);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const { id: studentid } = useParams();\n    const history = useHistory();\n\n    const handleSaveConfirmOpen = () => {\n        setSaveConfirmOpen(true);\n    };\n\n    const handleSaveConfirmClose = () => {\n        setSaveConfirmOpen(false);\n    };\n\n    const savePictureHandler = () => async () => {\n        const response = await savePicture({\n            studentid,\n            picture,\n        });\n        if (response === 'success') {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            setPicture('');\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const capture = React.useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        setPicture(imageSrc);\n    }, [webcamRef]);\n\n    return (\n        <div style={root}>\n            <SaveModal\n                open={saveConfirmOpen}\n                onClose={handleSaveConfirmClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                saveHandler={savePictureHandler()}\n            />\n            <div style={webcamContainer}>\n                <div style={imageContainer}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Camera\n                    </Typography>\n                    <Webcam\n                        audio={false}\n                        height={videoConstraints.height}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        width={videoConstraints.width}\n                        videoConstraints={videoConstraints}\n                    />\n                </div>\n                {picture === '' ? (\n                    <></>\n                ) : (\n                    <div style={imageContainer}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Captured\n                        </Typography>\n                        <img src={picture} style={capturedImage} />{' '}\n                    </div>\n                )}\n            </div>\n            <div style={buttonContainer}>\n                <Button\n                    onClick={() => history.push(`/detailstudent/${studentid}`)}\n                    variant=\"contained\"\n                    style={button}\n                >\n                    Back\n                </Button>\n                <Button\n                    onClick={capture}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={button}\n                >\n                    Capture\n                </Button>\n                {picture === '' ? (\n                    <></>\n                ) : (\n                    <Button\n                        onClick={() => handleSaveConfirmOpen()}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={button}\n                    >\n                        Save\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TakePicture;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Snackbar,\n    Button,\n    TextField,\n} from '@material-ui/core';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport { getConfigInfo, setConfigInfo, getAdmin, setAdmin } from '../helper/db';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: { display: 'flex', flexDirection: 'column' },\n    saveButton: { width: '100px', marginTop: '20px' },\n    textField: { width: '200px', marginBottom: '30px' },\n    label: { marginBottom: '5px' },\n}));\n\nexport default function Settings() {\n    const classes = useStyles();\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [beltSetting, setBeltSetting] = useState('a');\n    const [open, setOpen] = React.useState(false);\n    const [openError, setOpenError] = React.useState(false);\n    const [academyName, setAcademyname] = React.useState('');\n    const [address, setAddress] = React.useState('');\n    const [phone, setPhone] = React.useState('');\n    const [username, setUsername] = React.useState('');\n    const [passwordinfo, setPassword] = React.useState('');\n    const [businessnumber, setBusinessnumber] = React.useState('');\n    const [city, setCity] = React.useState('');\n    const [province, setProvince] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [postalcode, setPostalcode] = React.useState('');\n\n    useEffect(() => {\n        const setConfig = async () => {\n            const result = await getConfigInfo();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(result[0].beltsetting);\n            setAcademyname(result[0].academyname);\n            setAddress(result[0].address);\n            setPhone(result[0].phone);\n            setBusinessnumber(result[0].businessnumber);\n            setCity(result[0].city);\n            setProvince(result[0].province);\n            setPostalcode(result[0].postalcode);\n            setEmail(result[0].email);\n            const resultAdmin = await getAdmin();\n            setUsername(resultAdmin.username);\n            setPassword(resultAdmin.passwordinfo);\n        };\n        setConfig();\n    }, []);\n\n    const handleChange = (e) => {\n        setBeltSetting(e.target.value);\n    };\n\n    const handleSave = async () => {\n        const result = await setConfigInfo(\n            beltSetting,\n            academyName,\n            address,\n            phone,\n            city,\n            postalcode,\n            province,\n            email,\n            businessnumber\n        );\n        const result2 = await setAdmin(username, passwordinfo);\n        if (result && result2 === 'success') {\n            setOpen(true);\n        } else {\n            setOpenError(true);\n        }\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const handleCloseError = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenError(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleClose} severity=\"info\">\n                    Successfully saved!\n                </Alert>\n            </Snackbar>\n            <Snackbar\n                open={openError}\n                autoHideDuration={6000}\n                onClose={handleCloseError}\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            >\n                <Alert onClose={handleCloseError} severity=\"error\">\n                    Something went wrong. Please try again.\n                </Alert>\n            </Snackbar>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    User Name\n                </FormLabel>\n                <TextField\n                    id=\"username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Password\n                </FormLabel>\n                <TextField\n                    id=\"passwordinfo\"\n                    value={passwordinfo}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className={classes.textField}\n                    type=\"password\"\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Name of Academy\n                </FormLabel>\n                <TextField\n                    id=\"academyName\"\n                    value={academyName}\n                    onChange={(e) => setAcademyname(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Address\n                </FormLabel>\n                <TextField\n                    id=\"address\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    City\n                </FormLabel>\n                <TextField\n                    id=\"city\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Province\n                </FormLabel>\n                <TextField\n                    id=\"province\"\n                    value={province}\n                    onChange={(e) => setProvince(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Postal Code\n                </FormLabel>\n                <TextField\n                    id=\"postalcode\"\n                    value={postalcode}\n                    onChange={(e) => setPostalcode(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Email\n                </FormLabel>\n                <TextField\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Busines Number\n                </FormLabel>\n                <TextField\n                    id=\"businessnumber\"\n                    value={businessnumber}\n                    onChange={(e) => setBusinessnumber(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Phone Number\n                </FormLabel>\n                <TextField\n                    id=\"phone\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    className={classes.textField}\n                />\n            </FormControl>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\" className={classes.label}>\n                    Belt Settings\n                </FormLabel>\n                <RadioGroup\n                    aria-label=\"beltSettings\"\n                    name=\"beltSettings\"\n                    value={beltSetting}\n                    onChange={handleChange}\n                >\n                    <FormControlLabel\n                        value=\"a\"\n                        control={<Radio />}\n                        label=\"Type A\"\n                    />\n                    <FormControlLabel\n                        value=\"b\"\n                        control={<Radio />}\n                        label=\"Type B\"\n                    />\n                </RadioGroup>\n            </FormControl>\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleSave()}\n                className={classes.saveButton}\n            >\n                Save\n            </Button>\n        </div>\n    );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    Chip,\n    Button,\n    TextField,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\nimport { SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport QrReader from 'react-qr-scanner';\nimport { getAllStudents, updateBelt } from '../helper/db';\nimport moment from 'moment';\nimport { beltUpdate } from '../helper/constant';\n\nconst useStyles = makeStyles((theme) => ({\n    root: { display: 'flex', flexDirection: 'column', textAlign: 'center' },\n    camera: { marginBottom: '20px' },\n    status: { marginBottom: '20px' },\n    result: { marginBottom: '20px' },\n    footer: { marginTop: '10px' },\n    chip: { margin: '5px' },\n    manualInput: {\n        display: 'flex',\n        flexDirection: 'row',\n        height: '50px',\n        textAlign: 'center',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginBottom: '20px',\n    },\n    manualInputTextField: { marginRight: '5px', width: '300px' },\n    manualInputButton: {\n        height: '35px',\n        marginTop: 'auto',\n        marginBottom: 'auto',\n    },\n    methods: { marginLeft: 'auto', marginRight: 'auto' },\n    scannerInputTextField: { width: 0 },\n    dateText: {\n        minWidth: '300px',\n        maxWidth: '300px',\n        margin: '0 auto 20px auto',\n    },\n}));\n\nexport default function BeltUpdate() {\n    const classes = useStyles();\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n    const [qrResult, setQrResult] = React.useState([]);\n    const [inputMethod, setInputMethod] = React.useState('scanner');\n    const [students, setStudents] = React.useState({});\n    const [display, setDisplay] = React.useState('Please scan');\n    const [manualStudent, setManualStudent] = React.useState('');\n    const [scannerStudent, setScannerStudent] = React.useState('');\n    const inputElement = useRef(null);\n    const [scannerTimeout, setScannerTimeout] = React.useState('');\n    const [date, setDate] = React.useState(moment().format('YYYY-MM-DD'));\n\n    const previewStyle = {\n        height: '240px',\n        width: '320px',\n    };\n    const qrDelay = 300;\n\n    const refetch = async () => {\n        const setAllStudents = async () => {\n            const result = await getAllStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const tempStudents = {};\n            result.map((student) => {\n                tempStudents[student.id] = {\n                    name: `${student.firstname} ${student.lastname}`,\n                    belt: student.belt,\n                };\n            });\n            setStudents(tempStudents);\n        };\n        setAllStudents();\n\n        if (inputElement.current) {\n            inputElement.current.focus();\n        }\n    };\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const result = await getAllStudents();\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            const tempStudents = {};\n            result.map((student) => {\n                tempStudents[student.id] = {\n                    name: `${student.firstname} ${student.lastname}`,\n                    belt: student.belt,\n                };\n            });\n            setStudents(tempStudents);\n        };\n        setAllStudents();\n\n        if (inputElement.current) {\n            inputElement.current.focus();\n        }\n    }, []);\n\n    const handleScan = (data) => {\n        if (data && data.text) {\n            const strip = data.text.replace('academyhelper', '');\n            let isExist = strip in students;\n            let isScanned = false;\n            qrResult.map((result) => {\n                if (result.id === strip) {\n                    isScanned = true;\n                }\n            });\n\n            if (!isExist) {\n                setDisplay(`Student id ${strip} is unknown. Please check.`);\n            }\n            if (isScanned) {\n                setDisplay('Already scanned');\n            }\n            if (isExist && !isScanned) {\n                const updatedBelt = beltUpdate(students[strip].belt);\n                const temp = [...qrResult];\n                temp.push({\n                    id: strip,\n                    name: students[strip].name,\n                    belt: updatedBelt,\n                });\n                setQrResult(temp);\n                setDisplay('Scanned successfully');\n            }\n        }\n    };\n\n    const handleError = (err) => {\n        console.error(err);\n    };\n\n    const handleDelete = (id) => {\n        const temp = [];\n        qrResult.map((result) => {\n            if (result.id !== id) {\n                temp.push(result);\n            }\n        });\n        setQrResult(temp);\n    };\n\n    const handleChange = (value) => {\n        setManualStudent(value);\n    };\n\n    const handleManualScan = () => {\n        let isExist = manualStudent in students;\n        let isScanned = false;\n        qrResult.map((result) => {\n            if (result.id === manualStudent) {\n                isScanned = true;\n            }\n        });\n\n        if (!isExist) {\n            setDisplay(`Student id ${manualStudent} is unknown. Please check.`);\n        }\n        if (isScanned) {\n            setDisplay('Already scanned');\n        }\n        if (isExist && !isScanned) {\n            const updatedBelt = beltUpdate(students[manualStudent].belt);\n            const temp = [...qrResult];\n            temp.push({\n                id: manualStudent,\n                name: students[manualStudent].name,\n                belt: updatedBelt,\n            });\n            setQrResult(temp);\n            setDisplay('Scanned successfully');\n        }\n\n        setManualStudent('');\n    };\n\n    const handleSubmit = async () => {\n        let result = 'success';\n        qrResult.map(async (qr) => {\n            const tempResult = await updateBelt(qr.id, qr.belt, date);\n            if (tempResult === 'fail') {\n                result = 'fail';\n            }\n        });\n        if (result === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        if (result === 'success') {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            setQrResult([]);\n            refetch();\n        }\n    };\n\n    const handleInputMethodChange = (e) => {\n        setInputMethod(e.target.value);\n    };\n\n    const handleScannerChange = (value) => {\n        //setScannerStudent(value);\n        clearTimeout(scannerTimeout);\n        setScannerStudent(value);\n        const timeoutId = setTimeout(() => {\n            handleScannerScan(value);\n        }, 500);\n        setScannerTimeout(timeoutId);\n    };\n\n    const handleScannerScan = (value) => {\n        const strip = value.replace('academyhelper', '');\n        let isExist = strip in students;\n        let isScanned = false;\n        qrResult.map((result) => {\n            if (result.id === strip) {\n                isScanned = true;\n            }\n        });\n\n        if (!isExist) {\n            setDisplay(`Student id ${strip} is unknown. Please check.`);\n        }\n        if (isScanned) {\n            setDisplay('Already scanned');\n        }\n        if (isExist && !isScanned) {\n            const updatedBelt = beltUpdate(students[strip].belt);\n            const temp = [...qrResult];\n            temp.push({\n                id: strip,\n                name: students[strip].name,\n                belt: updatedBelt,\n            });\n            setQrResult(temp);\n            setDisplay('Scanned successfully');\n        }\n        setScannerStudent('');\n    };\n\n    const handleDate = (e) => {\n        setDate(e.target.value);\n    };\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={(e) => handleDate(e)}\n                value={date}\n                className={classes.dateText}\n            />\n            {inputMethod === 'webcam' && (\n                <div className={classes.camera}>\n                    <QrReader\n                        delay={qrDelay}\n                        style={previewStyle}\n                        onError={handleError}\n                        onScan={handleScan}\n                    />\n                </div>\n            )}\n            <Typography variant=\"h5\" gutterBottom className={classes.status}>\n                {display}\n            </Typography>\n            <div className={classes.result}>\n                {qrResult.map((result) => {\n                    return (\n                        <Chip\n                            key={result.id}\n                            label={result.name}\n                            className={classes.chip}\n                            onDelete={() => handleDelete(result.id)}\n                        />\n                    );\n                })}\n            </div>\n\n            <FormControl component=\"fieldset\" className={classes.methods}>\n                <FormLabel component=\"legend\">\n                    How would you like to scan?\n                </FormLabel>\n                <RadioGroup\n                    aria-label=\"methods\"\n                    name=\"methods\"\n                    value={inputMethod}\n                    onChange={handleInputMethodChange}\n                >\n                    <FormControlLabel\n                        value=\"scanner\"\n                        control={<Radio />}\n                        label=\"QR Code Scanner\"\n                    />\n                    <FormControlLabel\n                        value=\"webcam\"\n                        control={<Radio />}\n                        label=\"Camera\"\n                    />\n                    <FormControlLabel\n                        value=\"manual\"\n                        control={<Radio />}\n                        label=\"Manual\"\n                    />\n                </RadioGroup>\n            </FormControl>\n\n            {inputMethod === 'scanner' && (\n                <TextField\n                    ref={inputElement}\n                    id=\"scannerId\"\n                    value={scannerStudent}\n                    onChange={(e) => handleScannerChange(e.target.value)}\n                    className={classes.scannerInputTextField}\n                    autoFocus={true}\n                    onBlur={({ target }) => target.focus()}\n                    autoComplete=\"none\"\n                />\n            )}\n\n            {inputMethod === 'manual' && (\n                <div className={classes.manualInput}>\n                    <TextField\n                        id=\"id\"\n                        label=\"Student ID\"\n                        value={manualStudent}\n                        onChange={(e) => handleChange(e.target.value)}\n                        className={classes.manualInputTextField}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"default\"\n                        className={classes.manualInputButton}\n                        onClick={() => handleManualScan()}\n                    >\n                        Update\n                    </Button>\n                </div>\n            )}\n            <div className={classes.footer}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => handleSubmit()}\n                >\n                    Submit\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Paper,\n    Checkbox,\n} from '@material-ui/core';\nimport {\n    createData,\n    getComparator,\n    stableSort,\n    EnhancedTableToolbar,\n    EnhancedTableHead,\n    dobYearRemover,\n} from './tableHelper';\nimport {\n    getAllStudentsByBelt,\n    deleteStudent,\n    getConfigInfo,\n} from '../helper/db';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { IdState, SnackBarState } from './recoilHelper';\nimport { useRecoilState } from 'recoil';\nimport DeleteModal from './DeleteModal';\nimport { beltMapper } from '../helper/constant';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxHeight: 'calc(100vh - 150px)',\n        overflowX: 'scroll',\n    },\n    paper: {\n        width: 'max-content',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function ActiveStudentsByBelt() {\n    const classes = useStyles();\n    const [rows, setRows] = useState([]);\n    const [id, setId] = useRecoilState(IdState);\n    const history = useHistory();\n    const { belt } = useParams();\n\n    // table\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('id');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    // const [rowsPerPage, setRowsPerPage] = React.useState(15);\n    const [snackBarState, setSnackBarState] = useRecoilState(SnackBarState);\n\n    // modal\n    const [modalOpen, setModalOpen] = React.useState(false);\n    const [modalDeleteId, setModalDeleteId] = React.useState(undefined);\n\n    // belt\n    const [beltSetting, setBeltSetting] = React.useState('a');\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleNavigate = (id) => {\n        setId(id);\n        history.push({ pathname: `/detailstudent/${id}` });\n    };\n\n    const handleEdit = (id) => {\n        setId(id);\n        history.push(`/editstudent/${id}`);\n    };\n\n    const handleDeleteModal = (id) => {\n        setModalDeleteId(id);\n        handleModalOpen();\n    };\n\n    const handleDelete = (id) => async () => {\n        const result = await deleteStudent(id);\n        if (result) {\n            setSnackBarState({ ...snackBarState, openSuccess: true });\n            const tempSelected = [];\n            selected.map((selectedId) => {\n                if (selectedId !== id) {\n                    tempSelected.push(selectedId);\n                }\n            });\n            setSelected([...tempSelected]);\n            refetch();\n            handleModalClose();\n        } else {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n    };\n\n    const refetch = async () => {\n        const resultBelt = await getConfigInfo();\n        if (resultBelt === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        setBeltSetting(resultBelt[0].beltsetting);\n        const orderByBelt = localStorage.getItem('orderByBelt');\n        const orderBy_ = orderByBelt ? JSON.parse(orderByBelt).orderBy : 'id';\n        const orderType_ = orderByBelt\n            ? JSON.parse(orderByBelt).orderType\n            : 'asc';\n        setOrderBy(orderBy_);\n        setOrder(orderType_);\n\n        const result = await getAllStudentsByBelt(belt);\n        if (result === 'fail') {\n            setSnackBarState({ ...snackBarState, openError: true });\n        }\n        // find id and add action buttons\n        const tableData = [];\n        result.map((row) => {\n            tableData.push(\n                createData(\n                    row.id,\n                    row.firstname,\n                    row.lastname,\n                    row.belt,\n                    row.beltsize,\n                    row.lastbelttest,\n                    row.phonecell,\n                    row.enddate,\n                    dobYearRemover(row.dateofbirth),\n                    <>\n                        <Button onClick={() => handleNavigate(row.id)}>\n                            View\n                        </Button>\n                        <Button onClick={() => handleEdit(row.id)}>Edit</Button>\n                        <Button\n                            onClick={() => handleDeleteModal(row.id)}\n                            color=\"secondary\"\n                        >\n                            Delete\n                        </Button>\n                    </>,\n                    row.carestudent\n                )\n            );\n        });\n        setRows(tableData);\n    };\n\n    useEffect(() => {\n        const setAllStudents = async () => {\n            const resultBelt = await getConfigInfo();\n            if (resultBelt === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            setBeltSetting(resultBelt[0].beltsetting);\n            const orderByBelt = localStorage.getItem('orderByBelt');\n            const orderBy_ = orderByBelt\n                ? JSON.parse(orderByBelt).orderBy\n                : 'id';\n            const orderType_ = orderByBelt\n                ? JSON.parse(orderByBelt).orderType\n                : 'asc';\n            setOrderBy(orderBy_);\n            setOrder(orderType_);\n\n            const result = await getAllStudentsByBelt(belt);\n            if (result === 'fail') {\n                setSnackBarState({ ...snackBarState, openError: true });\n            }\n            // find id and add action buttons\n            const tableData = [];\n            result.map((row) => {\n                tableData.push(\n                    createData(\n                        row.id,\n                        row.firstname,\n                        row.lastname,\n                        row.belt,\n                        row.beltsize,\n                        row.lastbelttest,\n                        row.phonecell,\n                        row.enddate,\n                        dobYearRemover(row.dateofbirth),\n                        <>\n                            <Button onClick={() => handleNavigate(row.id)}>\n                                View\n                            </Button>\n                            <Button onClick={() => handleEdit(row.id)}>\n                                Edit\n                            </Button>\n                            <Button\n                                onClick={() => handleDeleteModal(row.id)}\n                                color=\"secondary\"\n                            >\n                                Delete\n                            </Button>\n                        </>,\n                        row.carestudent\n                    )\n                );\n            });\n            setRows(tableData);\n        };\n        setAllStudents();\n    }, []);\n\n    const handleRequestSort = async (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        localStorage.setItem(\n            'orderByBelt',\n            JSON.stringify({\n                orderBy: property,\n                orderType: isAsc ? 'desc' : 'asc',\n            })\n        );\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    // const handleChangeRowsPerPage = (event) => {\n    //     setRowsPerPage(parseInt(event.target.value, 10));\n    //     setPage(0);\n    // };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n\n    // const emptyRows =\n    //     rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                    numSelected={selected.length}\n                    selected={selected}\n                    setSnackBarState={setSnackBarState}\n                    snackBarState={snackBarState}\n                    refetch={refetch}\n                    setSelected={setSelected}\n                />\n                <DeleteModal\n                    open={modalOpen}\n                    onClose={handleModalClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    deleteHandler={handleDelete(modalDeleteId)}\n                />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(\n                                rows,\n                                getComparator(order, orderBy)\n                            ).map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId,\n                                                }}\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            padding=\"none\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            <span\n                                                style={\n                                                    row.carestudent\n                                                        ? {\n                                                              backgroundColor:\n                                                                  'yellow',\n                                                          }\n                                                        : {}\n                                                }\n                                            >\n                                                {row.firstname}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            <span\n                                                style={\n                                                    row.carestudent\n                                                        ? {\n                                                              backgroundColor:\n                                                                  'yellow',\n                                                          }\n                                                        : {}\n                                                }\n                                            >\n                                                {row.lastname}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.belt === 'undefined'\n                                                ? ''\n                                                : beltMapper(\n                                                      row.belt,\n                                                      beltSetting\n                                                  )}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.beltsize === 'undefined'\n                                                ? ''\n                                                : row.beltsize}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.lastbelttest === 'undefined'\n                                                ? ''\n                                                : row.lastbelttest}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.phonecell === 'undefined'\n                                                ? ''\n                                                : row.phonecell}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.enddate === 'undefined'\n                                                ? ''\n                                                : row.enddate}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"left\"\n                                            onClick={() =>\n                                                handleNavigate(row.id)\n                                            }\n                                        >\n                                            {row.dateofbirth === 'undefined'\n                                                ? ''\n                                                : row.dateofbirth}\n                                        </TableCell>\n                                        <TableCell align=\"left\">\n                                            {row.action}\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                            {/* {emptyRows > 0 && (\n                                <TableRow\n                                    style={{\n                                        height: 53 * emptyRows,\n                                    }}\n                                >\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )} */}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                {/* <TablePagination\n                    rowsPerPageOptions={[15, 30, 50]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                /> */}\n            </Paper>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Typography, TextField, InputAdornment } from '@material-ui/core';\nimport moment from 'moment';\nimport { calculateAge } from '../helper/util';\nimport './PadFormToPrint.css';\n\nconst Style = {\n    renderPage: {\n        width: '100%',\n        minWidth: '900px',\n        maxWidth: '900px',\n        fontSize: '16px',\n    },\n    header: {\n        width: '100%',\n        textAlign: 'center',\n    },\n    section: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: '20px',\n    },\n    section2: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        fontSize: '11px',\n    },\n    sectionHeader: {\n        fontWeight: 600,\n        marginBottom: '20px',\n    },\n    sectionRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '15px',\n        marginBottom: '12px',\n    },\n    sectionRowDense: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '8px',\n        marginBottom: '12px',\n    },\n    sectionRowNoMargin: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: '15px',\n    },\n    underline: {\n        borderBottom: '1px solid black',\n        minWidth: '100px',\n    },\n    underlineNoMin: {\n        borderBottom: '1px solid black',\n        minWidth: '20px',\n    },\n    underlineMid: {\n        borderBottom: '1px solid black',\n        minWidth: '160px',\n    },\n    underlineMidHigh: {\n        borderBottom: '1px solid black',\n        minWidth: '400px',\n    },\n    underlineLong: {\n        borderBottom: '1px solid black',\n        minWidth: '500px',\n    },\n    divider: {\n        borderBottom: '2px solid black',\n        width: '100%',\n        marginBottom: '15px',\n    },\n    sectionBox: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginBottom: '15px',\n        border: '1px solid black',\n        padding: '10px',\n        marginTop: '15px',\n    },\n    input: {\n        marginLeft: '5px',\n        marginRight: '5px',\n    },\n};\n\nexport default class PadFormToPrint extends React.Component {\n    render() {\n        const { curStudent, config } = this.props;\n\n        return (\n            <div\n                className=\"print-container\"\n                style={{ margin: '0', padding: '0' }}\n            >\n                <div style={Style.renderPage}>\n                    <div style={Style.header}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            {`${config.academyname} MemberShip Application`}\n                        </Typography>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {`${config.address ? config.address + ',' : ''} ${\n                                config.city ? config.city + ',' : ''\n                            } ${config.province ? config.province : ''} ${\n                                config.postalcode ? config.postalcode : ''\n                            } / ${config.phone ? config.phone : ''}`}\n                        </Typography>\n                    </div>\n                    <div style={Style.section}>\n                        <Typography\n                            variant=\"body\"\n                            style={Style.sectionHeader}\n                            gutterBottom\n                        >\n                            Registrant's\n                        </Typography>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                First Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.firstname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Last Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.lastname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                DOB\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {moment(\n                                    curStudent?.dateofbirth,\n                                    'YYYY-MM-DD'\n                                ).format('MM/DD/YYYY')}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Age\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underlineNoMin}\n                                gutterBottom\n                            >\n                                {calculateAge(curStudent?.dateofbirth)}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Gender\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underlineNoMin}\n                                gutterBottom\n                            >\n                                {curStudent?.sex === 'male' ? 'M' : 'F'}\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                Address\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underlineLong}\n                                gutterBottom\n                            >\n                                {curStudent?.studentaddress}\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                Phone Numbers: Cell\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.phonecell}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Home\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.phonehome}\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                Email\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underlineLong}\n                                gutterBottom\n                            >\n                                {curStudent?.email}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div style={Style.section}>\n                        <Typography\n                            variant=\"body\"\n                            style={Style.sectionHeader}\n                            gutterBottom\n                        >\n                            MEMBER / PARENT / LEGAL GUARDIAN (if under 18):\n                        </Typography>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                1. First Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent1firstname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Last Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent1lastname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Cell:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent1phonecell}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Email:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent1email}\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRow}>\n                            <Typography variant=\"body\" gutterBottom>\n                                2. First Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent2firstname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Last Name:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent2lastname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Cell:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent2phonecell}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                Email:\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={Style.underline}\n                                gutterBottom\n                            >\n                                {curStudent?.parent2email}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div style={Style.section}>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                Do you have any medical conditions, special\n                                needs or allergies that we should be aware of?{' '}\n                                <mark>YES/NO</mark>\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                If you answered yes, please describe your needs\n                                or condition in detail.\n                            </Typography>\n                        </div>\n                    </div>\n\n                    <div style={Style.divider}></div>\n\n                    <div style={Style.section}>\n                        <div style={Style.sectionRow}>\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                Start Date:\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.startdate,\n                                    'YYYY-MM-DD'\n                                ).format('MM')}\n                                helperText=\"Mon\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '25px' }}\n                            />\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                /\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.startdate,\n                                    'YYYY-MM-DD'\n                                ).format('DD')}\n                                helperText=\"Day\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '25px' }}\n                            />\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                /\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.startdate,\n                                    'YYYY-MM-DD'\n                                ).format('YYYY')}\n                                helperText=\"Year\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '45px' }}\n                            />\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                End Date:\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.enddate,\n                                    'YYYY-MM-DD'\n                                ).format('MM')}\n                                helperText=\"Mon\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '25px' }}\n                            />\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                /\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.enddate,\n                                    'YYYY-MM-DD'\n                                ).format('DD')}\n                                helperText=\"Day\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '25px' }}\n                            />\n                            <Typography\n                                variant=\"body\"\n                                gutterBottom\n                                style={{\n                                    marginTop: '8px',\n                                    marginBottom: 'auto',\n                                }}\n                            >\n                                /\n                            </Typography>\n                            <TextField\n                                id=\"startDate\"\n                                value={moment(\n                                    curStudent?.enddate,\n                                    'YYYY-MM-DD'\n                                ).format('YYYY')}\n                                helperText=\"Year\"\n                                variant=\"standard\"\n                                InputProps={{\n                                    readOnly: true,\n                                }}\n                                style={{ width: '45px' }}\n                            />\n                        </div>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                Monthly Ongoing Contract: □ 1 time/week □ 2\n                                times/week □ 3 times/week □ Unlimited\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                □ Monday □ Tuesday □ Wednesday □ Thursday □\n                                Friday □ Saturday\n                            </Typography>\n                        </div>\n                        <div\n                            style={{ ...Style.sectionRowNoMargin, gap: '5px' }}\n                        >\n                            <Typography variant=\"body\" gutterBottom>\n                                Class: 1st\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                :\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                2nd\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                :\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                3rd\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                :\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                4th\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                :\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                5th\n                            </Typography>{' '}\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                :\n                            </Typography>\n                            <Typography\n                                variant=\"body\"\n                                style={{\n                                    ...Style.underline,\n                                    minWidth: '25px',\n                                }}\n                                gutterBottom\n                            ></Typography>\n                        </div>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                * Based on Electronic Funds Transfer (EFT) on\n                                5th of every month (VOID Cheque Required)\n                            </Typography>\n                        </div>\n                        <div style={Style.sectionRowNoMargin}>\n                            <Typography variant=\"body\" gutterBottom>\n                                * Contracts may be cancelled upon thirty (30)\n                                days’ written notice.\n                            </Typography>\n                        </div>\n\n                        <div style={Style.sectionBox}>\n                            <p>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{ marginLeft: '3px' }}\n                                    gutterBottom\n                                >\n                                    {`I, the buyer, authorize ${config.academyname}\n                                     to process a debit in paper,\n                                    electronic or other form in the amount`}\n                                </Typography>\n                                <TextField\n                                    id=\"tuitionpad\"\n                                    value={curStudent.tuition}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                $\n                                            </InputAdornment>\n                                        ),\n                                        readOnly: true,\n                                    }}\n                                    style={Style.input}\n                                />\n                                <Typography variant=\"body\" gutterBottom>\n                                    on my bank account or credit card on the{' '}\n                                    <mark>___</mark> of each month. I agree that\n                                    each debit authorization shall be as if it\n                                    were personally signed by me. I acknowledge\n                                    that I have read, understood and accepted\n                                    all the provisions contained in the Terms\n                                    and Conditions of the Electronic Funds\n                                    Transfer (EFT)Payment.Authorization and I\n                                    have received a copy.\n                                </Typography>\n                            </p>\n                            <div style={Style.sectionRow}>\n                                <Typography variant=\"body\" gutterBottom>\n                                    I warrant and guarantee that all persons\n                                    whose signatures are required to sign on\n                                    this account have signed thisagreement.\n                                </Typography>\n                            </div>\n                            <div\n                                style={{\n                                    ...Style.sectionRow,\n                                    fontWeight: 600,\n                                }}\n                            >\n                                <Typography variant=\"body\" gutterBottom>\n                                    Bank Name:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        borderBottomWidth: '2px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Transit #:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Bank #:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Account #:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                            </div>\n                            <div\n                                style={{\n                                    ...Style.sectionRowDense,\n                                    fontWeight: 600,\n                                }}\n                            >\n                                <Typography variant=\"body\" gutterBottom>\n                                    Credit Card NO:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        borderBottomWidth: '2px',\n                                        minWidth: '200px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Expire\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                        minWidth: '25px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    /\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                        minWidth: '25px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    CVC#\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                        minWidth: '45px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    (VISA, MASTER, etc\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underline,\n                                        borderBottomWidth: '2px',\n                                        minWidth: '120px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    )\n                                </Typography>\n                            </div>\n                            <div\n                                style={{\n                                    ...Style.sectionRow,\n                                    fontWeight: 600,\n                                }}\n                            >\n                                <Typography variant=\"body\" gutterBottom>\n                                    Account Holder Name (as indicated on\n                                    account):\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMidHigh,\n                                        borderBottomWidth: '2px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                            </div>\n                        </div>\n                        <Typography\n                            variant=\"body\"\n                            style={{ textAlign: 'center' }}\n                            gutterBottom\n                        >\n                            Please Note: There will be a $25.00 service charge\n                            for any returned cheque, EFT\n                        </Typography>\n                    </div>\n                    <div className=\"page-break\" />\n                    <div style={{ ...Style.header }} />\n                    <div style={Style.renderPage}>\n                        <Typography\n                            variant=\"h6\"\n                            style={{ marginTop: '50px', textAlign: 'center' }}\n                            gutterBottom\n                        >\n                            ADDITIONAL PROVISIONS, TERMS AND CONDITIONS\n                        </Typography>\n                        <div style={Style.section2}>\n                            <Typography variant=\"body\" gutterBottom>\n                                {`I, as buyer, enter into this Agreement ${config.academyname}. (hereinafter referred to as\n                                “the Studio”) and do hereby agreeon behalf of\n                                myself, my children, and all persons who become\n                                entitled to use the facilities of the Studio by\n                                virtue of my membership as follows: PIPEDA: I\n                                understand the personal information is being\n                                provided for the purpose of program registration\n                                and solely for the use of same by theStudio\n                                during my membership term. I authorize the\n                                release of any medical information which may be\n                                required during the use of the Studio bymyself\n                                and my child or during any off-premises events\n                                or field trips.`}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                MEMBERSHIP TERM: I agree to pay to the Studio\n                                the sums and charges specified in this Agreement\n                                when due, irrespective of the amount of use I\n                                make of the facility, and to immediately notify\n                                the Studio of any address change or of any other\n                                personal information changes.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                CANCELLATION OF THIS AGREEMENT: I have five (5)\n                                days after signing this agreement to rescind it\n                                in writing. After fulfilling theminimum\n                                commitment as set out on the Agreement, the\n                                maintenance fees may be cancelled by visiting\n                                the Studio and completing a cancellationform one\n                                month (30 days) in advance of the scheduled\n                                payment withdrawal. A fee will apply to cancel\n                                the Agreement prior to its expirationdate.\n                                Phone, fax, email or verbal cancellations are\n                                not accepted. The Studio has the right to cancel\n                                this contract at any time without notice,reason,\n                                or cause.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                MEMBERSHIP HOLDS: If I and/or my child cannot\n                                use the Studio for a valid medical reason\n                                (doctor’s note required), the Studio will put\n                                ahold on my membership until I or my child\n                                am/is/are fit to resume participating by\n                                visiting the Studio and completing a hold form,\n                                one month(30 days) in advance of the scheduled\n                                payment withdrawal. Membership holds for any\n                                other reason are entirely at the Studio’s\n                                discretion andan administration fee may apply.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                WAIVER AND RELEASE: I and my child fully\n                                recognize the risks of injury and/or illness\n                                inherent in participation in any fitness or\n                                martialarts program, and we represent to the\n                                Studio that we have taken all reasonable steps\n                                to determine, and hereby warrant, that we are in\n                                good healthand physically capable of\n                                participating in the programs and courses of\n                                instruction offered by the Studio. We\n                                acknowledge that the Studio shall make no, and\n                                shall have no responsibility to make any\n                                independent evaluation of our physical health or\n                                fitness. We understand and agree that all\n                                participation in any such fitness program or use\n                                of the Studio’s facilities or equipment on or\n                                off the premises of the Studio,\n                                includingtournaments or field trips, shall be at\n                                our own risk.We hereby release, indemnify and\n                                save harmless the Studio, and its officers,\n                                directors, employees and agents from and against\n                                any and claims,demands, damages, costs and\n                                liabilities of any kind or nature, including\n                                solicitor’s fees and costs, for injury to or\n                                death of myself or my child(ren), or of any\n                                person or persons who become entitled to use the\n                                facilities of the Studio by virtue of our\n                                membership, or any third persons,which arise\n                                directly or indirectly out of or in connection\n                                with our participation in any program or course\n                                of instruction either on or off thepremises of\n                                the Studio, or by virtue of our presence at the\n                                Studio or at any of the Studio’s off-premises\n                                events, whether or not in fact we or suchother\n                                persons are then participating in any particular\n                                program or event. We understand and agree that\n                                the Studio shall not be responsible for\n                                theconduct of other users of the Studio or its\n                                facilities or equipment, or participants in the\n                                Studio’s off-premises programs, or for any\n                                injury ordeath or damage to property resulting\n                                from such conduct, and we shall not bring any\n                                action or proceeding against the Studio for any\n                                paymentcompensation or claim for any loss of\n                                life or injury caused by any such user.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                NOT A DAY CARE: We understand that the Studio is\n                                a fitness and martial arts school and not a day\n                                care, and as such, its stock-in-trade is\n                                notsupervision and care, but rather the physical\n                                and character-building skills of the martial\n                                arts. We understand that the Studio is a drop-in\n                                facility, the children are free to come and go\n                                from the Studio, and if my child stays at the\n                                Studio, it is at my direction, and not at the\n                                direction of theStudio.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                LOSS/DAMAGE/THEFT OF PROPERTY: We understand and\n                                agree that neither the Studio, nor its officers,\n                                directors, agents or employeesshall be\n                                responsible for any personal property which is\n                                damaged, lost or stolen in or around the Studio\n                                or its facilities, or at any of the\n                                Studio’soff-premises events and/or field trips.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                RULES AND REGULATIONS: I and my child agree to\n                                abide by the rules and regulations governing the\n                                conduct and operation of thefacilities. We\n                                understand that the Studio has the right to\n                                alter or amend any and all rules and\n                                regulations, including those set forth in\n                                thisMembership Agreement, and we agree to abide\n                                by all such amended rules and regulations. We\n                                understand that our membership and the right\n                                touse the Studio’s facilities and programs may\n                                be suspended or terminated at any time with or\n                                without cause.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                ADDITIONAL COSTS: We understand and agree that\n                                there will be special events held at the Studio,\n                                including but not limited to belt\n                                tests,tournaments, camps, etc., and these events\n                                all incur additional fees beyond the amounts set\n                                forth in this Agreement. We also understand and\n                                agree that the cost of uniforms, equipment,\n                                supplies and food items such as snacks or\n                                beverages are not included in the cost set forth\n                                above, andmust be purchased separately. All\n                                Government taxes, including Goods and Services\n                                Tax, are in addition to and will be\n                                automatically added toall payments. We\n                                understand the Studio reserves the right to\n                                charge extra for any new services.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                <mark>PHOTOGRAPHS:</mark> We hereby authorize\n                                the Studio and its agents, successors and\n                                assigns to photograph me or my child and/or use\n                                our voice without restriction and to utilize\n                                such photographs and/or voice transcriptions for\n                                any commercial purpose, including but not\n                                limited to thepromotion and marketing of the\n                                Studio, and we agree that we shall not be\n                                entitled to receive any compensation whatsoever\n                                or any kind as aresult of such use.\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                AUTHORITY TO TREAT: I give the instructors,\n                                staff and responsible adults of the Studio the\n                                power to authorize medical or other treatment of\n                                myself and/or my child. If I am not the person\n                                named, I am the parent, guardian or adult\n                                responsible for the person named and I have\n                                thelegal right to grant this power. Treatment\n                                may be made without regard to whether I or any\n                                other parent, guardian or adult responsible has\n                                been contacted or has consented to the specific\n                                treatment, provided it does not conflict with\n                                the limitations set out in the Medical\n                                Information Form.This authority begins on the\n                                date signed and continues throughout the term of\n                                the Agreement or any renewal. By giving my\n                                authorization, I assume responsibilities for all\n                                decisions made, provided they are reasonable\n                                decisions under the circumstances based upon the\n                                knowledge and understanding of the person making\n                                the decisions. I understand that the instructors\n                                may have limited skills in first aid and at\n                                their discretion, I authorize them to use those\n                                skills and technique to assist in any\n                                circumstance in which they judge their skills\n                                would be necessary or helpful.I have carefully\n                                read and understand these Additional Provisions,\n                                terms and Conditions and agree to be bound by\n                                them.\n                            </Typography>\n                            <div\n                                style={{\n                                    ...Style.sectionRow,\n                                    marginBottom: '0px',\n                                }}\n                            >\n                                <Typography variant=\"body\" gutterBottom>\n                                    Student/Parent/Guardian(if under the age of\n                                    18):\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        width: '200px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Date:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        width: '200px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                            </div>\n                            <div\n                                style={{\n                                    ...Style.sectionRow,\n                                }}\n                            >\n                                <Typography variant=\"body\" gutterBottom>\n                                    Manager or Company representative:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        width: '200px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                                <Typography variant=\"body\" gutterBottom>\n                                    Date:\n                                </Typography>\n                                <Typography\n                                    variant=\"body\"\n                                    style={{\n                                        ...Style.underlineMid,\n                                        width: '200px',\n                                    }}\n                                    gutterBottom\n                                ></Typography>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useReactToPrint } from 'react-to-print';\nimport PadFormToPrint from './PadFormToPrint';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getStudent, getConfigInfo } from '../helper/db';\n\nconst root = {\n    display: 'flex',\n    flexDirection: 'column',\n    '@media print': {\n        display: 'block',\n        pageBreakBefore: 'always',\n    },\n};\n\nconst divButton = {\n    marginLeft: '40px',\n    marginRight: 'auto',\n};\n\nconst button = {\n    width: 'fit-content',\n    marginLeft: '5px',\n    marginRight: '5px',\n};\n\nconst PadForm = () => {\n    const componentRef = useRef();\n\n    const pageStyle = `\n        @page {\n            size: 216mm 280mm;\n        }\n  `;\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n        pageStyle: pageStyle,\n    });\n    const [curStudent, setCurStudent] = useState({});\n    const [config, setConfig] = useState({\n        academyname: '',\n        address: '',\n        phone: '',\n    });\n    const history = useHistory();\n    const { id } = useParams();\n\n    useEffect(() => {\n        const setStudentCall = async () => {\n            const result = await getStudent(id);\n            if (!result) {\n                history.push('/error');\n                return;\n            }\n            setCurStudent(result);\n            const resultConfig = await getConfigInfo();\n            setConfig(resultConfig[0]);\n        };\n        setStudentCall();\n    }, []);\n\n    return (\n        <div style={root}>\n            <PadFormToPrint\n                ref={componentRef}\n                curStudent={curStudent}\n                config={config}\n            />\n            <div style={divButton}>\n                <Button\n                    onClick={() => history.push(`/detailstudent/${id}`)}\n                    variant=\"contained\"\n                    style={button}\n                >\n                    Back\n                </Button>\n                <Button\n                    onClick={handlePrint}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={button}\n                >\n                    PRINT\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default PadForm;\n","import React from 'react';\nimport { Typography, TextField, InputAdornment } from '@material-ui/core';\nimport moment from 'moment';\nimport { calculateAge } from '../helper/util';\nimport './PadFormToPrint.css';\n\nconst Style = {\n    renderPage: {\n        width: '100%',\n        minWidth: '900px',\n        maxWidth: '900px',\n        fontSize: '16px',\n        paddingRight: '10px',\n        paddingLeft: '10px',\n    },\n    header: {\n        width: '100%',\n        textAlign: 'right',\n    },\n    section1: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginTop: '50px',\n    },\n    subsection: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '50%',\n    },\n    divider: {\n        width: '100%',\n        borderBottom: '1px solid black',\n        marginTop: '30px',\n        marginBottom: '30px',\n    },\n    section2: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    section2header: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    section2row: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: '10px',\n        marginBottom: '30px',\n    },\n    dividerSemi: {\n        width: '100%',\n        borderBottom: '0.5px solid #bdbdbd',\n    },\n    section3: {\n        textAlign: 'right',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    totalPrice: {\n        marginTop: '20px',\n    },\n    section4: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginTop: '40px',\n    },\n};\n\nexport default class InvoiceToPrint extends React.Component {\n    render() {\n        const formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n        });\n\n        const { curStudent, config, items, invoiceDate, dueDate } = this.props;\n        return (\n            <div\n                className=\"print-container\"\n                style={{ margin: '0', padding: '0' }}\n            >\n                <div style={Style.renderPage}>\n                    <div style={Style.header}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Invoice\n                        </Typography>\n                        {invoiceDate && (\n                            <Typography variant=\"body\" gutterBottom>\n                                {moment(invoiceDate, 'YYYY-MM-DD').format(\n                                    'DD MMM YYYY'\n                                )}\n                            </Typography>\n                        )}\n                    </div>\n                    <div style={Style.section1}>\n                        <div style={Style.subsection}>\n                            <Typography variant=\"body\" gutterBottom>\n                                BILL TO\n                            </Typography>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {curStudent.parent1firstname +\n                                    ' ' +\n                                    curStudent.parent1lastname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {curStudent.studentaddress}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {curStudent.city +\n                                    ', ' +\n                                    curStudent.province +\n                                    ' ' +\n                                    curStudent.postalcode}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {curStudent.parent1email}\n                            </Typography>\n                        </div>\n                        <div style={Style.subsection}>\n                            <Typography variant=\"body\" gutterBottom>\n                                FROM\n                            </Typography>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {config.academyname}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {'Business Number: ' + config.businessnumber}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {config.address}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {config.city +\n                                    ', ' +\n                                    config.province +\n                                    ' ' +\n                                    config.postalcode}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {config.email}\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                {config.phone}\n                            </Typography>\n                        </div>\n                    </div>\n                    <div style={Style.divider}></div>\n                    <div style={Style.section2}>\n                        <div style={Style.section2header}>\n                            <Typography variant=\"body\" gutterBottom>\n                                INVOICE ITEMS\n                            </Typography>\n                            <Typography variant=\"body\" gutterBottom>\n                                AMOUNT\n                            </Typography>\n                        </div>\n                        {items.map((item, index) => {\n                            return (\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                    }}\n                                >\n                                    <div style={Style.section2row}>\n                                        <Typography variant=\"body\" gutterBottom>\n                                            {item.name}\n                                        </Typography>\n                                        <Typography variant=\"body\" gutterBottom>\n                                            {formatter.format(item.price)}\n                                        </Typography>\n                                    </div>\n                                    {items.length - 1 !== index && (\n                                        <div style={Style.dividerSemi} />\n                                    )}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <div style={Style.divider}></div>\n                    <div style={Style.section3}>\n                        <Typography variant=\"body\" gutterBottom>\n                            {'Subtotal (excl. GST) ' +\n                                formatter.format(\n                                    items?.reduce((prev, current) => {\n                                        return (\n                                            parseFloat(prev) +\n                                            parseFloat(current.price)\n                                        );\n                                    }, 0)\n                                )}\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom>\n                            {'5% GST ' +\n                                formatter.format(\n                                    items?.reduce((prev, current) => {\n                                        return (\n                                            parseFloat(prev) +\n                                            parseFloat(current.price)\n                                        );\n                                    }, 0) * 0.05\n                                )}\n                        </Typography>\n                        <Typography\n                            variant=\"h4\"\n                            gutterBottom\n                            style={Style.totalPrice}\n                        >\n                            {formatter.format(\n                                items?.reduce((prev, current) => {\n                                    return (\n                                        parseFloat(prev) +\n                                        parseFloat(current.price)\n                                    );\n                                }, 0) * 1.05\n                            )}\n                        </Typography>\n                        <Typography variant=\"body\" gutterBottom>\n                            PAYMENT DUE{' '}\n                            <b>\n                                {dueDate &&\n                                    moment(dueDate, 'YYYY-MM-DD').format(\n                                        'DD MMM YYYY'\n                                    )}\n                            </b>\n                        </Typography>\n                    </div>\n                    <div style={Style.section4}>\n                        <div style={Style.section2header}>\n                            <Typography variant=\"body\" gutterBottom>\n                                PAYMENT DETAILS\n                            </Typography>\n                        </div>\n                        <Typography variant=\"body\" gutterBottom>\n                            Please bring a void cheque or bank info for ongoing\n                            membership.\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport {\n    Button,\n    FormControl,\n    FormLabel,\n    TextField,\n    Typography,\n    Select,\n    MenuItem,\n    InputLabel,\n    OutlinedInput,\n} from '@material-ui/core';\nimport { useReactToPrint } from 'react-to-print';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getStudent, getConfigInfo, addItem, getItems } from '../helper/db';\nimport InvoiceToPrint from './InvoiceToPrint';\n\nconst root = {\n    display: 'flex',\n    flexDirection: 'column',\n    '@media print': {\n        display: 'block',\n    },\n};\n\nconst divButton = {\n    marginLeft: '40px',\n    marginRight: 'auto',\n};\n\nconst button = {\n    width: 'fit-content',\n    marginLeft: '5px',\n    marginRight: '5px',\n};\n\nconst newItem = {\n    display: 'flex',\n    flexDirection: 'row',\n};\n\nconst label = {\n    marginBottom: '5px',\n};\n\nconst textField = {\n    width: '200px',\n    marginBottom: '30px',\n    marginRight: '30px',\n};\n\nconst addButton = {\n    width: '50px',\n    height: '40px',\n};\n\nconst list = {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '10px',\n};\n\nconst eachItemAttribute = {\n    marginRight: '20px',\n};\n\nconst deleteButton = {\n    width: '35px',\n    height: '25px',\n};\n\nconst invoiceDate = {\n    width: '150px',\n    marginRight: '30px',\n};\n\nconst divider = {\n    width: '100%',\n    borderBottom: '1px solid black',\n    marginTop: '30px',\n    marginBottom: '30px',\n};\n\nconst selectField = {\n    width: '200px',\n    marginBottom: '30px',\n    marginRight: '30px',\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nconst Invoice = () => {\n    const componentRef = useRef();\n\n    const pageStyle = `\n        @page {\n            size: 216mm 280mm;\n        }\n  `;\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n        pageStyle: pageStyle,\n    });\n    const [curStudent, setCurStudent] = useState({});\n    const [config, setConfig] = useState({\n        academyname: '',\n        address: '',\n        phone: '',\n    });\n    const history = useHistory();\n    const { id } = useParams();\n    const [item, setItem] = useState([]);\n    const [itemName, setItemName] = useState('');\n    const [price, setPrice] = useState('');\n    const [date, setDate] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [newAddItem, setNewAddItem] = useState('');\n    const [listItems, setListItems] = useState([]);\n\n    useEffect(() => {\n        const setStudentCall = async () => {\n            const result = await getStudent(id);\n            if (!result) {\n                history.push('/error');\n                return;\n            }\n            setCurStudent(result);\n            const resultConfig = await getConfigInfo();\n            setConfig(resultConfig[0]);\n\n            const result2 = await getItems();\n            if (!result2) {\n                history.push('/error');\n                return;\n            }\n            setListItems(result2);\n        };\n        setStudentCall();\n    }, []);\n\n    const handleAdd = () => {\n        if (itemName === '' || price === '') {\n            return;\n        }\n        const temp = [...item];\n        setItem([...temp, { name: itemName, price }]);\n        setItemName('');\n        setPrice('');\n    };\n\n    const handleDelete = (index) => {\n        const temp = [...item];\n        temp.splice(index, 1);\n        setItem([...temp]);\n    };\n\n    const handleSave = async () => {\n        if (newAddItem === '') {\n            return;\n        }\n        await addItem({ itemname: newAddItem });\n        const result = await getItems();\n        if (!result) {\n            history.push('/error');\n            return;\n        }\n        setListItems(result);\n        setNewAddItem('');\n    };\n\n    return (\n        <div style={root}>\n            <div style={newItem}>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\" style={label}>\n                        Item Name\n                    </FormLabel>\n                    <TextField\n                        id=\"name\"\n                        value={newAddItem}\n                        onChange={(e) => setNewAddItem(e.target.value)}\n                        style={textField}\n                    />\n                </FormControl>\n                <Button\n                    onClick={() => handleSave()}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={addButton}\n                >\n                    SAVE\n                </Button>\n            </div>\n\n            <div style={newItem}>\n                <FormControl style={selectField}>\n                    <InputLabel id=\"selectItemNameLabel\">Item</InputLabel>\n                    <Select\n                        labelId=\"selectItemNameLabel\"\n                        id=\"selectItemName\"\n                        value={itemName}\n                        onChange={(e) => setItemName(e.target.value)}\n                        label=\"Item\"\n                    >\n                        {listItems.map((item) => (\n                            <MenuItem value={item.itemname}>\n                                {item.itemname}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\" style={label}>\n                        Price\n                    </FormLabel>\n                    <TextField\n                        id=\"price\"\n                        value={price}\n                        onChange={(e) => setPrice(e.target.value)}\n                        style={textField}\n                    />\n                </FormControl>\n                <Button\n                    onClick={() => handleAdd()}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={addButton}\n                >\n                    Add\n                </Button>\n            </div>\n\n            {item.length > 0 && (\n                <Typography variant=\"h6\" gutterBottom style={eachItemAttribute}>\n                    List of added items\n                </Typography>\n            )}\n\n            {item.length > 0 &&\n                item?.map((eachItem, index) => {\n                    return (\n                        <div style={list} key={index}>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                style={eachItemAttribute}\n                            >\n                                {eachItem.name}\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                gutterBottom\n                                style={eachItemAttribute}\n                            >\n                                {eachItem.price}\n                            </Typography>\n                            <Button\n                                onClick={() => handleDelete(index)}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                style={deleteButton}\n                            >\n                                DELETE\n                            </Button>\n                        </div>\n                    );\n                })}\n            <div\n                style={{ ...newItem, marginTop: '30px', marginBottom: '30px' }}\n            >\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\" style={label}>\n                        Invoice date\n                    </FormLabel>\n                    <TextField\n                        id=\"invoiceDate\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)}\n                        type=\"date\"\n                        style={invoiceDate}\n                    />\n                </FormControl>\n\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\" style={label}>\n                        Due date\n                    </FormLabel>\n                    <TextField\n                        id=\"dueDate\"\n                        value={dueDate}\n                        onChange={(e) => setDueDate(e.target.value)}\n                        type=\"date\"\n                        style={invoiceDate}\n                    />\n                </FormControl>\n            </div>\n            <div style={divider}></div>\n            <InvoiceToPrint\n                ref={componentRef}\n                curStudent={curStudent}\n                config={config}\n                items={item}\n                invoiceDate={date}\n                dueDate={dueDate}\n            />\n            <div style={divButton}>\n                <Button\n                    onClick={() => history.push(`/detailstudent/${id}`)}\n                    variant=\"contained\"\n                    style={button}\n                >\n                    Back\n                </Button>\n                <Button\n                    onClick={handlePrint}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={button}\n                >\n                    PRINT\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default Invoice;\n","import React from 'react';\n\nimport Login from './component/Login';\nimport Base from './component/Base';\nimport AddStudent from './component/Adding/AddStudent';\nimport ActiveStudents from './component/ActiveStudents';\nimport DetailStudent from './component/DetailStudent';\nimport CopyStudent from './component/Adding/CopyStudent';\nimport EditStudent from './component/Adding/EditStudent';\nimport ErrorPage from './component/ErrorPage';\nimport IdCard from './print/IdCard';\nimport Attendance from './component/Attendance';\nimport AttendanceKeypad from './component/AttendanceKeypad';\nimport AttendanceTable from './component/AttendanceTable';\nimport InactiveStudents from './component/InactiveStudents';\nimport Absent from './component/Absent';\nimport Home from './component/Home';\nimport TakePicture from './component/TakePicture';\nimport { RecoilRoot } from 'recoil';\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Settings from './component/Settings';\nimport BeltUpdate from './component/BeltUpdate';\nimport ActiveStudentsByBelt from './component/ActiveStudentsByBelt';\nimport PadForm from './print/PadForm';\nimport Invoice from './print/Invoice';\n\nfunction App() {\n    const basePath = '/academyhelper';\n    return (\n        <Router>\n            <RecoilRoot>\n                <div>\n                    <Switch>\n                        <Route path={`${basePath}/signin`}>\n                            <Login />\n                        </Route>\n                        <Route path={`${basePath}/addstudent`}>\n                            <Base title=\"Add student\">\n                                <AddStudent />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/activestudents`}>\n                            <Base title=\"Active students\">\n                                <ActiveStudents />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/activestudentsByBelt/:belt`}>\n                            <Base title=\"Active Students by Belt\">\n                                <ActiveStudentsByBelt />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/detailstudent/:id`}>\n                            <Base title=\"Student detail\">\n                                <DetailStudent />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/copystudent`}>\n                            <Base title=\"Add student\">\n                                <CopyStudent />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/editstudent/:id`}>\n                            <Base title=\"Edit student\">\n                                <EditStudent />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/printidcard/:id`}>\n                            <Base title=\"Print ID Card\">\n                                <IdCard />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/printpadform/:id`}>\n                            <Base title=\"Print PAD Form\">\n                                <PadForm />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/printinvoice/:id`}>\n                            <Base title=\"Print Invoice\">\n                                <Invoice />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/attendance`}>\n                            <Base title=\"Attendance\">\n                                <Attendance />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/attendancekeypad`}>\n                            <AttendanceKeypad />\n                        </Route>\n                        <Route path={`${basePath}/attendancetable`}>\n                            <Base title=\"Attendance Table\">\n                                <AttendanceTable />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/inactivestudents`}>\n                            <Base title=\"Inactive students\">\n                                <InactiveStudents />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/takepicture/:id`}>\n                            <Base title=\"Take Picture\">\n                                <TakePicture />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/settings`}>\n                            <Base title=\"Settings\">\n                                <Settings />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/beltupdate`}>\n                            <Base title=\"Belt Update\">\n                                <BeltUpdate />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/absent`}>\n                            <Base title=\"Absent Students\">\n                                <Absent />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/error`}>\n                            <Base title=\"Error\">\n                                <ErrorPage />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}/home`}>\n                            <Base title=\"Dashboard\">\n                                <Home />\n                            </Base>\n                        </Route>\n                        <Route path={`${basePath}`}>\n                            <Base title=\"Dashboard\">\n                                <Home />\n                            </Base>\n                        </Route>\n                    </Switch>\n                </div>\n            </RecoilRoot>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n    <React.StrictMode>\n        <CookiesProvider>\n            <App />\n        </CookiesProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}