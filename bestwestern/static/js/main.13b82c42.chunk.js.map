{"version":3,"sources":["styles.js","App.js","registerServiceWorker.js","index.js"],"names":["styles","theme","styleButton","width","textField","marginLeft","spacing","unit","marginRight","marginTop","App","props","handleStartTimeChange","loc","event","selectedTime","target","value","split","totalMin","handleTotalMin","tempStartTime","state","startTime","setState","handleTimeCalculation","handleEndTimeChange","tempEndTime","endTime","handleNightStartTimeChange","nightStartTime","handleNightEndTimeChange","nightEndTime","handleDayChange","bind","handleNightShiftChange","listCreator","calculateDays","handleReset","locationHelper","handleCalculate","handleDiff","handleTotalMinFormat","selectedDay","undefined","days","workingHours","holidayHours","overtimeHours","isHoliday","isNightShift","nightWorkingHours","totalWorkingHour","totalOvertimeHour","totalHolidayHour","day","this","limit","push","moment","format","add","classes","key","className","Checkbox","checked","onChange","handleHolidayChange","TextField","id","label","type","InputLabelProps","shrink","inputProps","step","Divider","tempIsHoliday","tempIsNightShift","hour","min","parseInt","hr","Math","floor","minute","start","end","nightStart","nightEnd","totalNightMin","Number","round","diff","tempOvertimeHours","tempWorkingHours","tempHolidayHours","reduce","total","next","indexOf","AppBar","position","color","Toolbar","Typography","variant","onDayChange","placeholder","classNames","container","overlay","formatDate","parseDate","map","Paper","elevation","component","Button","root","onClick","Component","withStyles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.13b82c42.chunk.js","sourcesContent":["const styles = theme => ({\r\n  styleButton: {\r\n    \"margin-left\": \"10px\",\r\n    \"margin-right\": \"10px\",\r\n    \"margin-top\": \"20px\",\r\n    width: \"120px\"\r\n  },\r\n  textField: {\r\n    width: 130,\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    marginTop: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// Material-ui\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Day picker\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\n\n// Date format\nimport moment from \"moment\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDayChange = this.handleDayChange.bind(this);\n    this.handleNightShiftChange = this.handleNightShiftChange.bind(this);\n    this.listCreator = this.listCreator.bind(this);\n    this.calculateDays = this.calculateDays.bind(this);\n    this.handleStartTimeChange = this.handleStartTimeChange.bind(this);\n    this.handleEndTimeChange = this.handleEndTimeChange.bind(this);\n    this.handleNightStartTimeChange = this.handleNightStartTimeChange.bind(\n      this\n    );\n    this.handleNightEndTimeChange = this.handleNightEndTimeChange.bind(this);\n    this.handleTimeCalculation = this.handleTimeCalculation.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.locationHelper = this.locationHelper.bind(this);\n    this.handleCalculate = this.handleCalculate.bind(this);\n    this.handleTotalMin = this.handleTotalMin.bind(this);\n    this.handleDiff = this.handleDiff.bind(this);\n    this.handleTotalMinFormat = this.handleTotalMinFormat.bind(this);\n\n    this.state = {\n      selectedDay: undefined,\n      days: undefined,\n      workingHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      holidayHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      overtimeHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      startTime: [\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540\n      ],\n      endTime: [\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540\n      ],\n      nightStartTime: [\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020\n      ],\n      nightEndTime: [\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020\n      ],\n      isHoliday: [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false\n      ],\n      isNightShift: [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false\n      ],\n      nightWorkingHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      totalWorkingHour: undefined,\n      totalOvertimeHour: undefined,\n      totalHolidayHour: undefined\n    };\n  }\n\n  handleDayChange(day) {\n    this.setState({ selectedDay: day });\n    this.setState({\n      days: this.calculateDays(day)\n    });\n  }\n\n  calculateDays(day) {\n    let days = [];\n    let limit = 14;\n    while (limit !== 0) {\n      days.push(moment(day).format(\"MMM DD\"));\n      day = moment(day).add(1, \"d\");\n      limit = limit - 1;\n    }\n    return days;\n  }\n\n  listCreator(day) {\n    let loc = this.locationHelper(day);\n    const { classes } = this.props;\n\n    return (\n      <li key={day} className=\"styleLi\">\n        <div className=\"date\">\n          {day}\n          <div className=\"isHoliday\">\n            Holiday?\n            <Checkbox\n              checked={this.state.isHoliday[loc]}\n              onChange={this.handleHolidayChange.bind(this, loc)}\n            />\n          </div>\n        </div>\n        <div className=\"timePickerContainer\">\n          <TextField\n            id={\"ST\" + loc}\n            label=\"Start Time\"\n            type=\"time\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true\n            }}\n            inputProps={{\n              step: 60 // 1 min\n            }}\n            onChange={this.handleStartTimeChange(loc)}\n            value={this.handleTotalMinFormat(this.state.startTime[loc])}\n          />\n          <TextField\n            id={\"ET\" + loc}\n            label=\"End Time\"\n            type=\"time\"\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true\n            }}\n            inputProps={{\n              step: 60 // 1 min\n            }}\n            onChange={this.handleEndTimeChange(loc)}\n            value={this.handleTotalMinFormat(this.state.endTime[loc])}\n          />\n        </div>\n\n        {/* Night Shift */}\n        <div className=\"isHoliday\">\n          Night Shift?<Checkbox\n            checked={this.state.isNightShift[loc]}\n            onChange={this.handleNightShiftChange.bind(this, loc)}\n          />\n        </div>\n        {this.state.isNightShift[loc] && (\n          <div className=\"timePickerContainer\">\n            <TextField\n              id={\"NST\" + loc}\n              label=\"Start Time\"\n              type=\"time\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 60 // 1 min\n              }}\n              onChange={this.handleNightStartTimeChange(loc)}\n              value={this.handleTotalMinFormat(this.state.nightStartTime[loc])}\n            />\n            <TextField\n              id={\"NET\" + loc}\n              label=\"End Time\"\n              type=\"time\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                step: 60 // 1 min\n              }}\n              onChange={this.handleNightEndTimeChange(loc)}\n              value={this.handleTotalMinFormat(this.state.nightEndTime[loc])}\n            />\n          </div>\n        )}\n\n        <div className=\"timePickerDisplayContainer\">\n          {this.state.workingHours[loc] !== 0 &&\n            `WH: ${this.state.workingHours[loc]}`}\n          {this.state.overtimeHours[loc] !== 0 &&\n            ` / OH: ${this.state.overtimeHours[loc]}`}\n          {this.state.holidayHours[loc] !== 0 &&\n            `HH: ${this.state.holidayHours[loc]}`}\n        </div>\n        <Divider />\n      </li>\n    );\n  }\n\n  handleStartTimeChange = loc => event => {\n    let selectedTime = event.target.value.split(\":\");\n    let totalMin = this.handleTotalMin(selectedTime[0], selectedTime[1]);\n    let tempStartTime = this.state.startTime;\n    tempStartTime[loc] = totalMin;\n    this.setState({ startTime: tempStartTime });\n\n    this.handleTimeCalculation(loc);\n  };\n\n  handleEndTimeChange = loc => event => {\n    let selectedTime = event.target.value.split(\":\");\n    let totalMin = this.handleTotalMin(selectedTime[0], selectedTime[1]);\n    let tempEndTime = this.state.endTime;\n    tempEndTime[loc] = totalMin;\n    this.setState({ endTime: tempEndTime });\n\n    this.handleTimeCalculation(loc);\n  };\n\n  handleNightStartTimeChange = loc => event => {\n    let selectedTime = event.target.value.split(\":\");\n    let totalMin = this.handleTotalMin(selectedTime[0], selectedTime[1]);\n    let tempStartTime = this.state.nightStartTime;\n    tempStartTime[loc] = totalMin;\n    this.setState({ nightStartTime: tempStartTime });\n\n    this.handleTimeCalculation(loc);\n  };\n\n  handleNightEndTimeChange = loc => event => {\n    let selectedTime = event.target.value.split(\":\");\n    let totalMin = this.handleTotalMin(selectedTime[0], selectedTime[1]);\n    let tempEndTime = this.state.nightEndTime;\n    tempEndTime[loc] = totalMin;\n    this.setState({ nightEndTime: tempEndTime });\n\n    this.handleTimeCalculation(loc);\n  };\n\n  handleHolidayChange(loc, event) {\n    let tempIsHoliday = this.state.isHoliday;\n    tempIsHoliday[loc] = event.target.checked;\n    this.setState({ isHoliday: tempIsHoliday });\n\n    this.handleTimeCalculation(loc);\n  }\n\n  handleNightShiftChange(loc, event) {\n    let tempIsNightShift = this.state.isNightShift;\n    tempIsNightShift[loc] = event.target.checked;\n    this.setState({ isNightShift: tempIsNightShift });\n\n    if (!tempIsNightShift[loc]) {\n      let tempStartTime = this.state.nightStartTime;\n      let tempEndTime = this.state.nightEndTime;\n      tempStartTime[loc] = 0;\n      tempEndTime[loc] = 0;\n      this.setState({\n        nightStartTime: tempStartTime,\n        nightEndTime: tempEndTime\n      });\n\n      this.handleTimeCalculation(loc);\n    }\n  }\n\n  handleTotalMin(hour, min) {\n    return 60 * parseInt(hour, 10) + parseInt(min, 10);\n  }\n\n  handleTotalMinFormat(min) {\n    let hr = Math.floor(min / 60);\n    if (hr < 10) {\n      hr = `0${hr}`;\n    }\n    let minute = min % 60;\n    if (minute < 10) {\n      minute = `0${minute}`;\n    }\n    return `${hr}:${minute}`;\n  }\n\n  handleDiff(start, end, nightStart, nightEnd) {\n    let totalMin = start > end ? 24 * 60 - start + end : end - start;\n    let totalNightMin =\n      nightStart > nightEnd\n        ? 24 * 60 - nightStart + nightEnd\n        : nightEnd - nightStart;\n    return Number(Math.round((totalMin + totalNightMin) / 60 + \"e2\") + \"e-2\");\n  }\n\n  handleTimeCalculation(loc) {\n    let startTime = this.state.startTime[loc];\n    let endTime = this.state.endTime[loc];\n    let nightStartTime = this.state.nightStartTime[loc];\n    let nightEndTime = this.state.nightEndTime[loc];\n\n    let diff = this.handleDiff(\n      startTime,\n      endTime,\n      nightStartTime,\n      nightEndTime\n    );\n\n    // Check overtime and holiday\n    let tempOvertimeHours = this.state.overtimeHours;\n    let tempWorkingHours = this.state.workingHours;\n    let tempHolidayHours = this.state.holidayHours;\n\n    if (this.state.isHoliday[loc]) {\n      // If it is holiday, working hours AND holiday hours\n      // TODO: visit this for holiday AND overtime\n      tempHolidayHours[loc] = diff;\n      tempWorkingHours[loc] = 0;\n      tempOvertimeHours[loc] = 0;\n    } else if (diff > 8) {\n      tempOvertimeHours[loc] = Number(Math.round(diff - 8 + \"e2\") + \"e-2\");\n      tempWorkingHours[loc] = 8;\n      tempHolidayHours[loc] = 0;\n    } else {\n      tempOvertimeHours[loc] = 0;\n      tempWorkingHours[loc] = diff;\n      tempHolidayHours[loc] = 0;\n    }\n\n    this.setState({\n      workingHours: tempWorkingHours,\n      overtimeHours: tempOvertimeHours,\n      holidayHours: tempHolidayHours\n    });\n  }\n\n  /**\n   ** Reset\n   **/\n  handleReset() {\n    this.setState({\n      workingHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      holidayHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      overtimeHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      startTime: [\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540\n      ],\n      endTime: [\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540,\n        540\n      ],\n      nightStartTime: [\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020\n      ],\n      nightEndTime: [\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020,\n        1020\n      ],\n      isNightShift: [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false\n      ],\n      nightWorkingHours: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      totalWorkingHour: undefined,\n      totalOvertimeHour: undefined,\n      totalHolidayHour: undefined\n    });\n  }\n\n  /**\n   ** Calculate\n   **/\n  handleCalculate() {\n    const { workingHours, holidayHours, overtimeHours } = this.state;\n    const totalWorkingHour = Number(\n      Math.round(workingHours.reduce((total, next) => total + next) + \"e2\") +\n        \"e-2\"\n    );\n    const totalHolidayHour = Number(\n      Math.round(holidayHours.reduce((total, next) => total + next) + \"e2\") +\n        \"e-2\"\n    );\n    const totalOvertimeHour = Number(\n      Math.round(overtimeHours.reduce((total, next) => total + next) + \"e2\") +\n        \"e-2\"\n    );\n\n    this.setState({ totalWorkingHour, totalOvertimeHour, totalHolidayHour });\n  }\n\n  /**\n   ** Helpers\n   **/\n  locationHelper(day) {\n    return this.state.days.indexOf(day);\n  }\n\n  render() {\n    const {\n      selectedDay,\n      days,\n      totalWorkingHour,\n      totalOvertimeHour,\n      totalHolidayHour\n    } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"primary\" className=\"styleAppbar\">\n          <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\">\n              Best Western Diamond Inn\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <DayPickerInput\n          onDayChange={this.handleDayChange}\n          placeholder=\"Choose the first day\"\n          classNames={{ container: \"dayPickerContainer\", overlay: \"overlay\" }}\n          format=\"MMM DD, YYYY\"\n          formatDate={formatDate}\n          parseDate={parseDate}\n          inputProps={{ className: \"dayPickerInput\" }}\n          value={selectedDay}\n        />\n        <ul className=\"styleUl\">\n          {days && days.map(day => this.listCreator(day))}\n        </ul>\n\n        {totalWorkingHour || totalHolidayHour ? (\n          <Paper className=\"paper\" elevation={1}>\n            <Typography component=\"pre\">\n              {`Total working hours: ${totalWorkingHour}\\nTotal overtime hours: ${totalOvertimeHour}\\nTotal holiday hours: ${totalHolidayHour}`}\n            </Typography>\n          </Paper>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          classes={{ root: classes.styleButton }}\n          variant=\"outlined\"\n          onClick={this.handleReset}\n          color=\"secondary\"\n        >\n          Start Over\n        </Button>\n        <Button\n          classes={{ root: classes.styleButton }}\n          variant=\"outlined\"\n          onClick={this.handleCalculate}\n        >\n          Calculate\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}